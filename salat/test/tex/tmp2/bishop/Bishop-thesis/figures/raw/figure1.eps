%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.96dev Copyright 2007 Radical Eye Software
%%Title: C:/Documents and Settings/Jens/My Documents/Physics/PostDoc/VacuumRabi/nature/figure-convert/fig2.dvi
%%CreationDate: Mon Jun 09 09:49:52 2008
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 55 589 300 741
%%DocumentFonts: Helvetica Helvetica-Bold CMMI9 CMSY9 CMSS9 MSBM10 CMSS8
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: "C:\Program Files\MiKTeX 2.7\miktex\bin\dvips.exe"
%+ "C:/Documents and Settings/Jens/My Documents/Physics/PostDoc/VacuumRabi/nature/figure-convert/fig2.dvi"
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.06.09:0949
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSS8
%!PS-AdobeFont-1.1: CMSS8 1.0
%%CreationDate: 1991 Aug 20 17:34:12
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 97 /a put
dup 114 /r put
readonly def
/FontBBox{-65 -250 1062 761}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B17498276F99362748F6E97327D
7CDA3F577075245561191667923D37830EEC37A0161B6A3EC8FDD63CDB8C8D4A
AD39C69A264813FA79C25E85AC95C71AB965F6C14A4A1ACF5BAE27A5F628B172
47CF6A12008558438874199C237501B72BFEFE64B606A327623BD8B217E8349B
7BF5C2204F4DE2FB269845D5714A31151A66064419CCC46A63F8E54B92B5070F
F3D80801DBEC658CD3926B15BE3D4B7591FC36663D3C03926D0D3637B53BCC22
73C8E0001B416A65FC67C53383458DC125FD14FFE391BBBA321B5AF5DEF85DBA
5A5FD759FD2AAB6AF31CDA6202EBB763E3CAC1FF91B1175EF818FD662B60C642
738A3B4F27822A0560BB7C08AD42F976351FA5225A0E6D56C7FBE06A809CC468
FB2E90C84FA56C62CB7BBFC80BD94F5C6BC0EED14433A4A356D2D15DC87B34B0
99A100502F55A32D736757642F9F9719FD9E35A1430A72C254614B4000113705
5474FCFCE47A6978F69FA467B818309E61598EC18089BB924C393B3FF1280D72
E1969BF5AD3D1074FF13202D4CC324396BAFF2397DAB2C516C656B6B240F023D
0C28AEBB957C23012C971D444DD1C4C2BD7DCE178D46CF8EC20DCAB9A930907E
124F3B3B8D16DBF166BA40CD780DE2155BF21EC2C3E0073422E54A09DF4A9491
63B55882122F6B40490D81533CB0E16967E32D4F5B5D5D14F578BAA0137704A3
2386E6AA4E3D160559EB245625253380CE64C30B41B573D7249B0B6157B02EFE
0D82006B4CF4A294FDDAB5B87CAD0B2D3367F9138EE0922FBDD3D7BFE4C6B297
762F95616A75D0FC2D2E22D79172DF1A3287C67BD27658A448FC61077B3033AA
5479ABBF5CD952B5E19E437CD642CDC43FBB26115DCC019FEB3195F1598E1294
051A7BD6A811C8FA858E0D38DFB74D7DB20CB3D88B2DA6B61732BB5729D44045
F20052778ACFC765B0437A1C41467C820559901AB43FCBFC90B58A92C7F3A49B
0C23CFC7D9B0E0E0840A9D832C23EBCF1CB06FC3B839F6EB6D73DD2B57BB6258
83994775BA02D64CB994D20C9C76870CB9D40240979C4145E511FBC59347D2FD
6EF5172CD3891E0F93EF917F15C37E87A9FDD53150C9C803D5F997D297EBEB2D
F47A15A5AF46CD729CBE44E1F7D265C42793B52B668E5BCF2B7F223E835712DE
951DFEB9B07AFF54800A2284CCF1394D9C3AD988948A048911AA62303BCA13BF
F51049001B6C626C7C97219E59A0E3CCE540C224E4A1675AF63DD8EE2D38D552
1C0DCBB2BF08909908F1A849A21033C09B65BE84FE92F00F50BCE76ECF646653
0DB96EAA3DA6B9B829BE618FFB5B165B68FCE8619CC0D3546A0424DC953E4C8D
7C6753B4E6EFFDC2054BE445EF445A774811BDF76DB95EBA9B68B72616BA2362
71058D62D9BC8CD0B866D619EF4D994E493E9D6574268A8590B0A10A779A4974
24106F0196B8171555D1FFA63C1E01B0C7D316D2E5C8FEE083B9EE323525F95C
9CA5D3381525DAB044DEA6A80D835693DD6555F2080ADF81CF0BC1C0849A1009
A555E3C047F5970346E1BF8D3B0C95E3D1682DABB6339E7248531D81EE5E679E
4F2DA88C5C787A7533C678F99FFFAB9F63D4DE197FC41CEB31D069E92EAA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.1: MSBM10 2.1
%%CreationDate: 1993 Sep 17 11:10:37
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSBM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 126 /planckover2pi1 put
readonly def
/FontBBox{-55 -420 2343 920}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6A66A4000A13D5F68BFF326D
1D432B0D064B56C598F4338C319309181D78E1629A31ECA5DD8536379B03C383
D10F04E2C2822D3E73F25B81C424627D3D9A158EAB554233A25D3C6849ABA86F
1F25C1667CB57D2E79B7803083CB7CC0616467F68450D9A3FEAB534EB9721003
DBFEEFD050F3AC3492F5C74162A9A531ECEC0F47610B4940E946D21CAA771D30
A6C27ECBA11708CC46C62396BF9D1990D579D0C394899D24FE7A4382EA18E7E1
160E7283AF5BE17254790628E79FCC206F28B5566075B3A5697D5209062544FF
D85FD89D6F43D6588B242AB2666B5D2861CD38A8CE676503EDFAE84D12A71E77
8405E468FE391F4F3F50D2C57ED55512036B0DB8E76A7EF413ED08673E56DE2C
16A3B65CD478433C0D2F9FEC4E662D54DAA43CFA6957D2A9AF8979BE06F70B68
ED4C8C493D6DAC4971A3F1D010A7726D084EC1074FECD7D12D72AE16C26194AF
21AF5774D9B860EEE8608D34F150092F09C19959BAA670022B9A9F263CD391E3
74DD1D1B4CD4D75273CAA4E37F68C631723E08FA35AD34C0AFB4621AE6689861
854D16CE1C375FD159A337E221A6FF1CFFB5693A0623E7EBB58C2969F590D081
AD92DD9E5322E26D6A15023664AC73A355998BCC48ADD0E7A4BC79790519606F
A1FEF6075033BCD422EE8233B83D1E7C20043280D531223D5AD4D5B41669F884
95CE4D6DDE819B588742B930C579EDF743F2C74C95F717FAA6154FADC3FE2975
F59CFB1C1A29059487E75C48505BAEAD7145667D4E18E46E610C868A257173ED
0D30EAA4C090854DD8378E92D0A376226EA7DA63798F247BAC770FE26D70E72F
90CCFAADF118304646955B0310C65F6CA51BEEEF87AFFE294D08C443763E774F
6D9084AADD9B5175E00B2F604E41AFCDD689D1460E4593EBEC70754B5AA0E1E0
E747B95030EA8F2E64BC6A3F72C78161E4587E9A2F07EF67C58BA1716B02841C
2C783041F33EB120815D5BA93EE651EF20BA617071F10474721FBB5C7B63714E
7CA2E84C85A394582E91E02706A7A3060DC1B09CB791DBEED281E9E6A6FE7249
CEF41DB1F3C4EF351DD5A765EBC9615606C86C7E96CC1C17371BADCE8E48187D
36B0A8E33F6564951D587AEB7056AD9D126F32670F19966EA4E68799162737D9
B0282F5A2E51EB81E9B1EEE9E4FD642A3D94E096BA7B040E9F9FC1F223E34E67
DF2D12D9967CDA8BCCFEF3EF90B956A50C981E47BA2468A5AFEC9061650EFC08
65B8B14670F3C754181C79AC8F94E7895E88CDBE94B861D39F591FEA940B4B3E
429B25F12330809AECD1793A584740E95CB0922F291CA6E9120CF72617C12825
9C62FF4BC91BAA50518A7DBE8D417464EA78CC4F4B200EEE8A104B534000EC33
11E2D28E1E04B458B6E8E68EA48468857846103EABBF0C2B82881FD907D0A341
4C45E223D329A61324635F26A99A94B59D9EB974
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS9
%!PS-AdobeFont-1.1: CMSS9 1.0
%%CreationDate: 1991 Aug 20 17:34:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
dup 103 /g put
readonly def
/FontBBox{-63 -250 1027 760}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BDCEEA888D07B439DBD4E8B4C9
D198C0387612A3C669D6A672BF4726B90213C2EC063317A043B6447FEC896BD0
598D0AA1DDB874B7D72F3E89529FFB544C16C41F04AB6972093A91C201589D61
A8FE417702E200FC26E47359B881D02F7CB42A5B21F90424F82FEFEEC5ED59F6
C48895523098D73036537A54639526839F785D7157E08DDBCD96AEF023667FC0
1921070EA097CAAAE9E4E9D5D21DB9363555AD932858E23A534F7DA9F2F0E79E
9D46C0D5EDC452179B6A328A52412F2FC548B03A056663DCE243A441EADC0D63
8FF6D19EEC71606A368EC3EF1DB8FA9117DB6169ED3BD792D9AB2811378E50A8
535232683CFB2C5E0F3C350CD294AF9804B7B88FC848D962819940AC88247756
BD1EDE31C397076351447974F91BA99BF34081C1A6C65879C36934E1494108BF
FA61B57E3A8154D7CBB6AC9B671700FE227AECF9160145957A2E629C3931CA4D
42147A6CA42FE5E0947DD2EEEB0A640EF9C73800A59F0F0B6B75C3C9C863ADED
9627DEBC218141FA414913611061B3EBB46AA393CDB074A40492FDEAD1207838
A13CA709C2CDE567B9688DC5D4D622ACD752A7D6DE3F79002ACDA6AE41EEC084
BB1D3C962725E1AB05922698C598FEAB0D02ACFD97CD8BAD811193660043AEEE
659C18DADD0E614A401FA0F0A485AD4A47DB73FDB3D2B294145FFBCCB994FD2E
68B4ECB3364B377FF6243ED93921F3B3DFDAC3CE9CB3E2B23115BD45FF1F6734
70DDC37F712D78543A8A8A561DAF3303DD8F3742EB700043207D04A782D94952
1E57EC7E5858AA91F07524F2EF2A129D38CAF8698126B8981537CD4DC45AB99E
EE571322DA22745F552675C785D0A8898ADEDD5DA7388C11DF0FF3D3B051D132
4BC2C2B9F244F03AF14EC19FEE2D43FAD477203C3B7622E5872918720C16D6AA
ECA5D5AA944FACF741CEF702B4FEE7D42D8E7B6B0AE5FCA25B575AF5A9017C44
B3218FC3581157A1850D781C27A82DF49773B66AE7BE87A019F3A1ECA2DF735D
4311E81E823EBC06E702B2FB81973037C34FB95696D8887148AA617ADD9C7A47
716BF2E2C273A364E100B29F0D990FC41F11410B9BDA77C9148944C34DE7EA05
0A57C2C329EF93FC4A4919AB463C3147208C6F75290BECDDFEBD06802CD1003C
2DCE712DCADD36B6C769999619C30C2C259304C53C6EA8E1F2375BF8AD205E4F
C732252945A2DF1193A8402B05A9E0CF6877A7151C7B2D36FE42EEEA87A41666
832B06DB953030EEE67EA9762F7CCC9F6A8EDD41260655E4DE9DA0380D91BA97
47B453D24E0114F2E5139F89A2D52B4272811AC4DF7AF1D8917653A759FBB7D0
88596E67965F67EC77661E62EA1602B2CBB1265CC0DDE909BCE1495EAE2ED363
D9A9C0FB0002E24E842AC855B799390A206BD890862B370FBA8C4E602E9DFAF1
1DC1067F838731A966377C29E82945338FE971A9375453410BC7CDA07A799463
341685AA3FFFA0BCB6F76809869B3FFE0E1F7E0E73A73089A5E2BCCD41C1092F
2E2879AE795D41FC3A48BCCCC4E4D33FC78F4C0C4AB63CF2D53D9BFB550BE930
CAE11C623E0FDEF3DDA77042A85B56C70FF4BBE5A94A301A7A81576EFC6CE807
46A5949B4D48CC9CFD744D2EAC796F477513CE46EEF6484C365226C1B8D10ACC
F674027C21415789286FC92BE22B4FA971876D3E6B049D08CBE105995CBB8539
0E7ABE7D8999846D240C62BB5F216A5D98022FA97A602D5C2F2657F121DEE338
C10D4CD55D14EDFFE30249A8F134C55FE84C8B49E3465DA3C747ACDB42390E1B
0957A20AB2CFF578116BEAECA8918EEBD42ECEB54D446AA20267B2FEB867745C
1A36AE16DF1794BDDCEE6611B68DDF8FC819FDE8D1A578F2265A22A10F524D98
A37CD71F501261A3D230891CB61FDF3292F490C3C7942150CBDD11EE7171DE6A
3B25F45EECB6ED901899B54E27335583CBA8588CA360766619BEF8A8BCCDEA58
B79EC1CC3E95A0FE4CB979453320DC9ADD4C7230C57F836486032BF063C5E6CB
1832E2233E89DE168DA7A26637278ADC3201A92EF8AD76B47B264EB400864681
CE440184C21E0F1B6B41CF81D2E44F4DA624EEAEC7CED1DD9E71EA5765C35910
335643E86FE58DDEC38507E2DB5ED51F2995562A42ADF000948B2C5B836B8A88
C8FA81E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /arrowup put
dup 35 /arrowdown put
dup 39 /similarequal put
dup 105 /angbracketright put
dup 106 /bar put
dup 112 /radical put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BB61B4D03DC35E012508F23D3F3933
910C2482E589A311EFBB2391760544A2BE90AC72D5AB298E052C6D246D946844
77D8F03606A24D18C9812C4E44D799844B8154F569F17AA1AF500AC9C2A92F52
B7DFCB40F7BD2C8B384EED7774E83CD869E4D5D82052A4BBD03E0B5E5202181B
90200EEAC766596343B028598D4C64ED5B927C591A1B8B4F0474F4A58E94AC7D
92F1E5275456BD12FCC81CAD449C461ADC3F4333A44E38A2055F515891DA8C87
02B6A1314AF68EF25EE2464BABBD8DAFD5CC4A244023A45E646295F0CE1BE87D
99B173085FF5E20E513B46C06C3D56499ACBDD8124C1445272C5CBE0442751BB
1F4B409C083145F21DEAE3AA4A9EFDE277D32EB520DB59E49C5FE2FBAEA3CC1C
B95D8153FA7D6327728E7BFCA6E7C375FEF331733623793848482BB7834098C4
404473BEEF977F9C789165441852C81101BDF032250E3A885737DA1CEB0BDD82
546A1571A5CFA6E1F49BDA521CA931278AE5511AA0FF65665C19F6F73FF82284
10E8885C76B91513BEBA10BEEE69028E09A785F93FF57D817FBB4AD7D235252F
51E5567F5A4E61C1C1A7C57465F875FC7991303AFE23A1CC951BACA98617A6D9
69C23B8F4E99D646765790A264B5861180E8E2FA18ECC6D1F957D741B5C39B5C
4BF7533F43E43758CAC81BEA28254D1E2D09684E0072FC92A8E664E2F9C58E77
2E15D89096AE3C6A6FE80F3165FE7F30235CF61E4FB4DAA1913A94439DE9C51B
B3B0816121AF54AD117A21A7E1D6A2C79705973FD412098430B5D7C404B90E90
16DCA11EEED7B223A992184F580DE271972DBAA9C913E8A76C13CBBC63CEBF92
B866F607DC79F5CFB9375F2373E383C7540C3E950C30203C3C7451D62DB405C7
F4C76C59B34DF00647F8EFD1BF677772B42224F61BAFD455D8E23DB8144A32ED
0EC94D72CCE6052284621F1708DAF0750A4ECD6E12F24765FA56BDDF3CEEE730
84105600C0BE949A80F4A27B3A7891E28DB83B5FE9F078BE736CC2CE261AB376
0F1304D87F46BBB8F77A037C6FF2BEF7280297DDB598CF1AB7C2EEC9014B9102
0840AD8B2224911A8072F217711327D93472930A4A3E8B10F786F5573B107C63
36B5B83ACDB9B55839F5B65336D51D69F12240047BC8E1A247FCD4A26A62E59F
2DD56E060E3E30E8A3E994B9D4FE1084DEF6C0446E73A6CDBEAA31C87C530297
952F7D9DCC0F1E980B37468933083F0586B27800507BA3D24113ED41EB800DB5
DBEF1FDC20FF17C504E76AB6E710DDD4024C26AA37DDD021A43A486E7303A9EA
9C098BC1A774109087ECE853
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 33 /omega put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
9529E6D9D4238002BBC255BC62959D6F3381FE06E0621B879D5FE5B541D45A1E
759A6E7DC32B1D1632368D09A97039DF255B6492B1B2B7E2C1434E8306ECA7D3
5A79B6D614B4979F10988BC76ED53A5F45315CD7DA216221F842FD0F3E050DD2
BAC23C984D506D8F7D614BCB6B244F5F41321549BB0BD041FBF3053307168680
3435E9C9456846433DF6235D79BA455E54E35184F4201C39CD23E101C93E9EB4
675FB030C4BC9DCD6D58E289E62C911BF40BFA30BEDA2C4DA5D450FC0A8FE159
41AD68F039FFECEC7F34467C67427BCB10A553CF1F54C6A9274C32AE53EE28C8
279BE6166D0F6CEEEB59BC7ABD03370BE87707583038793A221D8D8BF81FBB73
422BBFFA2E9054717FD263C6BF7C0446EB5F67CA3560CDBD3744010986B31C9B
79877367EF2F9B706175E7D1BC01065B928552E643297FE49A292B3271A3C117
14EE7171A0C6D67023AF621185FD707DF174AE6675DA25484FDDEFCAA92AA791
A11F0905C10E8752FBC453A33C005B5386E8C1AA3CAFE4F13151A05B43B00ABA
4C8546F5269237306D65CC1F5790D68CCFF94F4369A54460F6C1935ED064CF72
BE326E5A33D39AE0A2CBA1BCB8A675F0C84AD449BC661B1288FBFF089EFD4253
5A4F1989B15E65113287CAFF2B54AAE70FEEDC657BC56F029782A60739C7C35E
8DB1EEF71458F4CDE8B0608A0674A0980DF10A3B3D67756F2A1D8F7A7F87F1B4
A949C82B19AC2A6B3805634118C7BEA9D4DA645C7E88E25256CD7A85B3997893
67C72B13D32A314B2F5127E2BDB4F68BDD4EA1BE8536F01C381E4D43EC6CB552
0A3062AB50BF7113F295744CABE703E2556DED1035CCA0423C40E749E670370F
284EFEF5BE04DA945A7890BF5C686FB67CB34B3A081F24085316C14D2936700A
F7A5119BD64CBAD59B8D720D34F62C700AFD719310C5E73799FCE75C1EF527C5
45568F1439AEBD5C1AA4C4380D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600
(C:/Documents and Settings/Jens/My Documents/Physics/PostDoc/VacuumRabi/nature/figure-convert/fig2.d)
@start /Fa 141[18 16[25 48[26 48[{}3 49.8132 /CMSS8 rf
/Fb 129[42 126[{}1 74.7198 /MSBM10 rf /Fc 152[38 41[60
10[38 38 38 3[21 44[{}6 74.7198 /CMSS9 rf /Fd 143[64
5[21 30 65[60 3[38 38 34[{}6 74.7198 /CMSY9 rf /Fe 222[48
21[49 11[{}2 74.7198 /CMMI9 rf /Ff 157[61 55 97[{
 TeXBase1Encoding ReEncodeFont }2 99.6264 /Helvetica-Bold
rf /Fg 137[37 42 21 37 25 1[42 42 42 62 17 3[42 42 21
42 1[37 42 42 13[50 2[50 80[{ TeXBase1Encoding ReEncodeFont }19
74.7198 /Helvetica rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -150 1089 a
 /PSfrag where{pop(s)[[0()1.0 0]](u)[[1()1.0 0]](p)[[2()0.8 0]](t)[[3()0.8
0]](z)[[4()1.0 0]](n0)[[5()1.0 0]](n1)[[6()1.0 0]](n2)[[7()1.0 0]](m0)[[8()1.0
0]](m1)[[9()1.0 0]](o1)[[10()1.0 0]](db)[[11()1.0 0]](a)[[12()1.0 0]](b)[[13()1.0
0]](f)[[14()0.8 0]](g)[[15()0.8 0]]16 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -150
1089 a @beginspecial 0 @llx 0 @lly 563 @urx 346 @ury
2450 @rwi @setspecial
%%BeginDocument: levels2.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: levels2.eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0
%AI9_PrintingDataBegin
%%For: Jens Koch
%%CreationDate: 5/28/2008
%%BoundingBox: 0 0 563 346
%%HiResBoundingBox: 0 0 562.9786 345.9166
%%CropBox: 0 0 562.9786 345.9166
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: levels2.eps 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2008-01-22T12:43:10Z</xap:CreateDate>
  <xap:ModifyDate>2008-05-28T18:26:08Z</xap:ModifyDate>
  <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
  <xap:MetadataDate>2008-05-15T23:50:51-04:00</xap:MetadataDate>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>160</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FVskkcYBkY&#xA;ICQoLECrMaKN+5JoMVXYq7FXYq7FUt1rzFpGii0/SErrJfTC2s4IYpbiaWUqX4pFAkkjcURmY8aK&#xA;oJNBiqZYq7FXYq7FXYq7FXYq7FWK6b/5NPzD/wBsPRP+ozVsVZVirsVdirsVaZlVSzEKqirMdgAO&#xA;5xVC2Or6TfmljewXZMMVyBBKkn7i4DGCX4SfglCNwbo1DTFUXirsVdirsVdirsVdirsVdirsVdiq&#xA;U+ZLW7uLeyW2to7p47+0lkWWOKUJHHOrSSqJXjCsiglWWrKd1UnFU2xV2KuxV2KpD5z8nad5t0lN&#xA;K1GeaG0EyTv9XEPNjGaqA8scrRGu4eIpIv7LDFU+xV2KuxV2KuxV2KuxV2KsV03/AMmn5h/7Yeif&#xA;9RmrYqyrFXYq7FXYqp3ECT28sD14SoyNTrRhQ0xVhn5c/lzeeUZ7mS51ZdTV9P03SbRVtvqxittJ&#xA;WZIeZ9Wb1HZbj4mAUVFQBWgVZvirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirFdN/8mn5h/7Yeif9RmrYqyrFXYq7FUp8yXV3b29k1tcx2ryX9pFI0skUQeOSdVki&#xA;UypIGZ1JCqtGY7KwOKptirsVdirsVUobqCaSeOJuT20ginFCOLlFkA3G/wAEinbFVXFXYq7FXYq7&#xA;FXYqkXmXzx5X8sy20Wt3htWu0llhpDNKPStzGs0jtEkgjSMzpyZ6AVrWlcVUvLnmi91TXdd0e8sE&#xA;tJdFeECeGf6zHItwrugYmOH05VRVZ4/ioHX4jXFWRYq7FXYqgNd17StB0yTU9VmMFlE8UbyKkkp5&#xA;zyrDEoSJXdi0kiqKDvirEdQ/OLy6dKN/oKnVvQvLC1voJBNYvFFqF59RE4W4hDSenOGRlUfbVlJU&#xA;qaKs9xV2KuxV2KuxV2KuxVCPq+kpqcekvewLqksRuIrAyoLhoVPEyLFXmUB25UpiqLxVium/+TT8&#xA;w/8AbD0T/qM1bFWVYq7FXYqtkjjkAEihwCGAYA0ZTVTv3BFRiq7FXYq7FXYqkPlzUtOu9U8wJa3U&#xA;Nw8d8hdYpFcqPqVuu4UmnxKR9GKp9irsVdirsVdirsVYr56sPy6mijl85z2dtFNbXWnQyXt19UVo&#xA;LwRm5iUmSIEuIE3HxCm1N8vwaXLmJGOMpkfzQT9yDIDmlXlzzB+THlw3v6J81abGNQma5uln1v60&#xA;pmclndVubmURlyxLcKV79BmV/JGs/wBRyf6SX6mPiR7wnP8Ays/8tP8AqbdG/wC4ha/9VMf5I1n+&#xA;o5P9JL9S+JHvDv8AlZ/5af8AU26N/wBxC1/6qY/yRrP9Ryf6SX6l8SPeEZpXnfyZq92LLSdf07Ub&#xA;wqWFtaXcE8pVep4RuzUGU5uz9RijxTxzjHvMSB9oSJg8i15vl8oppCp5ru7W00t7i3dHvbhbWNri&#xA;3lW6gAdnjqyvAH413471FcqwabJmPDjjKZ7ogn7kkgc2HJL/AM4/IJgutaIBcNE8w/SsfxGDUJNU&#xA;j/3ftxvJ3l28eJ+GgzL/AJI1n+o5P9JL9THxI94ZN/ys/wDLT/qbdG/7iFr/ANVMf5I1n+o5P9JL&#xA;9S+JHvDv+Vn/AJaf9Tbo3/cQtf8Aqpj/ACRrP9Ryf6SX6l8SPeEVpvnvyPql7HYaZ5i0y+vpuXo2&#xA;tteW80r8VLtxRHZjRVJNB0yrL2dqccTKeOcYjqYyA+dJEweqeZhsnYq7FXYqxu4m8jJ5mGt3Gp28&#xA;etW1u+nktflFSL1Obxtb+qIeXMbsU5bDfYYqyKOSOWNZI2DxuAyOpBVlIqCCOoOKsX03/wAmn5h/&#xA;7Yeif9RmrYqyrFXYqpXcM01tJFDO1tK4ok6KrMh8QHDKfpGCQsM8UhGQJHEO7v8Aluk36B8w/wDU&#xA;y3X/AEj2X/VHKvDl/OPyH6nP/OYP9Qj/AKaf/FO/QPmH/qZbr/pHsv8Aqjj4cv5x+Q/Uv5zB/qEf&#xA;9NP/AIp36B8w/wDUy3X/AEj2X/VHHw5fzj8h+pfzmD/UI/6af/FO/QPmH/qZbr/pHsv+qOPhy/nH&#xA;5D9S/nMH+oR/00/+KTq4ieWF40meB2FBNGELr7jmrr96nLnWvPDovlr8tb651WzOoXV95q1Bpbmy&#xA;t47HldXCW8k8hLNHbKiJHDLLT1F35UqWoVWceX9atNd0HTdbs1dbTVLWC9tllAWQR3EayoHALANx&#xA;behOKo/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUDrutWGh6Lf6zqDFLHTreS6unVSzCOFC7&#xA;EKNyaDFWHQ/mXdah5h8uWdhafVbW/wBSvdJ1u0vlBu4J7bTpL6MRvBLJBQqikkM4o1NiDirP8Vdi&#xA;rC/O/lzU9S81+TtRtdan06HTr+RmsokVopy1rKzerU71jjaMeAckb0xVmmKsV03/AMmn5h/7Yeif&#xA;9RmrYqyrFXYqpXcdxLbSR2831edhSObiH4nx4nY4JA1szxSiJAyHEO7kk36H80/9TB/05w/1yrgn&#xA;/O+xz/zWm/1H/Zyd+h/NP/Uwf9OcP9ceCf8AO+xfzWm/1H/Zyd+h/NP/AFMH/TnD/XHgn/O+xfzW&#xA;m/1H/Zyd+h/NP/Uwf9OcP9ceCf8AO+xfzWm/1H/ZyTq4SZ4XSGT0ZSKJLxDcT48Tscuda8rtLTX/&#xA;AMxZfMXl7zNDdaZpWk6gsdnM9pZv9chEdVfjcxXMatVvUHwclDIQQwOKvTtK0yy0rS7PS7GP0rKw&#xA;gjtbWKteMUKBEWp8FUYqisVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQWsXcdpp8sstpNfRkc&#xA;HtbeMTO6v8JHAkVG+/tluHFxy4bEfM7BBNMVstW8vWENpBY+TL60gsHeWxig0yKNIJJFZHeJVICM&#xA;yyMCV6gnxzM/k/8A2zH/AKb9jHj8imP+OP8Av39a/wCkP/m/H+T/APbMf+m/YvH5F3+OP+/f1r/p&#xA;D/5vx/k//bMf+m/YvH5FjXmC+82a55t8qS6P+ltH0uyvWk1iCewhKSxtEyKRJIsjJ9oo24+Fiw+J&#xA;RkMmh4Yk8eM13SSJeT0vMFkxXTf/ACafmH/th6J/1GatirKsVdirTuiKWdgqjqxNAMUgE7BR/SFh&#xA;/wAtMX/Br/XI8Q72zwZ/zT8nfpCw/wCWmL/g1/rjxDvXwZ/zT8nfpCw/5aYv+DX+uPEO9fBn/NPy&#xA;d+kLD/lpi/4Nf648Q718Gf8ANPyV8k1JVo3/AB0de/5jk/6gbbFU1xV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsV03/AMmn5h/7Yeif9RmrYqyrFXYqp3Ftb3MDwXMSTwSC&#xA;kkUih0YeBU1BwEA7FnDJKBEokgjqEt/wh5T/AOrLYf8ASLD/AM05X4MP5o+Tl/ynqv8AVcn+ml+t&#xA;3+EPKf8A1ZbD/pFh/wCacfBh/NHyX+U9V/quT/TS/W7/AAh5T/6sth/0iw/804+DD+aPkv8AKeq/&#xA;1XJ/ppfrd/hDyn/1ZbD/AKRYf+acfBh/NHyX+U9V/quT/TS/Wm2WuC7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWK6b/AOTT8w/9sPRP+ozVsVZVirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdiqReZfPHlfyzLbRa3eG1a7SWWGkM0o9K3MazSO0SSCNIzOnJnoBWtaVxV&#xA;b5b80T6vrHmPTJ7L6nJoF8lkHEolE6S20V1HLQKvCqTj4d6eOKp/irsVdiqA13XtK0HTJNT1WYwW&#xA;UTxRvIqSSnnPKsMShIld2LSSKooO+KsE1/8APnyhZad9Z0jnq1yvqyS2bJPZOtva211dXEo+sRLy&#xA;4Lp80dAP71eBKkNRV6RDLHNCk0Z5RyKHRtxVWFQd8VXYq7FXYq7FXYq7FXYq7FWK6b/5NPzD/wBs&#xA;PRP+ozVsVZVirsVdirsVdirsVdirsVSvR3dtQ1wMxIS9QKCeg+pWxoPpOKppirsVdirsVdirsVYr&#xA;56sPy6mijl85z2dtFNbXWnQyXt19UVoLwRm5iUmSIEuIE3HxCm1N8vwaXLmJGOMpkfzQT9yDIDmh&#xA;rLzv+UVje6hfWvmfRY7rVZUnv5P0lbn1JI4Ut0ajSkLSKFFotOnjmV/JGs/1HJ/pJfqY+JHvCN/5&#xA;Wf8Alp/1Nujf9xC1/wCqmP8AJGs/1HJ/pJfqXxI94d/ys/8ALT/qbdG/7iFr/wBVMf5I1n+o5P8A&#xA;SS/UviR7wjNK87+TNXuxZaTr+najeFSwtrS7gnlKr1PCN2agynN2fqMUeKeOcY95iQPtCRMHkWvN&#xA;8vlFNIVPNd3a2mlvcW7o97cLaxtcW8q3UADs8dWV4A/Gu/HeorlWDTZMx4ccZTPdEE/ckkDmwee2&#xA;/wCcc7gOJtV0NxISXrqyb8p7m4cf70dHk1C45DoyuUNU+HMv+SNZ/qOT/SS/Ux8SPeGW/wDKz/y0&#xA;/wCpt0b/ALiFr/1Ux/kjWf6jk/0kv1L4ke8O/wCVn/lp/wBTbo3/AHELX/qpj/JGs/1HJ/pJfqXx&#xA;I94RWm+e/I+qXsdhpnmLTL6+m5eja215bzSvxUu3FEdmNFUk0HTKsvZ2pxxMp45xiOpjID50kTB6&#xA;p5mGydirsVdirsVdirFdN/8AJp+Yf+2Hon/UZq2KsqxVZJPBFT1ZFStSORA2HXriqhPqVrHbyyRS&#xA;JPJGrFYVkQFmANEBYhQSVI3OAnZlCIMgCaHf3JL/AIr1Slf0FNQ9P9LsfYf7/wD8offlXiS/mn5j&#xA;9bsPyeD/AFeP+ln/AMS0fNupAVOhygdam7sOlCf9/wDgMfEl/NPzH61/J4P9Xj/pZ/8AEt/4q1Xl&#xA;x/QM3Lpx+t2Na1p/v/xx8SX80/MfrX8ng/1eP+ln/wAS0PNmpncaFKRSv+9dh0oDX+/8CMfEl/NP&#xA;zH61/J4P9Xj/AKWf/Ep+9xILT10geWTgGFvGY+ZJH2QzMqf8NTLg66Qo7MF8lw+dNG1XzPfeabi5&#xA;uNKvbw3WnyTJp0UdpaRwgFpjbuHZwqBDswogbqzYoZT5S8zWXmfy9Za9YRyRWOoJ6tqJjEXaMkhW&#xA;PovKq8gK8S3JejBWBAVTfFUHrWrWej6Pe6tetwtLCCS5nb/IiQu1PegxVKPy581f4r8j6Nr7AJcX&#xA;tshvIgCOFynwXCUO44yqwxVkeKpPa+aNNufNeoeWo2Bv9OtLW9mFf2bp5kC08V9AE/6wxVOMVdir&#xA;sVdirsVdirsVdirCr3y3qjfmzpmvrrU6Wi6XdW50YIptyiyQcid682eVW5f5CjpXFWa4q7FXYq7F&#xA;XYq7FXYqxXTf/Jp+Yf8Ath6J/wBRmrYqyrFXkPmLzNYaBoVp5h1C2W8k1S6s4r2egLD67IkbSDgJ&#xA;iyxIfhRa1ChQe+bIVCIdEeLLM796a6Tf6Fr2mzXGksvHlJbu7QGKWGdKhlkhnRXR0LV4unfwOT2k&#xA;NmEfRMGQsbGr5j3jv8lL/Dl//wBXeTb/AJdrP2P++v8AJGUeBP8Ann5R/U7L+UNN/wAo8P8AT5P+&#xA;LcfLV8RQ6tIR0obaz8Kf7698fAn/ADz8o/qX+UNN/wAo8P8AT5P+Lb/w7qHLl+l5eXWv1a0r1r/v&#xA;rxx8Cf8APPyj+pf5Q03/ACjw/wBPk/4toeW74dNWkG1P95rPpQD/AH14DHwJ/wA8/KP6l/lDTf8A&#xA;KPD/AE+T/i2R+XYriKe402KdoLeaH1oniVA0cwekzqGDxj1OatT06cuR6tlWphVFGiy8Vjp+Nko8&#xA;kX/nHXNX8z2PmCK/sdP067Nrpxm+olbm2khG8noxc1f4vU2I+FlG5DVxnPZn5f0W00LQNN0SzZ3t&#xA;NKtYLK3eUhpDHbxrEhcqFBbiu9AMVR+KuIB64qlPlIAeVdGoKVsbYn5+iuKptirzfQfJulWn56+Z&#xA;/MEUlwdQn0bTJJeUhaM/Wp7yJ14EfZVdOh4+FD4nFXpGKuxV2KuxV2KuxV2KuxVKrn/lKtO/5gb7&#xA;/k9aYqmuKuxV2KuxV2KuxV2KsV03/wAmn5h/7Yeif9RmrYqyrFXkut+WZvMPlXSrS3vjY3NrLYX9&#xA;vdtEZqSWjpMvKNzETUr3p8s2hjYDz8Z8Mia70d5U8uTaJBftdXYvtQ1S8kv764SL0IzK6JEFji5y&#xA;lFWOFBu7HvXDGNMck+Ku4J5k2t2KuxV2KonRFP6djauwtZwR7mSH/J9v5h8j2w9X0dl2dzl8Ez0c&#xA;EajrpIoDfIR7j6lbDMN2iaYq7FXYqlXlP/lFdG/5gbb/AJMriqa4qxXTf/Jp+Yf+2Hon/UZq2Ksq&#xA;xV2KuxV2KuxV2KuxVgHn78wtc0bUU0/QdJvL6aGKWe7f9FapdQyOgiaCzhnt4hCr3Akb99zZIilH&#xA;Wp2VZVc/8pVp3/MDff8AJ60xVNcVdirsVdirsVdirsVYrpv/AJNPzD/2w9E/6jNWxVlWKsD0YodI&#xA;sSlOBt4ivHiBTgKU4/D922bccnm5cy8Yh/P7zJqt99Z0bSLWPRLQK2oRXJne8ciC8vXS3AEK8xBp&#xA;ssRDLQTEULoORxvHJ5Db8fqc06SIG53/ALB+n5Jzp354z6xpct9p1jp8AguLSFkvL6SN5Iri+htX&#xA;uoYjbI5tKT7TvxIaoaPahkM1hgdLRok/Ly9/PyQ9n+fl1H5WttW1PQSLgCwhvPRkcRG5v4JLpFi/&#xA;dyN8dukbLyNA8qIzUDSBGfayEnSeqge/7Px9ia+Yvzhu/Lus6ra3+kLd2Vlei2jkspme4WJbS3vp&#xA;JJoWjpQW0lxKGDUJiKf5eGWWjyYQ04kBR/F1+pNPI/5mN5jvptPvdJl02+iADRx+tdpHIGmSSK5l&#xA;SCOO3cfVuaCQjnG8bDduIlDJfRhlwcIsG3oWicP07HX7f1Wem4rT1Ia7cuXh0U/MbVo1fRy+zucv&#xA;gyfMN2jsVdirsVeKj89rfyteaZoWoaJd3mkR21lby61YRzyLbTvYRXRiuBJFHDVYX9U+lM5Ee5UU&#xA;xV7VirFdN/8AJp+Yf+2Hon/UZq2KsqxV2KuxV2KuxV2KuxVg/nb8tr7X9QS/0rzJqOh3DBku1ivN&#xA;RMDKQipJDbw3ltDFLGI/hPBozyYvG5pRVkdz/wApVp3/ADA33/J60xVNcVdirsVdirsVdirsVYrp&#xA;v/k0/MP/AGw9E/6jNWxVlWKsE0jl+irLn9v0IuVSTvwFd2Ln72Pzzbjk83Lm8o8s/n7davoiXX6B&#xA;aW8RrG0nWOSSJDe6hBKYF4vE5RJLiJUBDPRJUapPJVojnscnLnpKPPv+xX0H89m1jS/M+rw6ZDFZ&#xA;6BBYPFDcXH1bnJdzTJKJZ5kRU9MIqlRGf3gdVMlUJY5rBPciel4SBfO0Dqv/ADkJfQaPJeW2hQJK&#xA;FmiRri8kAa6jjMypDB9XW4nVoZIJK8EoJKSGOlSDn25Mo6QXVphN+e7fV9Ua00aK6l0mYxTkXjrC&#xA;6x2N5fSvFKbb46ppzGKi8XWSNiy1ZVPjeTEaXlZ5/rA7/N6J5Z1qXWdJF5Pbra3CXF1aXECSGZFl&#xA;srmS1k4SFIiyl4SVJRTTsMuibDjTjwmk/wBEP+5yMUO9rMa702kh9uP3/wBcxdX0c/s7nL4MmzDd&#xA;o7FXYq7FXzforLc/nHpXl3UrCG+0nWrFWeKWO6WSNI9Agjkm4JcJatFKHMAuXgaQ/vIKhFXFX0hi&#xA;rFdN/wDJp+Yf+2Hon/UZq2KsqxVK9I8z6Fq97qFlp12txdaXJ6N9GFdeD83j2LABx6kMiclqOSsv&#xA;VSMVTTFXYq7FXYq7FXYqlVz/AMpVp3/MDff8nrTFU1xV2KuxV2KuxV2KuxVium/+TT8w/wDbD0T/&#xA;AKjNWxVlWKsD0cMNJsg1Cwt4qkCgrwHQcU/4iPkM245PNy5lGYWLsVQun6ZZafHKlpH6YnmkuJiW&#xA;Z2eWVuTszMWY+A32FANgBgApJkTzRWFDsVROiU/Tsewr9Vno3w8h+8h2G3Kh7028e2Yer6Oy7O5y&#xA;+DJ8w3aOxV2KuxV8/wDlbQvM8P51aBqaaVLLot3YxyT6jJZWsqQRxaJBDG8WotA08Syzl4vqyTKQ&#xA;ys5qspGKvoDFWK6b/wCTT8w/9sPRP+ozVsVQX5jfljB51ltpZL76nJZWV/a2j+iJjFcXht2iu0Jd&#xA;OL27W1Vpvv1FN1UR5N/Lq08sazq2pRXbXH1/lHawlOH1eB7y6v2jLcm9Q+vfyfEQPhCjsSVWX4q7&#xA;FXYq7FXYq7FWG3nmsL+a2m+WxpV+0p0u7uDqSpF9TEbyQbmT1eezQ8COFasvY1CrMsVdirsVdirs&#xA;VdirsVYrpv8A5NPzD/2w9E/6jNWxVlWKvFPOmkapq3kbSrHTrCPU4pHtTfQFbSR/qyxEl4FvGe1L&#xA;h+H2ywC1I5GmbOYJiHQ4pATJJr5/o3Tr8vrDWtP8kaHY62CNVtbOKG7VnWRg6LxoXUsrEAUqCclj&#xA;BERbXmIMyRyZDk2t2KuxV2KonRH/ANzqIG/49ZiVqf8AfkNDTlTx6qfmN64er6Oy7O5y+DJ8w3aO&#xA;xV2KuxVKvKf/ACiujf8AMDbf8mVxViuq6t+Zll54eS20W91Py0sqxrDaNpSxNbNacjKDc3NvdfWV&#xA;vfhIJ9P0ug5b4qnOn29wv5l69ctE4t5NF0aOOYqQjPHdaoXVW6EqJFJHao8cVTPWvLPl/XPR/S+n&#xA;w331fl6HrIH4c6cuNfHiMyNPq8uG/DkY3zpBiDzSz/lWX5f/APVgsv8AkUuZP8rar/VJfNj4ce53&#xA;/Ksvy/8A+rBZf8ilx/lbVf6pL5r4ce53/Ksvy/8A+rBZf8ilx/lbVf6pL5r4ce5HaP5P8r6Lctda&#xA;VplvZXDoYnlhQKxQkMVqO1VByjPrs2UcM5GQ80iIHJOMxWTsVdiqVv5V8ru5kfR7FnYks5toSSTu&#xA;SSV74qmmKuxV2KuxV2KuxV2KsV03/wAmn5h/7Yeif9RmrYqyrFWKjy3rFq5gtDBPZKT9XaaV0lSP&#xA;bjG3GOQPx3AataAVqatmXDU0KIddl0FysFbN5f1yeOSCW3s3glVkkVriU8lYMCCPQ6HYfSfDcy1M&#xA;SKI2Rj0U4SEoyqUTYPmErH5a21d9H0wCo6SOdqip/uOvGp/D3GPw4P5gdp+e7Q/1eXzK3/lW0Xp1&#xA;/Qul+pT7PqyUrTx+r/zbdP6Y8OH+YF/Pa/8A1eXzK7/lWtvt/uG0zrv+9k6VP/FHhQ/51Lw4P5gX&#xA;892h/q8vmXf8q1t6j/cNplO59WTwX/ijxLfcPHZ4cH8wL+e7Q/1eXzLKPL+iSaf6s1w6tcShY1jj&#xA;/u44oy3BUJAJPxVY/wBMcmTi9zj4cXBZJuR5pxlbc7FXYq7FUq8p/wDKK6N/zA23/JlcVTXFXYqx&#xA;XzydMsoodU1XzVd+WrHnHahoZLaKBpZnonMzwzUJJ61AAFT0JxV3+BtR/wCpv1z/AIOx/wCyTFXf&#xA;4G1H/qb9c/4Ox/7JMVd/gbUf+pv1z/g7H/skxV3+BtR/6m/XP+Dsf+yTFXf4G1H/AKm/XP8Ag7H/&#xA;ALJMVSf8sPys1jyVZxQ3nnLVtc4KFNtcmM2gA6LHHIs80YH+TLir0LFXYq7FXYq7FXYq7FXYq7FW&#xA;K6b/AOTT8w/9sPRP+ozVsVZVirsVdirsVdirsVdirsVdirsVdirsVWxxxxRrHGoSNAFRFACqoFAA&#xA;B0AxVdirsVSnzR5atPMWmJY3M81qYbm2vbe5tiglins5kuIXX1UljNHjGzIQfDFU2xV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxVJ7XQ5ofOGp66ZFMN9p+n2KQgHkrWU97KzE9KML1QPkcVTjFXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FX/9k=</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/'>
  <xapMM:InstanceID>uuid:7E059B20F622DD118B28A7615A3D8C59</xapMM:InstanceID>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <?xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -345.917 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 345.917 li
562.979 345.917 li
562.979 0 li
clp
[1 0 0 1 0 0 ] concat
466.552 296.547 mo
466.552 303.504 462.164 309.145 456.752 309.145 cv
362.028 309.145 li
356.616 309.145 352.229 303.504 352.229 296.547 cv
352.229 206.264 li
352.229 199.307 356.616 193.667 362.028 193.667 cv
456.752 193.667 li
462.164 193.667 466.552 199.307 466.552 206.264 cv
466.552 296.547 li
false sop
/0 
[/DeviceRGB] add_csa
.67451 .921569 1 rgb
f
1 lw
0 lc
0 lj
4 ml
[2 2 ] 0 dsh
true sadj
466.552 296.547 mo
466.552 303.504 462.164 309.145 456.752 309.145 cv
362.028 309.145 li
356.616 309.145 352.229 303.504 352.229 296.547 cv
352.229 206.264 li
352.229 199.307 356.616 193.667 362.028 193.667 cv
456.752 193.667 li
462.164 193.667 466.552 199.307 466.552 206.264 cv
466.552 296.547 li
cp
0 0 0 rgb
@
2 lw
[] 0 dsh
44.2285 300.667 mo
116.229 300.667 li
0 0 .909804 rgb
@
45.2285 192.667 mo
117.229 192.667 li
@
45.2285 86.6665 mo
117.229 86.6665 li
@
134.229 192.667 mo
206.229 192.667 li
@
134.229 86.6665 mo
206.229 86.6665 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Myriad-Roman Initial
%ADOt1write: (1.0.21)
13 dict dup begin
/FontType 1 def
/FontName /Myriad-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 109 /m put
def
/UniqueID 41987 def
/FontBBox {-46 -250 1126 831} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.1 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/zero <1C60D8A8C9B7BA8F4DE47D81087F07C8C29DE694F434CEABCB7B06FEF
D718676E5BAAE98169477024EBF8F274B8E0BB63321B197E44D9F7019B79D36C
BA8E5BA13181F0C598767F1A47178F25668BBF84EF6C6C7BC5E2097565284A6> |-
/one <1C60D8A8C9B7BA8F155F998EB98B2861EA3AB552B4E45B53DBE462EFF6
0F5DAAAD9CF5ADECEB83D932466E1D32D6D58D0D419C6D3A463E094C> |-
/m <1C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10C44EFEDC74AE4DA
23DDA2D9D4E78E5DFA35F442401F635CE4EC97BE57329CAA46C6A3C6CC0DEBBD
4CB8E8B931000F3668CFD86F5BA98BC18E8B1DBC445FD65D7EC5C67C2E7AD143
C336B225F9618FB19106222772767E98CA6DE74BDC9E6E1E91AF0A9BC200F979
51D7A45F25C7DC5AD757FFD60E2D9250E771B55218F79A54B61A1C40C396FB> |-
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/AOKCDN+Myriad-Roman /Myriad-Roman findfont def
/AOKCDN+Myriad-Roman*1 
[
48{/.notdef}repeat /zero /one 59{/.notdef}repeat /m 146{/.notdef}repeat
] AOKCDN+Myriad-Roman nfnt
AOKCDN+Myriad-Roman*1  [17.136 0 0 -17.136 0 0 ]mfnt sfnt
136.229 180.667 mov
(m0) sh
136.229 75.6665 mov
(m1) sh
1 lw
185.229 199.667 mo
185.229 293.667 li
@
181.228 292.5 mo
185.216 299.408 li
189.205 292.5 li
181.228 292.5 li
f
189.229 200.833 mo
185.241 193.925 li
181.252 200.833 li
189.229 200.833 li
f
0 0 0 rgb
%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.21)
systemdict begin
AOKCDN+Myriad-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7E2CE04450FE67267486674AF8C0F70BF9FE7EBEF3CCBFD60
FE21DD3835CA061B8556F5B08C11724582E14129531E0ADFE9B1341AA1586A74
E953908F695DF17481D304283D3EC8B4FB105E0A182EB4B4B988C16515939A78
A9BE5BF78590194367D3BEFBA6EAE7272EC593C249DD5CA5D2A9503802028F70
CCADDFDC7FB8262DD25D4B1A63222F5A1ED774D199B349DF11160F7E12994460
971E902615F09315> |-
/d <1C60D8A8C9B7E7C1E9415B382C0EF9C60E6021BB1E95C03A2DD89F360B56
63D6551C4C39C5506F0B5916330D8761AFD7B1B7AFD2B01F3C1D7C981BD3EEF9
982FF295D03CBFC77917EEBB4B17167D69AC6077ECAAE3BA44137709C4EEBB4C
2CD3A2B93DCED388AD49D33DBB886AABFB9E38F70AFD27773BBB85AE81FFFF3F
F60B6F91C615C0CD7E0629A20701802295AB92AB907BAA81A72F666D01972B6C
079C75CFEFD41DFFB9EA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AOKCDN+Myriad-Roman /Encoding get
dup 98 /b put
dup 100 /d put
pop
%ADOEndSubsetFont
/AOKCDN+Myriad-Roman*1 
[
48{/.notdef}repeat /zero /one 48{/.notdef}repeat /b /.notdef /d 8{/.notdef}repeat 
/m 146{/.notdef}repeat
] AOKCDN+Myriad-Roman nfnt
AOKCDN+Myriad-Roman*1  [0 -17 -17 0 0 0 ]mfnt sfnt
177.229 256.667 mov
(db) sh
2 lw
385.232 300.667 mo
458.229 300.667 li
1 0 0 rgb
@
385.232 199.667 mo
458.229 199.667 li
@
385.232 187.667 mo
458.229 187.667 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.21)
systemdict begin
AOKCDN+Myriad-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B70FAD2F81CC8BBF4E6A0E18D42D6949A9CEA98F96BB91C9CE
EEE4953B2FD83F05669F83DD630625A425EBBE7CE79373EE324743431698E23D
247D1ABC2EF04C298E5A1B13987DC1A4A8FE49BE4106E5A1C884B4074CFD17B6
1C7D93D85F5BD451BA630B50AF> |-
/u <1C60D8A8C9B794D31DB0E3F9489464903F451A543601831F7E66242BBBF0
F4EE0ED002244C0773C95EF7695812DFE3E4919EA17472C0AEB14F2EE09B4097
AA498C1E815A80FD775F9BDEB667A640A427FBCEED6CD9020699A8564C51425A
7AC7936573DB14EC35F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AOKCDN+Myriad-Roman /Encoding get
dup 115 /s put
dup 117 /u put
pop
%ADOEndSubsetFont
/AOKCDN+Myriad-Roman*1 
[
48{/.notdef}repeat /zero /one 48{/.notdef}repeat /b /.notdef /d 8{/.notdef}repeat 
/m 5{/.notdef}repeat /s /.notdef /u 138{/.notdef}repeat
] AOKCDN+Myriad-Roman nfnt
AOKCDN+Myriad-Roman*1  [19 0 0 -19 0 0 ]mfnt sfnt
168.229 24.6665 mov
(s) sh
421.229 25.6665 mov
(u) sh
1 lw
546.416 190.479 mo
546.416 318.103 li
@
546.416 191.499 mo
542.813 193.69 li
542.731 193.567 li
545.064 187.692 li
545.516 185.645 545.965 183.598 546.416 181.551 cv
546.866 183.598 547.316 185.645 547.768 187.692 cv
550.101 193.567 li
550.039 193.69 li
546.416 191.499 li
f
2 lw
25.2285 213.385 mo
25.2285 314.667 li
@
23.5889 209.606 mo
22.7891 212.251 22.0537 213.971 21.2021 216.093 cv
29.2734 216.093 li
28.9121 215.333 27.6846 212.251 26.8867 209.606 cv
26.0313 206.775 25.4453 204.208 25.2373 202.543 cv
25.0283 204.208 24.4434 206.775 23.5889 209.606 cv
f
143.869 321.667 mo
42.5879 321.667 li
@
147.648 320.027 mo
145.003 319.227 143.283 318.492 141.161 317.64 cv
141.161 325.711 li
141.921 325.35 145.003 324.123 147.648 323.325 cv
150.479 322.469 153.047 321.883 154.711 321.675 cv
153.047 321.466 150.479 320.881 147.648 320.027 cv
f
0 0 0 rgb
%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.21)
systemdict begin
AOKCDN+Myriad-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
/hyphen <1C60D8A8C9B8391559F1821741C613E91B4B8DDFEE52BE990936F42
6B6> |-
/c <1C60D8A8C9B77BBBEC320BF45033662E0846C6D7DAF600F43B542B038E20
8CBA971F48BE27B2158BB1E2C3D179B771A57E9F9ECF2E72DD7D02E301A82C16
6FDB33A21A23FED2727F41D73D06BBBFA1087DD1> |-
/e <1C60D8A8C9B7A66FB4E9209DE48656974FCFF6918874F1136043F0EE8172
F4D638772B3B7F4B5346ABF7A80D482099561C97EACC6F77A33F735C7F526F3A
D9C6597D65CC687E05FF3F3D831F11A36D65E3B2668B0C94721274A694DE1BF9
4BC567A2314B6F8010DDBF586B4DD5CDAA4D122F00> |-
/f <1C60D8A8C9B8469E9C20DEE2402EB10462FB8ED343E7E5BE065243383879
665ADDD6BD67BF0A0B4DBFC88F5348981127AD1490FB5098B3D38CB08864D3DC
89FE62BDAED0207BC14B2CD94B9353002C84DC26FD739AB67D> |-
/g <1C60D8A8C9B7ECD907F624365D438F0401F823B73EA66C47C7E6F281CDBD
29E1DF24F38B45400CB92D1773CBC7D50FCB7995F10368A24D5E58E4D952E59F
C7474F76DA6B34C3DA78B95EC1EF9CF6F4F63352FB906DDA03E2A5E4C969C169
E59D202129BB858FF2389396F4B948C04E75496FBEB13EFD11C93AA00D90D167
33338CEB82FA27143EC77B2C20532B0E3472C981FFF7D331E2727D5298A3DEB5
54E7B9520D81862C9F7096CAAEF2A0777B1B46BAC159DF161C1CC74E3EBE289F
453E0E8DD297E3F240E1B2> |-
/i <1C60D8A8C9B880558B244CAC850BEB233B555EDA76BC260032590C4877AB
0154B33DC5B1DD4601F9D82FFEA58A369847318C317AA33846ABE07FDE553738
DFE267FA7A85BCC35C3AC59D6B3202B942> |-
/l <1C60D8A8C9B880558B244CAC850BEAD7A1E96744C48B1E144A6FA6A2C9> |-
/n <1C60D8A8C9B790A862F793CE5984292368D14C25090F13C59AB6A5160615
285F0ED3CBCE512383C3878835926BFD10B9FCC2427DAD50675BA10B8D3D6CCC
CDC9457848353594E4269162567708094297D619E96D789F6B32D23000A67AC9
3D08E6B7F3B227> |-
/o <1C60D8A8C9B79676B23EC03A282945F6B9BA3FC96B94A352EA6965D03C46
300E822E9400A32C57489C384C0BBF14085A1FE36254CC88C2F26DA80FE4BE81
E3FBC64BBB1CE4A5FCE6AEF371492E9D8504035C> |-
/p <1C60D8A8C9B7E2CE04450FE67267481D8DB94896F6863B80623466B6C88D
6897C0E02D98B8946B015A7E238CCA9D5B21B4F67E511D786F7A2AA529AFFFB9
E65066672A4EBE7BCDA959B83946AFCF9E209612973EC1EE751C8E35AC6321DA
8A725336FA9AB81577F5266D1AFEF8B2D8434039EC7EBA3DFE837CF0FA105C85
27115843A7C1133AADA0CB8F9CD475248B67B0343ABF4A6E34B9B5C76D6E89AD
691E6E6680AF> |-
/r <1C60D8A8C9B825FA5220A9740606B50B33E010C4BCC4C01AD0977A1A669B
FA1A38816F7F3AFEDC1C339BC9FE77C7DB80E163C95852F64B999476B735BD17
BE5250D15A9BA973A020C54D1BE5E2686C3A86A44295463DE15129469ED396D6
199BF1BFF0CA9745121C3A314D02EB3FCC22E2B5> |-
/t <1C60D8A8C9B821B336899C0A411A14A41B3F7FD72EC5319DCA4F19582C70
AB43B5B25B037D9F70BCCAF41E05C288447E6D0303CAC78896DC7AF6BA8E289C
923C2C4B8CB519AA426EAFE5402D54F959CF9B32FD990316D3D74F7DFBBA78A6
DD8825> |-
/v <1C60D8A8C9B75A17A037AA72CEE7B2AE5A83104902198B0D7DD4734E9CD9
0C4E924ED9997C39641DC3D364581B2F0E57D0F8BE1262A1F341DAF70D782647
7D047E1A47B4EDA00641EC6D817A> |-
/w <1C60D8A8C9B615D1C500ACA9C92161E849E677B918895D9B55E3889CB8F8
AD62DC147AC920B3CD2A4F65B8549F649894C21B6BF2A2092C230CBC8F01D906
A19D5B5E79D4CC11718040D2C0DA8A7D4733F505BD2780DC127B509061F347CA
46874953FCF431BF041A0B0AE39638E0597E6616062BE6C52059D1EFB04E643B
6E6C> |-
/y <1C60D8A8C9B744512CF2C00F890C8FA0F8B10FA0BCD74B6A214E866AB68A
96ED7F77308E9592ACC5D3631FDB41633BD4B579DF6D04CABB7588482BC92B59
696D64E3A6D99012CBE78A3625FC6B4D7A0601384C0CDE480AE038032833F6A1
DD7A9E9E435D948E8635E3BC1C4A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AOKCDN+Myriad-Roman /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
/AOKCDN+Myriad-Roman*1 
[
32{/.notdef}repeat /space 12{/.notdef}repeat /hyphen 2{/.notdef}repeat /zero /one 48{/.notdef}repeat 
/b /c /d /e /f /g /.notdef /i 
2{/.notdef}repeat /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}repeat
] AOKCDN+Myriad-Roman nfnt
AOKCDN+Myriad-Roman*1  [0 -15 -15 0 0 0 ]mfnt sfnt
559.229 279.666 mov
0 -0.000549316 110 0 0.000244141 (ener) awsh
559.229 251.526 mov
0 0.01474 (gy) ash
AOKCDN+Myriad-Roman*1  [0 -17 -17 0 0 0 ]mfnt sfnt
14.2285 314.666 mov
(p) sh
AOKCDN+Myriad-Roman*1  [17 0 0 -17 0 0 ]mfnt sfnt
46.2285 341.667 mov
(t) sh
AOKCDN+Myriad-Roman*1  [15 0 0 -15 0 0 ]mfnt sfnt
368.229 246.667 mov
0.000244141 0 102 -0.000244141 0 (eff) awsh
384.323 246.667 mov
0.195313 0 99 -0.000244141 0 (ecti) awsh
407.228 246.667 mov
0.165741 0 101 -0.165009 0 (ve ) awsh
424.973 246.667 mov
-0.194122 0 119 0.0595093 0 (two) awsh
449.138 246.667 mov
(-) sh
368.229 264.667 mov
-0.0296631 0 101 (lev) wsh
386.273 264.667 mov
0.000915527 0 115 -0.000244141 0 (el sy) awsh
413.423 264.667 mov
-0.0894165 0 116 -0.000488281 0 (ste) awsh
431.753 264.667 mov
(m) sh
383.909 94.6665 mo
456.905 94.6665 li
1 0 0 rgb
@
383.909 76.6665 mo
456.905 76.6665 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.21)
systemdict begin
AOKCDN+Myriad-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B759462DD3040289328E0F683F711B3894968D96516BD44867
7C9FAA746D5350AF3B117B4AC08A2D715CA85E807BE8FDCC75A5D4F542F38F55
0E802EEAE548F2FF8506F9AD572646E7A47C57311AB7620557585596A5F6F3A5
51832222EBEC5B08135E3A2160C305A55CF05AE83FFE02EF308999F5FC49FAB1
E4709190FF594124A9626360300AD05498BBB95EF9BD55E7C80D9F3F68B61D3D
CA5974A75DB1D3D3AE73A6A3AA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AOKCDN+Myriad-Roman /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/AOKCDN+Myriad-Roman*1 
[
32{/.notdef}repeat /space 12{/.notdef}repeat /hyphen 2{/.notdef}repeat /zero /one 47{/.notdef}repeat 
/a /b /c /d /e /f /g /.notdef 
/i 2{/.notdef}repeat /l /m /n /o /p /.notdef 
/r /s /t /u /v /w /.notdef /y 
134{/.notdef}repeat
] AOKCDN+Myriad-Roman nfnt
AOKCDN+Myriad-Roman*1  [24 0 0 -24 0 0 ]mfnt sfnt
362.229 295.667 mov
(a) sh
362.229 220.666 mov
(b) sh
1 lw
480.254 159.667 mo
480.254 181.667 li
@
476.253 180.5 mo
480.241 187.408 li
484.23 180.5 li
476.253 180.5 li
f
480.254 227.667 mo
480.254 205.667 li
@
484.255 206.833 mo
480.267 199.925 li
476.277 206.833 li
484.255 206.833 li
f
472.216 187.667 mo
488.293 187.667 li
@
472.207 199.667 mo
488.302 199.667 li
@
480.254 48.6665 mo
480.254 70.6665 li
@
476.253 69.4995 mo
480.241 76.4077 li
484.23 69.4995 li
476.253 69.4995 li
f
480.254 122.667 mo
480.254 100.667 li
@
484.255 101.833 mo
480.267 94.9253 li
476.277 101.833 li
484.255 101.833 li
f
472.216 76.6665 mo
488.293 76.6665 li
@
472.207 94.6665 mo
488.302 94.6665 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.21)
systemdict begin
AOKCDN+Myriad-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7BA8F1527B2EC394F787E2982FEC2798AFE55AD855A2728
5088468A0A696F4A6A31ABC383FEEAE11F0F42DB13927828F27CE59F66426680
A40736011A5385A0DA25CABE2121802EC1A430A3032563A259> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AOKCDN+Myriad-Roman /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/AOKCDN+Myriad-Roman*1 
[
32{/.notdef}repeat /space 12{/.notdef}repeat /hyphen 2{/.notdef}repeat /zero /one /two 
46{/.notdef}repeat /a /b /c /d /e /f /g 
/.notdef /i 2{/.notdef}repeat /l /m /n /o /p 
/.notdef /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}repeat
] AOKCDN+Myriad-Roman nfnt
AOKCDN+Myriad-Roman*1  [17.136 0 0 -17.136 0 0 ]mfnt sfnt
491.19 199.667 mov
(f) sh
485.229 89.6665 mov
(g) sh
44.2285 180.667 mov
(n1) sh
43.2285 75.6665 mov
(n2) sh
44.2285 289.667 mov
(n0) sh
2 lw
224.229 118.667 mo
296.229 118.667 li
0 0 .909804 rgb
@
383.909 123.667 mo
456.905 123.667 li
1 0 0 rgb
@
0 0 0 rgb
AOKCDN+Myriad-Roman*1  [17.136 0 0 -17.136 0 0 ]mfnt sfnt
226.188 108.667 mov
(o1) sh
1 lw
293.229 94.1353 mo
293.229 111.198 li
@
289.228 110.031 mo
293.216 116.939 li
297.205 110.031 li
289.228 110.031 li
f
297.229 95.3022 mo
293.241 88.394 li
289.252 95.3022 li
297.229 95.3022 li
f
284.216 86.6665 mo
300.293 86.6665 li
@
177.111 300.667 mo
193.188 300.667 li
@
324.188 0 mo
324.188 344 li
f
2 lw
324.188 0 mo
324.188 344 li
@
%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.21)
systemdict begin
AOKCDN+Myriad-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B89DB75D5B8735E93D1994D05426F465DBCB298CF353A
B931749A92D5FCFB5070125EF1BF1> |-
/z <1C60D8A8C9B76F05C2A10BBA370C3E3C8D18619F2252373EF5D4F86E1884
BDB6A8328916ACC1FCF2299B27DD5504EAE84C347840346B244F11842628DA3F
859196E347613F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AOKCDN+Myriad-Roman /Encoding get
dup 46 /period put
dup 122 /z put
pop
%ADOEndSubsetFont
/AOKCDN+Myriad-Roman*1 
[
32{/.notdef}repeat /space 12{/.notdef}repeat /hyphen /period /.notdef /zero /one 
/two 46{/.notdef}repeat /a /b /c /d /e /f 
/g /.notdef /i 2{/.notdef}repeat /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/.notdef /y /z 133{/.notdef}repeat
] AOKCDN+Myriad-Roman nfnt
AOKCDN+Myriad-Roman*1  [12 0 0 -12 0 0 ]mfnt sfnt
288.229 75.6665 mov
(z) sh
AOKCDN+Myriad-Roman*1  [0 -17 -17 0 0 0 ]mfnt sfnt
87.2285 33.6665 mov
0 -1.25783 32 0 1.25783 (. . .) awsh
403.229 54.6665 mov
0 -1.25783 32 0 1.25783 (. . .) awsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
/AOKCDN+Myriad-Roman*1 ufnt
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 11.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Jens Koch) (Yale University)
%%Title: (levels2.eps)
%%CreationDate: 5/28/2008 2:26 PM
%AI9_DataStream
%Gb"-6CMtN0OWaM6Jbfo?b5aH)<b3W"9W%9t!p;T(7?-'kA&ip$$U_'pGLtZ6<*PFRpAXoJ2hRM\P"MSEGWc\O90.&JR7o@Qmg/p1
%5O<8Phn45]oDS+NJ,OC$`bs7drFR,1-?].'2ui@Xs7H#o=!*bF>te1hnB-Y<_8QG)V/Ej]a"cOILYLFQYHMh-rT;#bl`6'gpUBU/
%5CECjB)goQc/tWO^P?_[2ui:1h7MFVCj,8"?iLXdcft/c'3tF\5CRj(q;rL.]tM.mnR)=aoDA:NhHmm0?afo5qU=]r];sEJL[3,Z
%S*?Xl@/(BEi=@$hfe<j4>N!9-H2[1&S#bG^.'DG)l5ID:8Dd*jU(>#NqXb*N)]mMh+Fa3K]D^oRT5Lj3MdL?_C-VUIhd1a2p>`%]
%Q_3-khYd,?9@pqn\pj\Io$\=L=uTc`9pcUn>Q32H@E<On%jR+(Ib:GV?HhGAb5)0N9!A6]mF>Qm\bW/(b;WKEjINb%55jp:s+Y_:
%iSJ8i"T7$#n#ekPiT;`;'Z4OSM1<6fF7kQ#8o?l,]>W=^2sTK`1qDW?QQNrVq?3a9qsH8SjY&R'e*hbaq>/Y'O&mDeC5;DQ^3tKR
%oD@;B8cp(63Q?`Cp0BUn`gA[%\Dbc'4OCulC7Pe>n&N&Jh[*rq2m=F^IX(bggRDQe>P<\#e3AD,qkgID1i+rI6SEGAh>ah\0;F2E
%rq,I?7Mb`Co4EK!NH:%,n..T_di1R1GIQJQ\)d^?#LE>Grl$hrqVmtu^\j^rDa.NUKH\"?g<AU#mlt(VgD(,O^H?uEE4b@%kH=UO
%ji=Eghn^eT]j^,o5;N^k`7t#.hnnD\^:F1@ql:7u$bh,dqX"MQJFD?#rNDRVY<I@1iV)l`bF:FDJ+rg1_sP^lmm"R87t&.aqX2hU
%Di^AO-LMfRcl`2qF8*R"HR)ms+8Dm$Ig5,7QWH+a/jK@)o'2ZmI<teYc.,J&mPe5!QQKV=^APKc.,TE!p%$ApVg#B&her9I^\i"g
%hHkV\2u^=4q=-Ua0;'-Ojm1575$ZpVrXh>Q0E:t/p4$?'r:pu0\0(<8^&I-Zg\3p)T-)p;GBNlXk3WW54q0/RrnkH(I!9Z/l/`F?
%^Am0Wk2cj%H>qo6Qe.S-EEFosYXgG)^\dp@mem"QjeolKIf'V<p@e3tb>1?M\@StAQ`iW'\pAZ#H.1sGP$i37_tm;M5S)_cHZocZ
%h;4AX?pN>1+('MH7jH.o^\j^r00d68pu`0Sn%Rgp#k6lOT8/b;_?]:>b>6p)e_K`nDXHi#p]<+Xa-V,j_TO1[rpiT=6SCrRqpFj/
%'jpVaI`/GF28?G4Nh:cFq.k:!FRq*An1EPeXh3Or*n.TAht?/VTAI;3pZ'G85JBLTpk-<-+8Ft_\=<M+GPsK"o(PB(IK42p!g7p5
%W:ocC,sV0&hriGDIE@PaZq`5f3\IUB^=MPYinLZHpT&<jFEM0h^#c<Onl9Va,Mq-3="kXRr4lONr)Uj[lYa4t9C0AODu]2V!dHIa
%o<"Y\8Y<'RI("BNjKCeqAGiCa(Z5/ia>>RKQTtHJ,EV\-DLN%N,ZLBAc10rh/TT`UDZ8_Mh1GD"lc\SJQdqp+e:7Mu]qA\_Q>)t\
%m@2ip?iBuEpK'\,l%snA+oDQ,r=a%E?b`N-nt1C&mPB7dNur7(^]2j/GIK6>q&/#%q9A$!++TIUg%b@6NPP>LL2R+VX1/,+^l-CF
%msfe9Q`tgS^:iL>5CEJ*_rg^&\*pDJ\Nmm7`rILIHQM_h]=@M6q!tIHhd6FB#L%Gm_qWeFrYsbLK?i9LON.Di^klbgZ2Vle[_Cei
%kMQJjp\"fEO3R,W^\r7ShWX\04UR(9hu.Ni*l3*_a^+_(nK4pJ"51rD3C/]bs*")'pAJ!B)['isk$K`*]RS;hr-82'gNRR#?C*Zl
%&Gu>J?%MA3_$u/`_XHs_GI]rs?Lten(VdJ,TCr.pGN1@P`t(]JDa+,?o.q#Es3p+;IXnEQr"d)7n),Wh0PpGkZ[5'f8Z2Ue^[U]Y
%rUaaW^^YT0WYSit<D0KSdO&[rg5HJeS@bo1*OS&;"19A\'/ga3rs[6U[+Ha>,I@b\mUp3;BKMU2?,,h=d#S']L=m*T&>6uc%HB-.
%bJQGYLY]0V%`<9G_=2f]+G:S0(rI&.R):iK_EJq@&F=@f=6efW6]<b=0hsID3H!k@*o\oGi$F-m;G:Sh;GM;eV0tD#'>3rkL,"7R
%PfJ()NVi5O'*.Ud'W*^H;kCGHIQC0#$mJ8<H-13bj[25Jl[Zu/:\/bdcUX@mYYEkd]A;naVd7&q]4j4mp:Je&fVe\ThnJji->Yg2
%@*7I`+87I'iA@.g'3oQ=S;sMrMf8SNiPas`T+1kWS[S$95#$!%3^pQ-3;'3;GWHn,LZABD4)U*8oJIZ0@tJ%)EB*[4mVk3,%u8(%
%YWHY3o)Z5<_ZWb1LNj)[!N*QbTD$>(@DC^gp=oPYcS3'F7N(q$7bdCDh._)g*FSNOh%nik_n1l>"Rd%J"2#SGme4"ND@c6>4*]e2
%S)MU^GlJ&U0YelVo4^D6#FLo"bg/CaR&:O./&Iec0QUM`jWi"/*p.JN1C@WFR2o^b,L#]YF59Qgkm6mpT6@F?1T\IsX-'7blS8H,
%FlR0uNX&[ih7/0(bN"8umMK@i#=(<e@lgG2XRR@_H4)6p@HGOo!!`S`6D(i6!mEV(L?nn9B#'`>n0S28"MgcrG2X-qJ6dN;Z7TH'
%N"PPs"T41.LBHIE2k0k,%tLE:^ss<AFoq#)JAhQY\KAE^";lRf>i,S=c`dX$fF8.17Y!YMpIGHq3FO#GPf)p@Bn<rV_L@/n_m\c+
%UO1";B:O4dM.`?'!)CJW5Q#6iJRo6G*;(S',l@Z"rXM>a5;g42IFPmYfL0(3hi%A4?fR]h6P6M$696>Km;Lm7mZ)m^quqLC.N8Cl
%dj0"XdO&_(Zp[W<!k!TFJt'h?Zn*R;%WH]<M=?""-uN7(Za<DCOu>p*,]Z:V9`>&9$Y:';EC_YFBRrsdaLKG!&mB7ZEOg)*\RcCi
%7VPF*!<3Q_^)7,A"`,2&"JQ$o"X4/[SKJ3I9SgR,16Sl,#\a9UPXJK?aDE0V7.iH!_D^,c2Hk$q^tT16,/h-hgJVTe9sCaEA+A-%
%bp?T[!*a5/gM72ObAT'OWGXN$dIqIaQ0f@1Q?/OuCqQ0:DhQZg2%-ufZ2snNeFcA_<n,B=PZ`e;f!uLC7>-T?<ZtX?ZM[tZo@tTk
%0ULsY<Jt*"_1F[1d@;]&16Mf^8TVJ3c^c:dPO+sHR*.h5[^$]o/sVOo\Q!UH3:=%UnN$qF.k];0l<IA6De59reIIG=-g?V[lgqpj
%g@!V)h2t;%=R?T5"-M0+[3o!aLraT=E^gD]?5b=XWWp`!Z>5Y>UMHT76'(qF>dR>8U"L>6TC).Opbr97S,a5oN'CO^bT5X)*a%_/
%0_IDtB](j538(g_&N:qBoE]\)!FsEjT(*'81LSeLmt#>.g].c\6naVM3tU(5FMdDR-jgA):`UV^!l/u75C3qI5g+_5RLN"5N"d'I
%#qp.45[4jFOOO7r_Em2!5fCG[O@DLr!::&6U5g!*#qDSp#UL(E*]F=?+V7Y8TZnUhD"2LigAuea#LoSh#n]=^+9rI&,)AAgM&)76
%&;5!pnE"VVppbt%,q4_bW/;1#PcBXG;&Bhj&Lrc'WK!#S8#1O24Dm`=4MYH%KEV61O;]!.OdoggcT'IZqba%LJkF\sM@RRJ,#F+.
%W'uFegqo<DM-_8ic0PFu#9[oHef!>7esY-7:TLO3434F^[%=RlZAp;96!_5N.u1/0lYUElldaHV79ZIKenCB"_3I$ChVZeNn9Rd8
%%Pt3hY/*uuZDFLl<RZ.e;:kVNbW\k4p?]!G*bKjYn*=,;+AAqN]eS]0q/4G8bVeaXHF=W29f'JSkLM35**6Sibj!d9f8)NDh2\>J
%S/rL6:pp7rmAt0,c-h][KCDOhW&,+o'*#3"(5,0e`2@qD<Q)#$?QFu9*CL*^7M9.g_@QU5cSVJAga;%HP<_Xio^sE9,W%;p7;*CD
%71=tG+7I,C"?Z7o1mbFXDu]5r@b;!0hNI5Us%fHaAAU2&TB1nt6?#3Q1&oEQ!,C>R2X(g'oJ`e0V%H!?>"K-RW$bJ?Uo&r'JJ?6-
%BeE:jU]<dj[\Qs@V?94QC,$8e4V<_C!8f/%-R7u1N`=+&ljm&>EPEbs+ZnUG#?2^PQ"[:E#$+j:DS&Bm<c'I69/t+3XRPm&`\P70
%[3A9r\@NF2"aW".CD:W^BIU@-j^kSd'M$\4L*CPebQK\fcG4])cdZX=C9odb?UOa^[(S;*\Kp\ID8dj7XX>S[Li*c\g*V+Sra_10
%BB+51I1N,`S4HmO)GF+4Gb<FC2ZEko%(cN5KTdN#erFCsagV6WZkL<&f*5sc,78&pU_#,?Vh$]reg=g#M=9hfpEB8m&-kUooL+9Q
%CT@PW6fs/\n7<fHQjJtbKNEN_Ndt,[F#jDaEYc#f"#M"]dCTRp6bp57)K#Op!gjA2)uq+H(Df=`(B?Gq8@(@=r-fjM5F_ZtD6VD*
%s&\?4QrBCJ-!.0[ks-6L7$9r.]6,6A,04(c,$.IFhjFO^8]'*dm5TotJaJ-]L.U)^l$+`sW-"[FJk?>!.Bp0%&q`abpjXD=!^$Xb
%g1^&p]JU`80/AE$]L-spA?LLEXbgR?Uokj)U(L0Hgl^[PM<%j9dr:LIoHR:Z;/_-IgE&C2p+MpdkG5P`bZ5uIQoCO>-aB(oEn6o8
%2!<\)bQDT[l,Q5=([8bO]\,-u==>lk6)),L-N+\E$eSL]#EJXAh:-5MC;BEf]OJhF8]s5R:0Gecn5?&"7a_1#`]W,B^$XHc]5t8`
%WI(qY,?MM*p8.1OFjO^QUV'6FVs7SOLq=.6;C?j%ESL/fR$7K+*I-:_06:WY?7$\BVS16dRs4YAU=2GkKc]tTNGC$1BeWKCdF$if
%(-ND`L^HM18r<:/MjYUo:$-&&\^G)dcV1,07n<q;P1h0/BhGk&G&P(TC)!(;1>5>MNV2TcCKR]EXJk@lX2l!_d*pI\SQ[#5SuNR8
%lHs8q;#luW+I4h6h6P8b:1urP@%MQgiE\DFZVcK`KH6h6SPWjo'LfcH8mH'!?M"`Xo=V4B;65>^5Df#a`,kD?55:a]P3B8;r'<>R
%kB0%nH\3(N8GJZ(?-orEQ9c:ekgrZ,Uu.)A-e=ebG$nHC=N/t``P[Qd/if]p+Pf&3JdW$#*pMn`lrNR#[(J>c@rrE5X-/4>Q)Erl
%1!;WB)YLI$?_i[6FBIkh/IRBd`0JM$DcL\t)E@<6X]V]cjEsJB)te*u\l%W[NOq\tqn]Se(PZBaO*?=i1g4bh>M94<[BL.fn3Is]
%1@t(im(tVZ;BpRB*_YG2_(;-lq5h,\k84A8;\d^]qO$f4fjXDG]G1gWiM]]DE'"oGJ4@3%o8C0=(W%\m"8"t_c%4ZCkQjUY-os`C
%*Jt?SM,]d/DUCuXIN[feDpj_^]:e29S5a:7R@L,f.6iYoVpVm-StrQM2-t=!*ln]!,BrF=jKqU(b)+oRUR5")\Q8k^-TF8j';%h;
%5*3)ch5rcEM9b1(c(ZY^lSXfH(s/()O;#&=mJ0/qfHXPip>hCmO\L!GSJke?'.J*]*41i1,#0WG0"Pdhf07T_+37lK0&)r'V3&*<
%Hm#3;7FVek2@uC%S2QK(%OCr>SY]gClh"`]NO3Y7(ItoXAXbL1\[/t:]=>5mW=<oT*8BK,[M=TVo:=.:]!mTM]=>AmaUL%JZru5=
%I#^+KK?^&M]8O;534tg*)eQ%Y]o1p_\A$^H]-8miM4%peTVr+dhPoR@Hgap[0$\G)[jqsY_7Xq]dXq1%2^rY7iYX&ppiA.+ha9*7
%;WAlLmJYDNgU9&%2#H%?f8VeAqVA%.I<-;sm=A1h>]3q.n\7*QgJ5+%os^pG1l=4D/2SaH4j<'-7i`a4?a/#B(*:[4R'H3i_Y?ph
%'/!]3fm2KJ]`umV]WS0mcfQ0?U@T,%YHPsLCUe.qVU2o>-[+h4_/$"=%_/7AME@`4H9F-3YGeSBqAll2s8!1@r0?X>=J)M_I%HV,
%9)HJt[LB+p(QVVe/ZO#Wr/1pnj$;Bi]o:goR+9doOp-1O`SX3\/FG!:Tm26b4KG0S/tqfl9s1G!THZ^^>d?V7G9leHGsL"Z#pC%%
%PPL]lj4*YeWSa\"Sr/"n4FAEpW/klCITDj=IJ`*<X6NiQGGM_.GDl#e+?RaCCaB(i$@uLZe\9V8##\BF]@q=?IS5!^?L2D(2Yo'(
%-MeeU(,5`M<i*H[No+%fIGBuT/sZ4.i*%k+oWFGg6YJcM6/+]l=5%i#q7*;5A5e>&8n^j44*DL!6ohftO\TK"(<cO$@\+&Bq#kaj
%<-@B`4(]94V/[P&dUO!e^J$u`E?A^sZIgS3P)dEVJbqOc^N7%P&GPWf1><E00:^pE^W9q5P$=4KfDNCL!/g^fN=iG:!#'3MQ3'V#
%h3.H)/WCcB8$:s)M7bc=U8S847C=Kb3"#/]6rDL?6!q_=5([Mp4[8c;.?tTTrV$J*9U[L.dE2$U>sid&aUR>iPhIn7CFH<-,cRK-
%L/M2A^"ZSEjg-MD)+eGG2I#at>)X3#)j\L$/1-MsXoc[N.Z(QMa9RT54"#[>XRF5^A5_'<Di,M=F+13"XKm)VSKtY*`CbNCq>4S"
%(R`M,+ro_mCEDdLk4^1]aeUX5pI(!MT3*#\[WQRdFY$LSai5e_8gT!9p>K1AX!P/reC7B6o8usuZT[ZVD-`VI/MGhbBOV,gq88r-
%bgW4>:D3=g%&U(7T*@"W7u;agiqT$K*7QOe1Mg(NBW+)Y`>fOkU7s]:nj-`#3'+(X7ua<gF-IBX8HEbd>--56FNT5)9H@8skGThE
%6PVTr`P"E,r"MRr_;=0".cobRM5;]L<(@N73f2_XKj4j!=d:8DC8C'nM;kQaZH)IC=H1#7W(tE:qMa]AT?;3X];(D]WFLBhDeE<D
%rR@-&Yr,F$Wd:M"]s3UtW?Qj`PAXQPan"(_"DrttW[!)[=J399Y=rtfoe2GKF(J>m`4Igo2aBM,lj$?/JCsnH@]\/?U"K6N[D"&?
%lMe:Ei&kWsZQ9pL,nU4'aK3G$A\i8,O]e`HpkoVqo;9-MRAPIH/4%X*JLV3>F2XdU5[X!sQ:P,5^H]./$E_&[B"BQg"84IHLq!'+
%LnB3C"o&hBbFtC\hjosXqBJ)[V['pG(C!A;#_88&*F9eh+1Q"l(NU\<c/]uFR(M[n#&Jfs'E;eW\qg$R0or$udU.0I8S4p,*(%:g
%#6MX$1&"&PmU8?-Y8DRjkC0:n:&&/V.q#!j]tNb-On[%H9c5=#i]!AP>n6`Af6Ze1H;U+6^2NL>oqf-H@H,;1Du]2;dl-DK9NlC,
%)oefa;dLsL`Sn@NA#u'1YkMZTL>#1k%[5U(Ejdn?(g<emFjS;p@rij8d`et4kM.t>$T7\Og?SW1s3Tde+FX'Eer6,gU#MHN58NpC
%bs]*S4R3)R2-L;tH>!]\2s>5bEMfnu!mV/iYW@<J'>H6j"q([eND.!pldnE`99JN[)b3@-Cg7%;bRlLe>TN<XLUbt&S/F?li4'nR
%@HkbEgD77*@kXq>6N'0?1SIHDr)2`^MI"HkUPW7l7`>G@KOWQm="r$L'(aM`86\nh=`7cY$J[%CcXK`)WO^4V`".!JJq_1M&[@ao
%nDYBC*A18)8s7'"@6-7*+h+2"Om6i@ee6m(>.h=EdGiM_>!i3EE[p#='9t<9^YT"@Dukg]FQik<b6`:9%4$rV@!:N:1.UNAl)5QF
%S_8&3=]dS]#Ab#650QTBejZLV#thF+,_7Q'FE*FLVsY`d<7IcP9X$<ch82/4"6;p-8_tJ`X=g>\TQ6SCek-H'a^'$u=3p:@Q[%]L
%93[bJ3'!a&EORbF86,Le0faIl_bsf4.t5ig6.F23Y)_#4@tHg!31)%j\m4`E5S?;dLlE-F>Ub]lb@C;afl\92W8chgP09S_pD2*:
%j,ltkZB%N<65gj.)(!.@#Lj*K7%e48/tR&*L4JVuUo:=l3b';\O(<`5"<U565U:dreH=MEOD^'DR8o/''!@OM,hk_kc"<BD30,2X
%YLdFuZY+$56_3>3Gn/DU3%kU+d?.Z%YOUHfn#P,FUM(>YUQ7oZN,^_ljVSfoPVMSAD;/muWo[650bOT:V@bM))mrgDb*lK#gc0MD
%2)5fF)^JAC5cer0=r01`K\5RM=RE&t+dO!$_n)U[D4mtl!talOemc'%mj&Q*^^fNI>d_iZ#mS7m!aJ-2OFcI:"iEH71rX"2[LYV,
%%V--@!69Y$8p1H&9$Tk46kNqV)4*:?"Hn0a8ea-=r(&oVje!ji7uNER&,%>H!$lYWi/k<#8^k'H9GGI&p5<%]qkDE^`LAGY$51CG
%EW:6Ks(Ot@=##a$f`./A>,g>X7&b(g?U%W90#WYW4XuYoR=e\KPqagQn_;4+m*r42ojT9+,7DfXhEFHCr:Qgk)DR`mM7["CFUL'g
%PfETbm'`Y%oNCt;=fnXHFaRe8qc,.1(!T?(d@81!*9SfCZaBB9W$!TD:KTL;)-TEo(O9Y>TY.&bY?J/%!JXIQZ[lk[d#NAmbbjbP
%f!cpfP_aIIDh^a2ZWap6RQ4n]6Tta&U+F,A8tFLC<g;/&XfA\\^=E(^p?u<Ck/[`:4DCcM0B:NPQ_Ip7L)DS/7F]ArTS^\%O=t!"
%LJ;?pIb5*GM<rl*34"n%0"01];n<fR_0u%g]S$*RaF;Crh%&i6AkNr0Do_RqKXT<`1&c1eJ"b-Y\,Wtmr:]^Kc(AqSJu2?D&`.8E
%(/UnnLIUmgL.+Ju.`'UBHsX0qLEfkdYAfCS&Rus+5+$Vg:rUX'\<%#/)]C=`Li1G\Jlr74MV^b&XU/,abJ4H[`#=^l\5F]k&<n1`
%1LO7VN.BT30EGV_5lP2UD2J0<(;_KE((!4jWZ::p+Uf"GaPh-?Mc,(t"N7RL7DX@^:\.SPl8hS7dZRDT3f,B!k`3j56Z5V(Ks@%J
%]GBA=W]d#q]769kheUM7[Gd&18.Bp.$Y12^5b#2uD/QdUTjh0-*_h2XMqths?/8t6\NL.8rOAKMr&MCDEon.DVUg@eg#;fA3IIGC
%A5Ik,)PoD7)`1*Q@:=e$K*Iqp.HpjVY'9m#'4guj0\e<tJ!3#J</4IJh61_jpII9k=16'\N@P9ZctHt56/jGkP)#jD86^.&Pk\Oc
%dc$=41m`h237cbYK?JU&<RK1WcG3/)=m.ql^^8AZOWK@$&*3:HI4n=pV$4CoWthVVaP&O(=5Hj:lT2GT@,.MHoA\uVL=Bo%R@$Y^
%rS;M3.]ZV3JFO@W<jCG"nH=\i[\&1`XgsBJMCfm/FZ.n=^D"^kDin4eDRe*=!F9eYATUFME<4_H"KZGFD!_?V/Vr^k*1mZe[\\f1
%"#2L487;.*R-YmH<AFsT?J#rJ.:c:3jU<5e3=SmG)&X*oV,feF9GZq=Z(bY"C1KS=XTm@oN+ZoDW%a:JFHGTX`,:[iS;>Q\.L)Gt
%_'")5k+Xrl1R9N!?L4u`g1=lk?3hBtHXug,UW9!M5Q"m:j0Q/amib3i-R]g:$Q)MA=OX[bA?0pYA0P1=.^BD&ERDY'SZUQJ4eDUI
%LunGGMF'-m>*A/f/\P5pK5QLI=^]bYdS'k#9i2:-72.8SUm,"[R>VG%$!!csLjQ8SEb,[uS8`X(,ouA?,qWD$dmoat:/..5B%]E-
%cQ,0K(o;iGhQluN?@O3+T8[\SW0kmGYA)ZM8ld^cNKW7/%Ie&-A6CD4!>RD/j@%ZO*?!&Q',c?fF]@[fNFZ-'(d4!l*[<_!jtWYs
%8'+Jna:gRq-PG[g/1.W2&4?;Ge-0QE)T.Z:!)90P1ItH+U8TdtMuQXK@7W\GI]1!nBa7QHV&M;B\<CNhOGCR[D=qh@a8[*3TV&ke
%AL>`XX_5Q&*SI[AnCZGb(`cp60]R'[2t"SB]5clFH:N0Y*X:Ep;S3RBW,Ua$G'(P+Nt[Bc54?)h.Rhi"@B57kg)\cW62N-ZqQ<Ze
%F*.PKq##IMrT>5OOrgZ;Z?9qbo,="HLt?]C0(57.*EfeFC?_6dB9^@+;=t+Mp5=*-[,j/FK-'LZrnb)0*qX]]g(4_>eWWVnO8QQ'
%a''(#2IAS90.QS4.fB-j8\K8Nj1T_3G@i1]GI"?Z6/2]HT#iI/E6d&j_s9sA\j'i/m\B_mGP:$CY^A"J_Ugf!pZL=7E9:o;QbDHL
%=EoZ==;M!Cg3G#Xj71W/#?7HV(jO2sFQ9@!`hR3:L)#(MbrA'FOC#G+E-3mo2T7XO0=777*n.Kl)22N^P[7IZYF.';l^/^3_cGnt
%pT1YaX/oW=m?VaXQqe0*6`JQTd`AZ,=X;o+=*"N*SAnGf_",l5Dr:;6pN>7m#0bLK3=aL.g.1&Ph:KcY-p(]Y2g^P@N7F$8>p?PK
%G6OFEmeML1;Yf=-7AP*6&<$D(OeBJhE;TY%lcXLAhgN67GkDB<6'i_X2#3[:a%.G!a<UFM,;$'J:JSAt^[DPMDoie))<7<YpkK"$
%[kl\*HdaW]&'/.nG>t\!5"ahE9BHeb"!inZ.qH8X41sWOb8s+K..RU6+Fs6NPlbPHA=415P)(cV2OHVD'$7rsr6?t0&]o];':)Bq
%5%+boABF8=b`6;XEiuKUb=8L2LGB7AB$$M'K..=s41h7[9s\EX:3*p?Z:nFSYr5.\X%j#ZSg\CQ.(Q_j3Tap()7J>q@%;7F:AIJa
%=Znu!)&DZq>MRiaaa./?)Yr%:I+G(5Gd]2%ruTnF?=dmbo%!;"024P>N.89LhZk6[[>KcH2"hhPBb8i_r@O*,q&;+#2W*]$3l\Ao
%KK[o@FdMYAl3#SO^Z56e8qj4/Ln[?I50&LT,3-!MG5(/Z\I>CInsV'5!^tA,HKk$k%X^__n\fH/Qp2H>[n[)/A`RN-:E:0#*:-p(
%XjMkQacuU6[c/H8Z&MNe3tR;nF"J/>T[lb%&NW4:RNBel7mE8+cmEP]2>\O$2n)]aT<e%8\>W=?()E*(fNt#sE#rBj>1nG[;VlgW
%dfZGS9")E/lF]p(oj`B*`;D=Bnm#1gVlg?UYU]]V=B,KME!aNN%dN&3a&OFYLKbK32?haOG9"$e(n1RBjL$I%:LR,Y$9hZX<6_KN
%93]9]P#0mGe=(>aH,A\ApgOf[V=YF#bB`emr;HFH(/1S"\<kn7GH:?n5r)gC\p05,]jt"'87n=pXIn6*D*3X8^A+T$XL>\#60`dX
%aCm;g<iNPi)'nmbcLsJ,V>1&Q<E09-De+k:;n6,1`Y=,r[[sJR#HEF)<4?9tWk)J.<:T42Wb0S[9GK)17BtFmA9`aTM)'11XK'[3
%WQh]t1:QkQ%sCS6f$9:VVZOIFW+Zna^?o0=J(F&=D.d4BV0Ah!QI8bp/R;p,>`2YeX*3C4H7_XdAZtdmk=+Vb3>[@LO\kFs;REHg
%X=?)!@[1>+T<E7A6<.&*)fT8u.TBE5WqrdWs/aP:S@\T44Q)]hP0pU++U1?$Sobq$CM)".:jD4rE'^1/-?8-<-OL?*Q66Ma.&It0
%UPB#;M9_^QF5W*'R%RQ564#_7NcP,kAG'('WM<Fc$8/)d-NZgl-O[9U1!cunj\YFp@`PIJ7)dPR#<?41G`\Rq].I8'T9Sp1m:6eF
%cMlfBM6\&#N&T"-,?)g9FomD4BR3RNf?oWH'PGtDU-H?El"GFAUR`052ht!ebO5:?e]Np6"@YJo=g]oMp!NC`/auk74I.1PV7q,;
%C@/afUQg,D0Q%G)8nI]oPJ'q*T<ns;'n+k1j`Or(EKFr$I+m;QFk0iHohnrkj=70r>3`4&O:q%YklI\DUZb;sA'$YDo@5%o0M6mc
%?Zh;S^uZKG"QO-go3(:YK[+.PEP^F%WrF=3mY+PQ15h]@kY=%c1Ca">_^!-b.OK!!*5g1Lf8FZcc/?o&P`lN:Eg#D<c7fApH1?k/
%.:Hl._4B_O,l?Rblo7m,`Y(5%-;<Di-\pT='ePqX@RTqB5\Eo;$Z)b]TlopJ?.>\AB28VIq")SHY!0nLPqVr)V2NCnX:;J;)ILZQ
%-'VVqSKNfpq5'GEj$[pV).$..UWs(+>"16Ylq)5+fqg'ad2QBb,f:U33EnH,Go'G/\X]^)m&n=gZ>6&1bNE-7NHHT]cB0,MG0Vg_
%m7HZECf*>TdgOd`N,lLLG35,SF(V_?_Wq4Up*H'Uo!u1"<0#;d9:eL_mOhjenn7KYN4kCV=/rTq1YeP:>Dc]X19%+2-<KQV=.esg
%Nbt@e\.\<XQlU\%mV]k1VM[;Ac@LF"I\c/lb,Mu382%,f3E+P#VcupF/LTeKF*,SS\oNNXSO.L)\C\oLAAu5g:*mNm_(Juq'Vo&N
%r5H3Q>jISfrT[?(e=@*'`Q9+aHZPt.jua`Pfu4q#`C8KgfE7[?d17N+WOoBU.2L<1&&7?05sc`#!5/].1gL*4M%>R^>2JtW+K(GV
%7d0L'JPL6<oZglU,@)j/A5P_%@YC]dGo_$NpZ:^;YnI#ccPK-[c\.1XYPZ3+WB]1n>[CdNfmGHG9g<(m<=?GJUWSMkR6+Ido4YNa
%ouuu'<LW!4b00VAYVk[X1d.9)A2P`-eOcmL?(XKuQ1GElg@eC,8:V#0N2F!2eKL\&.4=([ZTG8)=5Q1o.WCRVQVNPK<@.&Y0ddX"
%CsV+\ge-U:a&pIq+0Q[Wd'9bjp`W9OK:K?GSmVKEK-8eSb`,o(<c<,'RTFYpGBp\dTK4Xke%CA.!Yss$FYhQK@GYPd-+f\Y`?>m"
%Xd9?YNi`r;;n^gJI!SnDS`e&/Tdu/9il<o8AmS`f*\CW!m6;8\hA8*anm:Ik2;^QcY2<:aj@XZb0;j$VI!`n@9-*P&36dl.&+qrj
%a/\EM&8=Dk!L3pM3sm6>YqEBkpA'iZla,1Xd#X*:IB>aT?Z`KSa?H$1ZB[O(P"f>CgNGFT=$OEC;Mp4q*DAP0#DoeqHC[-"VJ%E`
%$Cu!Y2dBqQ<BY5,-eR\b"/Y<'Ab<BYUL`'o)Q=U`>,Q^[[CY`^!d>]:<peHV]q\CrXkrI0jDf/l5uk*)BW"JrbBgicRO'R7%aZ3M
%&'G;`Faa424UAH5WI:fsV0_L4/t0nJ3t&^NKTCkiUQR!_V'CiY/+Df$@biHKQtc`H<A8$(ntSg<X)L`n+h:.(jff@6P3G`Gp#2:/
%fuOXu;FDt=5.5!IE65qAL!%dh+<B1(dq<KCO1"26:3n8'j`)&!i&GqV\3.d*#@-eX:%,>&4kR)RCjM.],E$V[2O6PKTu$#-@qT![
%JRD<`)kRp6T$*=A^Hq&LIbT\eNnnZ\S0Ofs3'HK:*-(?V[dKZ<%LBZe@]bCslbV+t@.i^nW7HU#MmMiYFP+u,V6)Odas"B?R'[j2
%Ha'Nc4$,@P\aNote<j9AG^B.%ESkK]OZR3q8CX*%W7%`bL^ia!0Le'!H.#6%B3:eP<-$hs[@GG6HdLo-c$%s:IPPBk[pLUQJiN_F
%D*cg-'G"08DUb4?gSd)h>:1AHM\tr/'"eZkA$ul[XpsfB>_<>>-g+/X!UJ$@>]qGVCs@5\OmAhiI'%122h[Wc897;$qXT"dT;_1=
%Rous^&f=j7Obut[=0-O3+Ja:iEN_u@f(8)o<-)7O%IpL,3.&dRlG5LMZ]Wet\gLY]<(%c$KbA3Uct5@/A:=#J-VjU$\PkRNMPWL`
%WZ3]*c(SJSa_mV7<?HqniZ%@GDk9DJ%TZ.P*k%dPcPFQ'QcW@]l[a2WcL"QjVCGS9kNqlE?>iA8eOiNW5Xfu*[#G])>MQjI\QdAJ
%dt<k7r2Ju4cF\2ESD]aY*9ti<PJa`me,,")(KT*IE6IKo5tn(h,cqHHW2[/)lE_e;c^(-6<[`pnMY#!=m^.1uQ=k:8^S<g&*S11*
%FaCJW4^4JKX\R2CVe<'ZZdn<nlL\n8HF>jt>Fh@f:<ut=B<0Lfe`kcPoPAYr[Q6RJeVSn=!gO4Yl=!T]lXH59[L;52/d8?A0Y&jJ
%XU8DS&tbrAJT#R\.e$Z$Z^Y@em-rSRdD;le_qDc2"+L*!#FrZM*/<u<n#Ei\l@"GkIGa"'n,'%`rShR(laXR;*KE)YI+*"cL?%6d
%\hVTN2"'=m@.8E]<TEpqrS-Q?%8'OIP)>^0e9[u>?(i]H6*_1lW>59)#ZmQ7&;sD,eBiS!AVr4)WZl[4VOB+B0jPQij_.-,=c0(q
%i=ml7_@>gC*^t$G(>DJB'eZGZNE)>k7`k4rQ)M!q):Zd=C0PJc1Mu#_mar?>nPD1)&9WR'oeG=Bb["8U1>U$OMNOCn=<q&,aU\"s
%`GY<mn"Uonh2/p'/Bg)1VJW'WWNuN[fNh04`T1<`hSnudjrQ7)!tONj>+!+5A_1[LGVP)B[MSnM["Gd:@7\hl*3Q=OH<`aH`RI.S
%>SUFZUioeG$up$:F)*30Z`D9DXJ\"r'k:Kg>j0I=XXi>FamJ/8D1aBlY4!daN9jSI=4u/,%Kp%>FM67S]lhTCWY_Q<XZOaFWnQ*A
%di"Zh1b-DMJ5f*@GL`6FG=lPtW9^J5/;lEn$RXrW`*5=:#b*5NbSts@CSS(9`-'H+B3:UR!NT[J-D,ao2He48(nT!3<n_H=p>fQ7
%)u]<okaF`-q<YJ/,GXi3,5V4cl*5S:Xg+\Bed8W77@'*q9:G5*P"o1-gT`Nep5;<P1>7=R3]k5rSS1np[m&3XVjdBk'/AR"NYQ-s
%=ji-W1N=,X/uP?.V(`\p5UpL4cQmA')V(:BU=C?\eUZ.-\CNU-X22Ue,AYBlMES/qo8<M-.othYJVpZT%:R-]!nE`/F^X`T?*sD8
%mhEb/iHKun'-Hs2\s&a&,pfZ<71:LP[BcA2@UGpKW;^@&0Ypb[=!\sE`Rh,8e'M(c!"<UKFBM].>fTi#N_UeR:^M0Yj=1eo8QdPF
%SJURK?rt:XrAmuu'KT+U(==U#\Jn6cX(,/`E@NS)"dHDm%o\b+CfN4!QD].M&LFI*%Aq4G$3t;bW)hU$1f_O*V,F0-W0XhHIC7;c
%Wb(TF&9QDqWpqGE;e`O0RIe:#H>p8o>U:/dI`&%b=\8,0YM*8H"U3ncdI`muVs8j`JWhMmW]I*TTF+(a,50m2%m@LKW!Xc9.YUe=
%/*nc9,@MX$Bo/!V`^uFd.?AUcKlmRfJ;4,jmS*"(jfV!B$2+PM2!V$<>T"B%N.4f:6L`;0$f7NfX`f5udCM26^d78l...+2q+.D\
%0q]/igOaVqKNgM_KUX`"$0!:h\+-Q>X&S,@eB9H=P:QQ6if9HCN[kjo0Es4=Xb>:#107GT_NYh-O?m<7-#,Ed(qO/fnCUT.bmA!D
%9<uQq^!J%D#fVR4L@M7;7#D5$"]A47E57^eLTl@,.h]jVEdCJP?+3kB^d[Md8s*C/ZV-!qC[,_7V57[4.^aGndX#I_RNai)\BjM@
%<d*g)W2A:5U:=JJ`@A4W]%AO$]iG>5F/LQ0.U%1p1Km^,O!*STYc<hVC5I2@;[h<^Is.m$[5M74eg>*aF<lYiX0^0Q"/IYE^(SdY
%*jq2h5ZWGel2j[hl/ZM)?\cI!@]8=U[O^lR"o*XDf^.Ek#KKj#`DV!/=(4-&j]'c<Lo(*&<F=Cj.&+?a@$"!=<VQWs=,A8-`tR8D
%;08Zn(!0B,VW\m"Sh].@".h6_]C8iE'gAR*O:$uh.Ptb<d(%gK2P%$+=k0VmXST]4rSQhVpRi6Np$QDT#eBW9&$Dj"1,)c<bu-4e
%7-?@9SPZC#MD[^&XRS^/Y`A4U@;@#TpI&?E)0bm8eV@@==0"kB("ob*)LE+2[uU?fN*0^^i)pJ/N3;%Q4(ku7F-SOZWF<qC:jO6;
%(-WHR\/YdMLB;=nUOi!qJ=ppVOLD*qNM+>MROY.^UQqdWdp:3.)d9\fA)#^3qka$CY#JDon"N3m,q*+*Wi?%nDgDu(ZI5UQ67hd@
%V/gBMY\MNQY9`E"A<ijLG1bm4C.'j0dl&krMmHbgInl12)oI-4TOZkG'nX)7rEYCLP9/6qmaV3@B'WYfB!XqWQSi*PYcb2#R_$'h
%a05A_/ZW&Ue?,UM,[8C5$G)LT\]_&H9%=9&C2NmmY@eKXR07D@4"QhE^+\=6g9u-V*p6&%#J5N$XQfSu6jB<uH_@q`d+FokV.\H.
%(`M5Zl>C$18#k.#.s[r`bHt`kpMcC"7OS;_;'Z8t+)L%e[*&4h>h5pV+']pO%#M9*VQ.pf$(O-p7Xksgc-E>lDoIkAW(Wh<\[!#d
%LqSPrCF`H+E*%Z5gHTJSkH[8'@Jj]]XDSk9US1M1)H7#o3YtV<XFd"5r_N2W?++;7B0VYtan==_8$ae5e"=^m]r3PI]AOnC/NPri
%Fsif$0Iq>Yc>0k+P3?#FS':;km7=+VCHH>/WZC@OB1f;\l+Y_0hP'?5qQfh-^<c-B]Y=E4YA`OdmQ'L?kIB<=4LS-X[/<.)`pmN.
%.R3YDhT0SIF@Jd9-hiN,M%3L_Zhh'np\?OfbB)?.Sg^uAJqKZr2:6!lpX?YI2;iK!,@'E(rQ$$$l#*[Liu`F@f=KXVhfQ1,Gi<9'
%b!A_8<;C?-S3@VH!P'$iKWluCB4<tG(Lr_e_6*m"?7gi.cGf;+(j/#3SWU0-DFZ6"9Z3`k<BrmU'@TToBJ6]@lo5U#aKV1n(Z-d(
%&_Th9nfoHZQ"*4:D5cGHlhJV'l1g#R2b!@i8r!+!GAB.%G=^u5>PWL=)34eJNiU`<>F55tFDq!DG5AD\#HsVH^1N1dIu=\/s4uoe
%M`>%Te`nmjP`+ZsaT#6M,C.LQ,aQIX,iF%oq>""\F4mY8I&N;$g&t=n@!9ijU.OH1XkX?$Eo^7]DTeH"bnr!H\1?'89!obB3/-L^
%qXP>s5XetQ_A1GUlqtqX/uP0,jCE<^kY>nQM&e.h8`rs&[0J_^>`'\,M>*bqo?N%%9!NRmOH;n?(o:%q'!4Ah6m.bE#OLY#/b1/U
%i44BTTlOgk#=`]<N-9#oF'-*MVWG*;VhK>!*1#^5;2[Z&/lj9V9ldr^<I0c16`K]RBn]OLKi/4c30Hh2(&fq=d*@o>ajg?9;L)`p
%&&[cU>_MAf.QsI2(K(b52Ia7qK[UPLc8CcF`ImTY-2!M4\uZ<<q9g_fh$8UGqL;0$MX;g'('iEQUtn[[Ldi*SkRX__KP:Z,n$/s^
%,V^>tJU4?FIFKH:OX7m]T'paoKHIA(ZDu1-X#$":$s4n;;#/CK+a;DPB=@N$Q1GB@=!1G$U8?2[SRTqOHp&GBW`;B9M-J?-43t^7
%BWu>iUcZkb?_0<n4M<p;R\"2rBA2fZIdOu5T'MLUZ(d/BmI'T6XTH;KZg+C5p0%%Mi[J;O50F8SS-Gp+7LKG>U!\t>M^Y[JJj3@K
%b[cBt79qIEU+2!</nC-736KBp1KunVjsUjHaH<3Vq09S93R7EH2jVlO\53^fdkcFJ?p-PODfrk>4\,P-P97+:;PI!bF[4C2Tgha:
%:E)l<B6.Z'+\#J)OW!K:n_6ub>fU+TG3g\=JKtD\XckR%HaduTcn%9M]ltDKMpW*p"$B_M^+VJ"bfLhPP<=k#ra6&.80M$\bK1s/
%Z<gF9_Fl/>9QI%!ZBe"D*3cC480s7_,Z9YlnH[@$r38!e\77>ai/@rA4=ERdq#YEs76S?]1/Yh90`@^jNL;!?6Q/gWT("QN\h.92
%'7aQ%5dofTmk;DAT..VF6_>\g!X'3]\L#K:^l.2al7\6g]>o?ID=SqpC1n.!UDu09iV3ME-ZTWD9<J5ggV-j^Db&%S(nOuqU[Osb
%%m8@C7GI0"kSAS.:Xe_[k#Q2_Kh`Y9f'";r[*J[D74p%9;8O:`As):.^p/POISke)i-OR$7/2k`AjBiHcD[EXjQKqUH_e9k4b-<O
%QTB\*'WM#iIWkij4Fn=Z+pgrq#kE6GZm-[e0PLQ$e9pD/XQSV&T9%lO@ehfT4QF@9:-@RTK9#3`g?-j%cm(e?HU*8j^$T444':,A
%Q?7YRgf&L4#\,j1Jo0bZg]1.!(m9PL,d77c8$[2u,c@uR,dTq'/7M0rP(_gc.%[EVOZ_8kEdi%9I,cP5BIPehVPp=*\'%[,mO[-^
%aY[-#/Xj+T'MJ&[nD(,RVH(H'M[YqB(.k9%rS0&"4r<kfgF2:Y[s0Cg1JU'm`%t.Nj2@KJYqfR@Z)D)UBn&jSS:rO&c^i$9F_?\>
%G!W[NmeELu_Kb7=q2-g^n,1?>Da.P+Vp4Ycjm2qtG+InSFo?.'GrFkK)g%Yd[:eV")(2"qiYa+m.YH#Fb?N0e(15oC-NW:(^V7DW
%c%ibeTAJFPs,16/q8n-XigX;iVsa\:pRB?%T<:B5J7u@hhk*,<D12lEHpl*!J(tIM7H/epQ@EkLT6[sCMLYPd5Q;Ppqu6ob?T)oq
%c^TF_n(m-N$\\QM\+kC9le4O#YHRGjp$Y)m-*QT\l/N4;n$h:WAFCq5>.-HhitfDs0;c,P$]H9Qg-7`k5">;QC;_G-(GU+)L4Jn1
%qWg"]!$B\F1F0Q$U@q*DiMSCt2gsKF/^pZSd9h!d5)LK4VqtDX8/H`^;3iZ+O4:c`[#K>gA-(s9G,:1cqJ[Zs9gCQroT.j/Y$R'S
%r[B'%>s72QR,qp#J\?os'W]'sUj)L)$`]HEdmk"'B=;l6/ffDBEUVUFl8$h:ea'iHkuQ7[G:eP:+*F:MY(?]Y4nNFkU&4Mc1<.;C
%$[U/i?#1Ih%=9sI]if8V/.)9OCL+X=@N)6qU-\!KAUo\)(C]9g]6_g-"j>.OJhfs3COr]PpK]q"LBr/cmP;1r=1Po$].D(3IFRAU
%7B0t8Tkn&[S5PGp3&NS7%S>lQJgC1LK$Z`.=1NW3mXc_V;-2PmD8T\>=pJn4UgB=T+S]#D9LC[+1^Ldq$udrbJg>_l<tDn/0fPWh
%abV<.$_4>56?Yo*fP(,gZ3GVV).OQY+'s>9'J9c`=a4bPmHuX2Da/aGmdg6*jLXamEW7J(Yei]FC53&#>3t4:s+$,cAQ"<WB?u)#
%qM-cSD^>C?cU[1R#RI2K-j?Q5S/b:VdS'(oK0N\N_uY2VFnM!i?oON0`:"uIB9)qfS>-WU6jT!KpmIKWe6tr\5IZE%M/b.DPL&fq
%3*o9=%*O_*oQ%D_K-kqb!`GnF3sq(TA1u)POs0H?K2BA5[Jq'sVB4T&^)6>NMW#cB53OB0*=ug#Es1!&-<C1`]GT)V6b(390G]J+
%klNH0GT#4Q<hG0HU721YRC=Y"?I2A2f3M^3JpA23Zl9P\)`2XMCl=3.FD:Df]]^OF?;*rp2IB/6!:/IYbJNQs5@_?0)W`+LRkD9/
%NZ34q&a;[]&N1RV$o1ZeMgu-h^d-6W])%efK/i))#W@8O30GsMNhKg.9JCa_9eXEH$]M.BkZYjdd-#)7!FPQ=CaP6*@=3qsqH:!,
%6I^Rp@f=tms%EO;\6q%kEU)`PeI3k05:"m@.BGc2)-!9S13A]VR+@nc67GSE'1U`/*ju"6&]0'M1rFPMk*T2A/%dY\UF,m?*AFZ\
%HJDPoDL_a:<+p[Q>KD?#ae0<opX8?5hkUUCD63%SHX&f/N"q$hGbS(>>3a3`>0`LV*$]sb:U%m-[RAap5^8!ia<u?b&dOdt:q:jF
%ffo7@/'R2`n>eQ-5$'"!JMN)O<7(Gre`UZn%*5IQ(kgl7X,jXEJg:\6U_j]=q?](TlEeM^!ttIX72)Pr/jF[s2OL._9JA!g\GBIt
%'a)U5MT?;."'2&mY#M'V(grUrT%BSbR\N+k'!fYP6fb#*S2:>rUr("@1L(uVI`<%cW9XbE1;aajB?X';@GFNn'f]IB4ZkJGi,Wi9
%)*/"MeXI8?..\52WU#Z*/j@.Qjt&<l5S13sLp%)_KqrVZ)$J3uPNNbo=mq#RR"oBZILO]EOH%U;0RtPV]IO"3)961YH'j/M):qdE
%LuHk]"uA$Pj_)BLTL;D'+?>Aup37L+0Ha"pISM"@NH13`qhm-ncS/p/*;e:L#nUN=2VS?B(\<kM]#p/EN.)Im@oT2LRkG=As697>
%lGqMcf7-7][!Y-,J'NRA4ZkP%OThQ**Gh&Se&*mZ7E!Z(Z[L^D!Ug\#[6O'Y=tB^)6XP,34ILbYiRG[.p)>(7JHmK5UO`4R"\]Ob
%qga>YYd>9*(7pLV"'L]u@KEed\9K\0`u&7IJJ<jL)b%g^+>AKZ.+Kia!4ocI"rq4;NY-q:>4lp,_Q"*4O+(XIa33k*:PZE_5J=bD
%\btsWk*H3T!Oa(6>ftqgRt&.tq7BEEhVNXpq+h:kIl9Ogh:9,e])74E?%0A\COaXeq&>+6b?s(Q>2KFtWt2s+I.[1/msfi_kBBue
%,5i#OiIt+0iH9_=&s*ig/H>=!Ce,:+$DNH0$5XTP?sb1Dd"(Io:^jL\UC[u[H'eDSnfmFq:?E$_AjWfcY>^g3=O2AJNS4b$/Kar[
%YoM`%QU<^:DNca1*s2l)O]ZuQ!HWNF7oZ3p7d"+.:&uQqKAuJp,ZD:Dp4pjJ;#!$#QO/JZ>MQ4(IGPqt__=g`Yh0p&oLQ0Lk;Pn]
%jdBSk3>>Mf]Zn+H*6UkPSSX<VD@0cV@u`*Cjts#&"N6i@V,OXLTTL_$fm"On1'F!#=nPCSic/:0WBf`#O7ho:`4qN'n2MHii*esk
%W!?0s=9QOgqO!#VS:MR`,4["c$\I6V.VlRmJ_F[XHQ4\Nd)gu5eBe,T]a[4V)aV&2)#Q5sCVZ-?qb3`6Qq$cG#nZSgB9SPSDF!q[
%AARI9V>mNu02s':3Q:9$IJ/0OrK(E9"sEMfPb:e[2,YRTq)%iFT(7^a*AQ9R&7/Y@5jd"W%I/'a@bB\ns04LNR$!EQN0Q\7iY/)(
%[3HAf+hHN:D$d$5EOdA0=D`oVe,LZ]M1>oS6XT9g"]hR>PE)-,(G5_J*b3:aPmYGnMc_:7e#o'<Y$*sdmpoK^OX`)ZU+jPiPo*s/
%d]C<K!.f(L;)a(5[1e^NSS?XpWXAu2osfDChoX`"&p48XQ:^n]!msb#`Pq0ib4`#]L[%2-:4m[lcTRkehPFDLW36%/^I?X+;/Hn&
%4B2Zh^^B\X.,q^lg7G;p'j1.>I/<F].9<-WP:3ZPI@WO98_!T9?)YOGokj-q-<WP1mp_K.JI24gI(oFUh:2^brVh]6(`/8C9QX'Z
%rj3)BI!Am"pMhd7-51t/T=klIao8qm&(Ht8/nQTi5:MQ.j^_$7<Uph2OtEFZ1(,c!#*BajJ:G;N5Gd.mO:Nd<X&W6J/<2P6e!C)F
%4STN[I6IR\$.`HiE2`%Dh[kZ_IeNBX+91F1Qg:9IhRnP,5@!&M?/BCHs7RJ:=UU1cW<gG@mr;M8o^<6&o17s7>V,!SI1M6BY8p<J
%2Q=qaY(GoOY8[A)Fk<R\._&PIAf_N"$>[RYIaQ3(ihn,EQ,)C&3A=,1,.'Yob+\L,J5?Rn!^8p6%Ga)J]&NAi`.4FsAm!=_F3c/Z
%T<20%&Afj`1*BsPRgFeSGfPH*6Q3t&4Nq@2RR=!i6X[HnmMH^)GRipjjmGD+)M>ZXA',YS_3\:c5FDdM,gD9RG+G@m#8C?D2YZhE
%Ft3Wl/sKf,M+ho!h_0NT*&Z(,S+Cut?-#7>-KP$ie?sU>4e:Bt;\GJg."#T.6b59/JFj[9$de8@U]DpK\SQbuYWYoM)3L_d,9qL[
%Hb)4`AZ?t-Vl[8r<.Zu)ia+`MoLQ4T>'"q:f?,6,[U@>`W.<e$9d(J;g;?rQ&gLBpYgt/mYj_MLaEh3?=;*:T`RRD<Mg$WiW7k5$
%"qlgAJuprg@RGUDBDXVPI^m%>qhCJrrQR0D`h:n.Q-\ru+A;!Y#HchYO)!fq#$X9iY5GgA9Boks>/CIWZg9H1GOF1/2N&Dn6KBnb
%?spaH*$sI)s-MQ_0662Pn;Vd,ooMGU`kX@M^ea=$>b8orNqC)(qE(;-hkbWgS8$OU:pH`P8Q!$3s8*VCDq^XYpnc'0[H@[uW=%&g
%i86f4Y7L>tI'E'%pg@I!fUk(SQ[^T>I8NQ7Ws/CGUt`#GI1c;qmJ@mjq],##*:<WjBOB0+-/+]RX@E(2hg1=VI?+#LNqRm]p3lLF
%hoFf6BDufCiUb)3XKS8pqW]^\[c1F]h$/q'g&1@n0>7IdPs$%n@&S,3!-4Tr>ZktC`KYq:@YLZg<c^Tr=+Pmj-$Gj](hTHFiM`Yc
%:B7u"6$4r]Ds?I=Q=aXL.+(b^Hm1#*:Mc5NXI8_E5"CJm^^Ke5;4n@.ScZ95^mM23BEh@5k[i*a"#$-XLp0i47"C6tp""f#%)`LU
%73IJ\nANbkC[,:/q?7cS_L&mS"5fKF#JCt*6%SMR:je'o<,b7?P]`EA+>`UO+<7>/Jm$!"9Sce,",@!rLVS!d7-u/UPrpsTGF0FC
%E/Lhb+E40&S-:k\P5li]gBcFfC*ORtc_9NgMeH5r+Kjh]"U6<Lb<1jR-,r6K-NF1d=/GHHZ#t.C$;u:]?pK3'iW78Gi"Z;_fl^GD
%!-h2k1RYcjf]Q#L4(0ja_kcKCEpk\5\r#SV7fHt<MYTSHKNZWR]J<gK`#]cMGDM[iX$ItF#3l>EOl;)6^BQ_!Nf^Q`2^5ebTHVQ/
%Xjl"V;_di1h?W4OTU,eGe=gEYj7"VYZH9<ONt]:O']$\!"Uhp+UR#R!a=n$tm`u1nNmVeS9Y;7LA2cd"n2)%:0I6l,<()A!D)QXG
%M_Xj$hAB:4&1j8mV4`St9FctMIQKKC!:++scGR$)!I]kP%d7+MEPP:r_#\dB@L0*$;\XHZF]uLo:)li)cO4W0,"QSQP:^Z0gBiG>
%knQAr9IPf9%@*q.7oWY9!]heO,%SU=Cb(7cAL;mL[ffh:2mgscj#HP7QPX-81'*,)JHK;c!Y*=#?mATX0NOVc9EK2=Q4&6lF#%b9
%Vq#u)i+q.u3kaY7Jk:2j!mat7(nH?q,"8o7f#S-f-n].l[Un%A$ZED*D)[<4B?Z<#SIcVnEJRbQ$m$u_U,cN<;;#=$STo&,2YVH[
%)QZM#K;=aBC*I.$D9q0cF$m<X:33_eY"WU?=6n[-"1Ljj7&`np>.!]p4JguIU8jl:D%)-%[Lc-d*S]u:enf6`p5X'RLF+0I;k4X\
%l7ZQ1_FckX:no$9&S(HQR4i.q7`7<OiUBGa-9[8b!7*ti7\^)?o@&qWQ3^qKE/@!N@[(`jikYnZ,:;so9.[)7D2TMOb2lZF^%@%I
%b]4=C,[4MO0B]k7nZtMJ)8nMiUmaqME`BA:N#tHt"m_WPfmKQ9YQ$;nrV?P9H6;JJ$;U':B;d5#_6q,Q7R9Z@RLXs=J!Snjd!`VF
%L!uB:0f0.m!:dqVhAWXC87QQaVOI96>\)4I!>l0o%Q<,#V,<n&4>7=4Ps2+k[`_4n1<hEr./-Z1"pqj%dNY[,TMerF[_0FkA+9qr
%[&6P/N2=(%>h3>sBOA`Tf-Fm\",2E8#h(dXetdObg:/K*.jXU_e\n3u_OX'>-71Zk^,ag.(8eWqX6!Yr6,bpS1qH9'S#$((9\O!f
%_glK'(^Bd6@slMh291HONB,/9\E+ASflFi_WBg`#Sl-6sFVj2Wl%;,N)."#&Cmp0g$48%9<k&WY9't?2_GE-up+e$I8q@AeKqPK8
%HbQppC3bRL$LfQ!e\2@-2MD]eWacmM>.:]qYY0T"^k0\8^,6Kc6ZAO5\Ojfm1r$j7b!\,WW/5NWd'JSP9rr8.oso3ZY2F'&)bAo^
%>a)"kGYa5lI?!YZ>tf;L]EMnP/`?o)K<#&OD'C!2[GaI"CY\?B2dPi]m@i8+/`e'4(V)C+&!Ce@Na7D7[+Uam[\jl+.J,;.OWZ1?
%aMH^bB'V;mL6fs,d<.^M3"F`[R*8GA`]j"3qL2=6!Q_PH,G;5D&ncA4!?;qA$t`(A9[(K4<tIiP.n#i>o'\#jC7`i(Z:t+@iP/En
%TI=lYNao=@_@-o?T8eC8\,\4N1!>/I^-/YlQ\Qgg6Ee)\&]haifSC,gm%sq-bmg6GLsZtg`44N/._XKc:qINc:::FQJu)l,aAt:\
%.Y;%^jt'QXk146ApXuq\%`8OelP3V1?!^`dnDYFVR*b#!/VeD>&jK,=F1la(03RAW**KM=Cp%<3P1t`=QtNg<]mer7[i.&;9!BQf
%82]nR'fA#7mTJs9]).arreIWq'V8J,leKH/&IcfV"D5gsD,bOi&a46d,0=R(T8:Mq!F)Zr+a-ScG_Ul0a_d4qYGq;34T]u$bp!DB
%71#>rS\RNFac:ne(:.ZSZ;^A1@6V]mASgjVC$_/H4aFsFHEtl!%*3o]#.;n>n:V/%W<&'g-/d;-(dQ!ZZS`R0\'A_4^bVQF_;/"+
%`-I^gJca2$9T"Z`ho\fX0M9Z*m,_^H@KicU'HPO'=kN/Q^)/F20agXLJ@@?$n$-t#]RoWSp1-Hi.KZ`C`j&"N39d;`DU;A9Kl*f!
%d0pC$`aBYE4J%[(r?WB%RAEo'%!N16U0$G`(#E,AZ#ZBA5K.QACq07a*N:uA??O#(rH6=:.N&i'3V?mA5PbF3:SYS,;)7B=i>!X@
%TR">3PUUQCbM:(AZW/NMokN0pMO(BAC?7?,e(U8j1J?8%e^j#h0r9FecDB9;]Jj-gkPY-MkC5!ST]m,mZ,eqe>H[+r?b54"G2&dK
%MJ]/++S]%%.rJ*+93g'VR2ua7W7]\SMC2\54DA(l7V(1XB`?pN<Y`)1p!aGOD36m6Z$m)&V+#.7SKJ;BD+k$-WRdFO7A>B=9q_-_
%</c@sB`O!fOG7_T8c1Wahf;2hf5s>kUcHW]QDCp9BiKkY>NaCmB^U:t5q\dCZ_oJ6R\f\9Y4d$-6mpau;rU!<`9J9I.J%AV4e%P-
%GaZ31&b$P1mDN7)a`*Fc[YX--K%hQqBBaZ!kVq24R[5jUN'kN1hR>C6CG.h/Q:3>d'X;/!?r?4,fCTh>*lfO:&JeLbWYotZLF>S,
%8#p$p=e3Pbn7h5V_*Jk`2>.EA.&G&[TghA.>?V2AV1naq^.X>:Q*!k0!qWph0GdXrC`g\>P*nA=kA&W-7&Y+C]Mg77]f-EW9KYHE
%K,N2S-9<^[];;$lcW]=i^3,Q:VV/hd1bQtl?R<+K1kW3_Z6":G_\gn:18H$XbirnPcIW@OX5GcM<OIcbCW<a;&c]:+g*V,)hrrkM
%Y:&S;q-6A2[:AK*!I.s]UWc=V!.B]<R#Nj2r:U^96@6+;%\rA+^j>,]PAPj2V=_T9C,A#DgK"LAp>EkUk%\h[X>A&VN%UDh=]^H<
%bI60*(qS"g#o@M=fts&r4FL<X%q7eFAQ[BrZ*%aZK=c@K<hdC[cBNO]L]H8fP8Ol2&P@SHUDf&Eq`6`Ior?2k7JBjM)/RWBF(JNJ
%\6eT'FAWe$f8P#l`^cVWV/41X[N[P40nD2#\G3m@Uu=?cEJ4T3MDoOSNHHferD&]$_,nhe[:Va"G'/hS2&ThdAZkjpC2[2Kh]rb-
%;K@NY1eCZ1Qo-hLg"k65Qg7AY>1H6DB_(RLQZ%]`Yc<1tn]e0.4T6Ik!6:QfFWS?9ncRGL!q"Kf^7?+&`S?5=75J7E$-V%b4$qo0
%QLGqG1ZU#MTE-NdCQ\[p#Ah+]p(jk46e801JUsL4)<`T)L2eEd>BH1X7PCrYK%oC3IeF/.YNS5R/X:O/[bGY+^]&WZgY5MjG]@".
%#9Q5T$>R;^<.p)0qI_ObjuAD_U]L($oG'h>MKgkIV9M8eQGSB[%!*0lo.\(bh.mOSa8E4d:E,]<0oJes)F0KA;eR9,8hm;[YELi`
%:>di<.T313lH@'H,+p0J["iWrTo9!FR2B1_#%4pNcO(*A/>6^5o.I8ZY4OEP=VTE>DQkihEcL=&,XBM^AE3(pqpNAkhOf72@2)Y)
%V4.7JbL2,oPdpk?[GU1oO#m'AY/<6@i$g`tD`qJ4&mmas8M2(%+?b6A'/n)im!jW=S-2amL@>@p9u*o2m+K(4LU&g_PqaFPJ9+9X
%3h<B.lJ85HV]o3'BKktNf+-G"5O,nt8G&`4"gAdoKgBVoQD.6AIRjMcg<IDec2(1SE>SjCUZS5_-@I'")iZ"'rR(_]%UF,$]iKA:
%:-q"Qh"<Fo4R-7CFm72d-C'r1H4U=p\=Y+=W);GX2e(^`DsIFlSY.d9B?J3WXQJ=I1g>LJeB=,Qh])FQXLk9(,7bXI9Y,a!`s<eA
%j[n8pkio?,FA[HZJ>'u`?l5kA36KGRKKj$aj#GASjpXKQ,+_<T!4XLt:(H<p8ik^He<,Y@7"P(.5\,#?7dY`k#8Vp^=$fnl+sgb;
%UX+qB:dJ?8FGRrJd7gFe-O"W;2u7fGg&YYh2Y)N[o31,#&7f2'#pMpn'=5Lff&'p\3C`&a';2,7CRfakh21N`bT_fV"UM.S#YM"p
%=:[4='kF:Q147AP=c7K]Z4?==V&*m\gXE>_BjWXh!VsaC_<5-LIL%]/R=2[USGHQCRFcndp^+`k62\c4CnYaeghXC:VE';WInS!;
%QU_UFQBrSfrXFc3"eE]ZE+^l5J\W+EfgM"@#[Cl""8]q0g&hmEV35LgARIHWntLEt=I,F0d\mfg;O`f$)2'm%;UKfHL/IQd"9kDT
%%YBljrXsS!>nU[DSY4I@6sIP?@Lc79@*V'hQ%G'5$"L0u0?Lk]_9-\rGpE5`\-,#jP_U8i(df#.4e#8/&8/Hq%p?fg&m?ES",e1p
%\-I</*#1^$0Y/<!P#&YTB=f!RWf4N2A'i:3.Y"m.>S4ph6e+S4"Q0hjB';^M3`]AU;rDN\'L>BV)8S`pJLTj'TSSNR,1.\/m(da&
%:JQX!OieAqe<pZ"fh&N-"e\)\Aqb1\L5EFUndX_?9h)I#joI@CRJDZ8^@p8H9`<o1&-c$A2F"<RWeJ6YPmlh!QQF/?'=dF,$qfc<
%j)u*:<g3W_O[B!\X9W9SKC3%#X`C]9'6mcNU&aAj;^0m0A.)X>N8]39MoWQ@5T^#lr=\9uDU21t/LB`f7n'g@pf^E&Ra?a%1n'1X
%YJ%g./#a2]"4QF$_%gfhH6&:COGcXj86D;!8<R!lT^/@FGqfW)6GpqcPfr<=/MQAP\']^l1odgI>pRTG,W7-\"B5-LD+D+eWu+<U
%)$U87*klg?^#>Wuj#G6S01YO(n!GrO'GkddjT<8(k]M</?BCj>%&%,JG@=$OV1^:t?*!=/-ni:S_:-.D<m":%/.=lo0*t=ndt1X.
%03jlds&TA:p%m1k[`PE/P8r5&ifh,VNZ88DgD*<9[DBi!+BB3[U,"^M,#+dEj%H1fE9rrnN`8$hoYp;ph&>aR7BFb]BePL^Z.,p"
%P#ItFihSoS8g\6E)IfnM=%[?=7L#+MP2S\QQ8m"%n:d%n`aX?_)J!:c)'S*N;jO<)#Y6+q8TnF3ZcrUCGLI;iM'ibUKP.hTFrfQ7
%1jc@1bel8!8g1O$!Q@OO`Yam>]3^2^BS6FSX(Ts;`fXi*Bg@lV>T6M/7psAM*V,JoF3?2+iG#<8GC;513]e?FM!C$e0Z.Q?ZPWj2
%V$'?-Ep5P/1H]]V.0<*$Oi`GGJ=pSV6I`'N*oWZ(.<FL(iLu1C);%D"(+;s%aeP"q#_m-aBOI^_^r"(Q?3o.nKQpmoL@l**la^Nm
%Hc.C@]!8PC-q>_Z``LI7<2c>,1#iTK0,Vr3>q?M2AQ7aX]9#VqaeX:&1<RO8_rog7$7+dn;pX-5]`<fkPfJoKKt@MR84C+OK*#PO
%<,CdR9WCs5i,(+!^n,Yr0IB)l3N?Mb#;fCJ7=@XB0JmF$AlGniGS5pZ^J1X3.B[i8T*:TP<Vtc8fbVH,Vd_O(gZ#XibR"uM.)8Si
%7jLRY6fKgGK]ocJ[mHgg9o88pr$YNCXTsaUjd/Hj.PE`LRtB[=&OKHY-[d],e.jdLmHr<.J&)B#2QE<U@$P;d!%pRc?laLaVir9k
%O>r_Vib_74B2H]&(m.7s?(@Wp4Q]Cmrb7r,=>X73riC`7#%];?gs".W]FLc:(VMsI!]Oo_\`/eQqcW_-#@%kFl]p;NB)]Y(LSWZP
%,dosI>ePg!#<(s(E"'=]k:ddS_-i-lk-qkqOSnj,6mCMs?s-/9>FC%1UP0E[?<E<V6)sS$4]#[<28:#%famq&`L)<]&6U_NL_Q,4
%)[D?G]eV=Z!T(\b$`Y+%E"P/9cH2/9#R8#=R<#pr%((9LA8:auPnVK?>LBS)'$8T14j1=I<j8mUJXMD"n"@g@2oo3t#0^%K]Tn3&
%O$UIHZVFG]CqIJD*BlE^p.)-W9iGu]k"`R9#S]md7h^Vu$h`,8%!/U&.3:YCV(-m&.VOZkQ%>^-)NqHSXtK6K$8<BM#fllohu`?E
%=VX1O.!D`^fo4(l3s7OC'lM5e#u+?7b?3=sWUS"$-[/>Z(PS4(G=E<%Xa4,[A5@)%_;)Jt\ipI)p?qlqN-soU,1!SF=:u-b(JcHf
%=u,m[ctp+QLq"MCe$!^IBcSX==^__g:0Gt@L'&4s"V*"u7l/`TAi&+]63i]\gl$3''#^H("$,#FXiKp0&@FhuM0*"'%M\LcH\e'L
%/(9JoO\7$2URro(]/_o,R$8g:l5\#G)VNia5W(4t2%WJp7S,t\QGf5;7HWHC`f\pn?Q;-bifQlmY7*]#0+'SF*`O2<(VRhS9lnA<
%"*2FkREO:75FRodUCsHY5!%OS)']GkRfe4`eg'YR^9\jb$a9oCl[bjKL5SY)^bI9ZOSl^>UTg]F(QPZj+E=Z^7#c5(']U=)fnD5C
%euLc\V1[1NpGfpo$F'U"ZbG3G8lWe3]kZ#hm[0fr=`%#HTJEB0a)T2-%C>cTX)b,T.9q^,Gp6^jECbCH(l9X4Z3sNH$cTtBM3*d4
%QtF-/d<-"aRRnk]a_$JX'/<-N(;+IMbuGb,.hqAg?nIB,c]^,!;O_d>7N6kLo/Q+a/!)p8VUpZ.MJ/cqCsgoikfW'`[5\euXCq4i
%&$4G?3iIfN+")5jM4#2F/'koHSYW,`idJ!E?DMe_b3[,+MLdp#_M'0?3U*C'bZ_>XSF*F7L5f`/Ou4L1cUaGR5Wl>V++S'+HW?C\
%JfQf;.->WVmI+mJ)cEU8&MH&iCD)j1gi9IWZ67^c#`=u`W6N+$W0oasNL2^U>ZRg_I:5#SD.&o7#%lSeZHYN'NoHU,]g_4!du*s@
%1KHtBZDJZk!"pLhA\lS#F)O4:bqod4*'.@NF[43(.?=Scr2#%^K'!8t&9t%)]JHb";-]#"Fjg7/S4(m29curNn_Ec&W.=BB='Dcl
%e;Qj1I;-*dc1+-Vg_@02=4Yjn8c^5up,m<^"\=pkl_,E,#-3RUHB)m&1fRqm)E("(;s@[.H49rfo+nXM&h'W88Z*-%K*-&u-'!_T
%X_GFW!Km_g-Du9<\RTYL-;'Q5^5lS7q\/?Vkp3;ARB#:+H[bP%cW-LT(abM9OBLmqWWYF[(4Uoo+?%:A&G+sn$NsrDF"s@&/*K++
%O<!9AdR0p6qApt7/8iaR[_9qRO&k?G'fB^F(hjB0.NY<E]@Bt-_-EpU0I[um()981WqA&+b6glNo8Mj].:(LZbg(4qbhq'*RDfE>
%+Qfie'2#T6fsleMhEr\84^cV$rK`7>l9WY.;:T[i(1W`O-4/J+[?a8GY_[uOAs1dWiE<L@=VSCQ^lqpZ7F7r=B=$qm:>Y:tZaHQE
%0Pbs)Y31VjD#OS@+qj)YV`lgHD.'+G_/j6P$l8aSFYOK,0$VIJNe(qbLeJ;\#;t">U*/(5VMgXG3]UMl['KoS=]#][Ng%HS1#kFg
%@QfIo(l;0dO)QuG7Q.fkdKS&!#HZ(JGZs0W2(?bE7A!!YkHMW$]2Uj]C&XC7]<"c+=aA<6p-94-=XKZ@ZrIUm\.<Nc3u(@qETH`T
%U*5;ce)=.\#[bdg)%G8(*5sioO3To@AK=0Ie;BEaTta_'jo4<d3jIoMC`6;K<0'-AKB_C#069$T/7jZ2_,4@:["bJ&feTV-$P-TC
%c_jhZPNLY3$$*OVph3oW-p^,nZ@eUVajfnH9Ktb\:t9(s\S@*52>=fBXBMNAr*hXBC=>OP<Zg"b4-(g[WSBh&bf9k5Q@CW@Ve2=+
%K0/,M1\qliNAam,3[nF>'Wr:41B6_"`X+^QI6D1iWbjn=(>8P@:]F<jk(H<AB6d@Fckq@5?mucV=[M-mT@(PAOH5+p'^$Z<f48\i
%CN">n-q2dQn?-0Y.Oj=s5>(j.jr?0L^qjh!**S+_@,OnS1ti50'1,9/Ag"?E+dYO&;$0nnd%gGP4ZFt4*&^HWB^:XlI/9+sclo9D
%7DZ]S;'M]Q[VT1)j<k(*K9E;Krf(l[;2#o9mD)C.;S/UFcIG=?TA?\:"[`kV1*9aN@`-"14L84Vc,q.l@"FH=hIT8,lb%"L<rS[N
%@Z\V1GZf?[K9efl3El`>WPep5r+8*h"7%f;=lU;1?GmrUk6(+g"6[qNcfo@rcT]s^`bjt5GA]K^R3AfQXqIj+?jV<$/6ZB<UKMdR
%R1le0%1t1D&cn8-(GebQZ,2buS.\bN5[r0SB@mTE5cGp#-9:C#2M5F1@?QPlX(g,M5-VK4=*Ca!d6&L,/#9^GEa^+1m)MJ$EG^p#
%-p:rTS]3XO)SgG.:G"%g^QdISi+0Y=Os:)RN/R>sbj^/P:.0N;F/Z#?iYno^,)%68RDh!#"rCh6BBOR/e\I#L<S;d=>9;.GdTZu0
%n"UrsQu$@=R>_c/)uS7e\4V1*/"M\E>L$I!8L+#31auU'6al@HN^KDEe*smQdf;?K*3U?V\`ng(0t]m`BgK%uj"0)(2?F*.@rJ_Z
%N?pCc$Z%(%3s'amTMF\_TCk#4:5L*WRe/;$pah[a?R]7)K4Yh>KC!!cXM@@][./8M4\if`El$<Y16Gt;C2RKaO</`'1.(k09]e;%
%U.RV&[_2/LP8-)]=r'-)6_7X;oXo#g/GPr[]i7)oTXq\1*m@qFfIYCn!WWkWT`B-#X?[AfMj2.!K5<*l1..na8Zb7!2B^t?$m<fk
%LU%C7>7D.B&Ndje"dkPp\`0$e3J/f,@N_>%]4li\rFf5.X9F`F!i&rGR4:(/Ko]P\P-Sds9L?/6@aKWh@P=TgOmSnt.'jL^,3CCc
%^.AoR((SgP'Nr^-B*@@7`,&6:TejD?3cc(9.^'Ph0fMjE:Tef2/dPcDFMhiSn`$50TK[JOK6m,cT!</j"qg6L7I*]$9TIKbQ,6I$
%$jDi<dTad;S]N=T&m&&/0oT$CX+oKZ$bLkL*fA/cc57I=Djdjt0l'm6VJM*5#b3sK=Qhf@f];((S]ijW[b0i@-!#\`OI"PloRbn4
%`h1<tm+UCWo84Ht6HbqLlCgW;/.RWY_P3n7;n!BW)bie(O5\2fF%(S^'s'S8!%[T1eCQ'&Ka94A!P[,FWW=$03JM2`#E*718YJTQ
%T6MM\>(l-<=s)4-65;0[\t@k6.Kh@V<h7-P4"Dd31`8D34Zca9ic-HD[re;kT."`3A@;Hi4D>+(n`mbbGhMH%$"(*PH"sr\*ftr@
%-u+N$N\7]MKG>'RN"pce[A"8cX*Vr1O&`Yb5/AD2U-<NOTN0.(,Ysc%&76=-ZG39)q(r)Jcq&.o2EH<XZ)84h&kM2O67kBt=6_MN
%8k)hj09&X7n`Wr9D+g6?_2IO*.BCG;</XY=RLXF_c]iMjM#`o4;a)G\2QYqD-n7F7HL?^d,J$jK;l'VqKre1X(n&J5Q+ao=`l)<!
%6)e'-SPgU3#?9s#n!-3bNEXCpCqh.uAgrXE1R/Y+1^f@8S))>g;u.Vc!X'!s`pZj7pb/Sq&=o36PF,$d_")1A#C.TfmD7Cf+L^W+
%(/;$+BJJ\>X#FNC:Pm>V)Q\ubc0Bk<1Fm8r>;?Nu/h6or2,.'`dZ\)`HCh^e!Wt,L>#Dr:n.c(Y*2HGH,F:,[(=7csR\f'mg7VFc
%/@cU">Y1,^U')dk[4=leQ)1!M<?K7`3hYD]We4?MdB_RPRiC^CQk.#baQ]a)n'U5i8L<38`&F)q!D?NAdi:iF`5'b%JdT.<@rQ$(
%65o)SP*&1f*jeW(fW,BLr+QF9X%VNUDERt#oh"PcTR,%N@Oh`@gNb<5.eME2oFVQWPK"T!BT?*WB3j:Ymrs%4Te%I8fh+sP7V=iH
%I#Q4&U)nRC$j)g2_]@YAiLM8an[3JR-8T7o$,m9"'9Oa1\;\4&gI\J?Z%QipAsMqi&mHenX4G0rED/aGiY<I6@YT1`d"Lat_.)!c
%KRmrI<T\p8D:M>taC8g23gC0T'4f5[_U6o<87E2<,o8gWI(=Y^5=_OE?X[Ecoc`j9`7ZCn/o!cuel%j0,"OXO,@ZH]=-,a3"?>`0
%[n<R77ri#aJ^Qo`djY#l=MLr5ZLq6J<K6-lA$_t`_'thj^^=Z:S\9!.XWBM><_4?(l(N_1WKJ[TG60,OWNu7(W)ll[\b+7dcn,Z<
%*-;UX!+.S=0X-rnf:e""P^ZT*I$V?Rppa2'oPP)V;F_m>p(ef%ME#P=0S>IjE9.9(<$m7n#?G2TNoiCkmHsC.Pedbajl!$;9;mh^
%m9iTSOA';CVM5W/Khn!O7>._4<HDsgQH^1!9;,Voc5H`PI.]kt@Nd76FPcn2.9]E:"s9RAJsu*?9M<B1)VB"Z05Mta8[Uil_*?@#
%p,Y8aWGtB:R5AJIUQX91!B=<J+O\-.#FJ(oqLb%7/EC/T>QiPiZr1]F=&]j)-0seqkugBaZC1d"=h<+R9\"al;8`;-aeOM(92U[n
%^sEGsfi!LlfP8DhUs\js%A%(/JNmYaQ%o72P>H5TG,XIR;9qPK;"DI7SgJNHL^smfra82n)/qjtVV!\.#r((lQ7Gb=9Gj_5P+aAX
%DQtD%i`HaU%$nND)+$jqLL:T5I>_K;A)NSKkomR]7FAD7/@BAaX>9rge6F2A<#97$.fPXHSOpPm;hn9M3LOuG/$Eb":K;H^"5#8X
%lAPo?98%%aa,uBTG+5OCQn0`4WjEAbdPiEhSUe/ba5VI*.Z9`20#l@<nWq78dN59Y^3o)j5e&,78\?bZ;sH3ES0LnAgJNU#/^"[8
%C5M:WX%U6%:>KrT!6XY4_d;CT$tJTl6W9*cM`6[Y-Kt(iW''f(Kio!#]XHH(,rV#L(p$f$mm;3XEb3b*+E5G-ab$KJ;_4M2Tmctm
%AuAJH'YsC[/W"f(MmYHsR`A9i)g*ke:^@4h9*s3aN#`jY6iuSZ%VP3f412";Q*3S"!=5WDB=Tt+%jV,a1UP#O./=<a#F4;*#`Q+#
%dq&WTkUR\rgt?a"4\U:m2qBLE_#)6RZ0:.)K-"`rX]cTW!?0H:Bp>JbPerFpOn6^PS4Q(r-:&?oOd)UF&]c.GcmjZ0ocB%g%i4W`
%M,$%(g7h1EVlLKXiW:NZgj2e<=Q#9U##Zcu%sSkPIH6>p+eKP2Ka5^ZO\1kDa^IuC-o(6/Km-_2<)d=$=Ia[q`F-qsZU*?.]m,o7
%0^G(18N]54=#[l7\V/+Uif=5d,;;e01Ka2[&?[3T;%+*Z!t^g1hTVLET9VJsL+F.-&4P+0];RK<@-,V(KtOWpj&q4)PnuT;)\;g"
%WB6$A(MdZP=P4F3'<@al@X!MP;aL.ooIm.;,7g[-VHL#F[3=hW9jN9=Y*:=%C-*S?m4K7#&6-WbP@TkTZ2qXg"p\!oRA6(@7dH7,
%l%tU8rPY>fV&"\709nBBI*f!O'!%b"*>*F3GMs%8l6&X,`ZHJ$P/^l97j5AO^7N(e[U+uKjMEXTbsp>inP>:aYgV?8M:7@DPOlX]
%B+(5'g!]^VgoD/i&3'T7#Z#B6SQq9B=?IW!69tnm;15d(cGdV:OedtcSpWgNA8rO/L8D"sUsm,%Ba@D`W)j>X5i8Mod-r`c1oZ%M
%Re;3-+Y/C"FjT\)<@A/KHhS=USt2Ub#q4JT#h7YB`1m-8LX;IVGo!(]X,Ms#"2a&nVj"1>)8/!iQMB7VeMI!V`_lf#b"5JQG\8CI
%9I]-r7oLbBUrF%hNQ:i#AgK@>]i$iVd_tW@:T<kMgQG'gW?>B-=gPaP!`*Qp9!742$;*^M#SAHdIPfFjMoS8Gb&al8LcLGUMNk`e
%o\>kJ.YsUM70Q0jqZpFm%"[]$O1`N/B0*Oi%J^VFM8e[1Ki73=dYSlS]cBaF!>RLlT:@;u=K4(@9\?<WZUO:NIj,_q.ZEX[*:9!G
%''V#[9*f3@Ff%!s-^aR9W@3Eb9n?&S=N9p$+XlfN/>C9ei5GDL:<?\]HVb"aY;@]5e-<ae'p>7`m-5Q_h'IN,_0-S;ZH\!T"X5b6
%<smR/OCU7DS2*_nP<t;B`1nN/"aSR+=O.o(6PHOZp.e%*Ga9Yb]*UrS#V(>(qdh<9@%p]W+@NX,/IF![#]("=BZ572(K`O79u3Ln
%KP"QYfq&6a;9tF7(7WHc%8fGhPPlEP_dMSJ3IQmYAJ(XNP\FVXKiN5_`_oD1Md*G]4VkYAjFPu$6;Vc*2p+*^g-F/H1-50&;a4*a
%l5Bp]PGt_T2XMBPh6,7u7(AaTJG:p6KdW[26cg4n6V<7ZY.hb-\EZ[rY?@Vg/M2%`:(TM96_PDcYN\7W0D2Zmgr*1)"KH4fauHsD
%keW4K=G\IUj&3j=*'%\i4&F/;!0Ep<jh^Ut20-!imBG<,e<#XeQN5:7)G9'3erqiih$t^QSDR8MU7urA/k?58\KFhcEom\Zar6MG
%l9n=:<Aq^U1T"h.!u*h>YZ+YVX%eCd\gdgS>[pi;43's$+f9](:M(usiAA%X?tf]k$Q#6_&SmRNI#L=I;HZR<:G/MQObQUo-12`l
%/F(StQ4sMu^9[(DOrC_@+!+pigEr?q)f%csV_`Tgj&GS5`H<c\O'Sj"(4h+['!m;'d)F4]P:#6$0^0>VqOBIg[sRZP`1o2:)^GVp
%o*"44d`dk$k7^Z?F^e)l^nb%dd>.mrV*6>l%K1*ueot8C:cm'(4Oo::9%(Uf3D<!P=!LQ-c:"e;Pc*LnL`Ac54d>LBafCV-KWA2-
%QqR8%JkP/qZB3chR0b'`7g?gX'<]<nLdf+4bU-p+r2:fobp=tTiEa`EnU*0'G%>W(n6kEQQ\(DX+'Eg%7R:KH0X3>[M]'OpTPZH1
%5Ka5Pr)UqB$:b^:#?H+)_I;mBA1FOB?=Q6Z)I,!hcoIDF$./m]Ie-q>>"tKCHL_@D@2^^WA?Z197L_"j9F`T?8<Qm!102mlY5p5M
%cHbce_D%Gg5Bg-f3-'!A":c2-T?9a\K2Wja<?Hm04hRR*8i#)DUX3!iD4\jYTc5-h(Rln]r&?Dgk+LnV&\;T=[=l/WiW\,B9)+VF
%K2I0)i5]iA+V`O85tj&'W2cW@+'Ae<GmC=D=<HF1';.d#7\)\PRHc/*e"!<`CVA7[9N3RlW1(:rn>$OP1*Zf5)*"lkljg%M*Ht,g
%Kh1.Thbr2\R8#N)0`U2I"]cjp>'n'6*>p`9:5nHsg\9mVN<4+,I<$%AIVe5t=@+-5LZh",$7I:Q=C1f-Rm;2(Sf5S#qt?/-,7a2e
%G_S<$0RnB<Mht6?-VUCiTR2[\7Ct/;jq2A?%ViTeO'KnP7QhAmQJUWFO^Z90'DnI9BG[>OW3hn6j/(W'TMebd1EK1<.L^dP1au#D
%p"*rK(MB@%68D^j/9f_lLAu5jE.'JfL)$s0S?0fs`gPKF7E:01Fk90-E#LhB/F`KAmhiHm)BG)[NXgp8E//23-iWc`:U3E)3^6Qg
%nZt2JnT)2cqoF6,muraHNL^NtT-T4b+k(*cQ%4j_@oSd/C?n_J7$AWd41h9"aIL1oq4jn*YDT`^'=\`)6PL)Ua(VlHdE"!44N\O>
%YLU6/[<YTV_CSHRI,SL;M7Qli;:7k!.p*n/=B<dC>?O6Q'2`4>Qh.?fpp`+QX&ns!)b+u4O!RF$:S$PXfWiqi^_6`NR)MWG@?9L]
%'\'q04;;:C)!OG&eCZ)X8\bFL=E)*V\!-0sW&mk-YDl-[Ng5OG18)3*LK3&EUL)PWKh/.TMkDSWkP'dnWiUJ&gg/6pD55,k(qR^G
%>D*3$[a98Yo4FLp/<9+Ooh)[E]_/;fk+t4nbLpba!\M]4(#47QmC_R>I2jst9N+>6C*p>d'[FLNj++At2\uWfXHlQ9WUlOsG`iqK
%Y-<"hDlI*cU-oQq7a@qn)$36.:-l-jJ]e49(WU2*%qTO@D:!V_l$@\-=.jB+ZKM-ZXJX5Xi%\kBYP5Z26A%6SaiKA%m$6]a<p,bA
%gfV_]U:4J%gq5b.(;514AD]ld^P;:aLFSnZco1>5S0'@paTr^u.,c-K*1Zb/dLK*W0"uE![B`4Ap%*06?Rl>/&;?RK#"LgZUCZC*
%E&sE87=WCZ89S(J5MUUe?M`snpM+UbiGNJmk*BB%LV<DcQs6=)NJ2$u=mK)6btEBfQa=A/"<f.n<H,=C7AZFum88NUj^:"(:Es)!
%Y>n\k&7R3))tXOt$=F]qDpK5`-;A0>@qS*ZmN#r403BB0.$u$^M?[O5(c5>=-5'Le:q^HKX9Q?;.[%?rC=d+\`J&iD`mc",nkC&:
%d$I/sp,6f*q"9aC?U`!h*/i-e7dJZBl$tKkXuhpacjG[:f+?>)N`A?3*_4R[:/ibL3stJb^8fb%EYfPh53S',?]["L@WWo_`FG6u
%5LFVja]9FS!5kSY(obg+#@G7;rbKU-HFI.OR9H)s`gFp4Hh17K)<fA%*honX%4RcdLnhuRX>]H\`;@SQONmnHNHfPWNuO!c`7=0'
%:1@,YX[%e68^S+X)@J&=7F@"GpA]o[^K\*`8[?:MqZa`$g^'^Q^Qec1:\C![lZ-?T,D!!cnO\iWjA&!<'i8i+F-qqq51c6ES]].i
%cldq!N+6L<?gd(Ek4Um\SV1AETE"mHU>ULWJ&KdE?]J[@h2Ifu#Hu<Zkk'#b]+j7R]"d@h:pPS2*15n^oBD!X\;jAZp2/(Semj50
%..>C>r$(`odc'V*r4Jb*=Vsuu0l4hHNtrJ7#J9ZpF,TgOa":In0,f%t>?mjZ7ksgNcHF+rRO>@1B*4)XSG,s^)n\kS["]eq,O7/6
%/4[0[;3WXj4i)6I[,^.Z\bLq49\uA:jjr;37O'o-?f'R8c2"RsKo[e]b5oDAV's@b&FoK14JTQ<ge2URadu<*p89I')lpDOnsugW
%gqW;WKVRCoQ*GsccfUu5o[.UO\qq4NhkN:&ju[t[.GEq@I#=8Sn9AOdcI\\5cY'2=fMTjV;XRY[LKgC`Qth@7%*@As80&%*TZhSs
%eA*HjajKmn.iXHDGO++.jd2kPn^]Wh$i1luBH4IV8,dg8R999*Y'[`q%[TtpQR,t"lch3EfA"Jj8oNt$QAN!FNC`4\$>SN>rDk>.
%pnX:9A65S;,JS]<Cq];TT/2aM4T1DWGK$EjIN1Gggl.Gq]&$6;MUVu7.'9M<@7V*7=r=Pf_9Z>QG7+d2l'DQ[)9HbR6@_WB"YI=I
%/QF29Z&Z=^WZ3hk84/7IJtAQ>%)sd:\jB";1$CAIKE]]:kJU8S]IE$Zj-0*\#![sg8)a;A&jM9@7fe*d%3Ai42q@/An=OU>LWf=/
%miF.Gj)+e]^])c5fSbgfG2M<"UMrFV&]]8t"lf74onI)gj-)OpUq?P_O-F_QIM%(h[,-K+Ze0_i/KY/DPK:>Y[g94Qh9`ZgpZqa!
%mm"sN7tL4VH621t^J-/:XCM\aY)@X`aHYj(b?M>@R:(JZc[h@4E2][g+rje9ine_*4IrpedZ>Bh:e_H?9g*NK=]3i('BRir8(lWi
%>[Srr]6?b[F(Kr:EZh6'[1_*baZ<H&p0qh):oPqkLnJ?'<=]LeN5%8N"X-u@[VaA$@%Ci>J8^DHF,oWl83-D6*e/Wt<8YUI45BeG
%^S+fe&&[G4H!KV^^-$K+&(l;kNB]kZ+%,IG`jMB1@[od/Sq1it1[u0n=<\cGW/g2N0O9nh(R#+:KZu?K:J#1p8gh&nn8JcIDC-[S
%J_4]?Vl.s]qmn,-NMac#6?@fQ)I]?bc(+mGQah<ukO9*oT)jhYU[e;=Ghe<%pZ'6XhVmV(?!-LbnNEToipGl'+!GG,?2qHPM0VZ"
%0Mg]gcM]c"o=!0C/;5T]SiHLrgWqtQ\;.O&O+Zqf]atG-+k>O+.H3@=i\B-G3A'87Q/M<Tm'ME."GL&<_sJG*^$dl@oe8NL]>l`(
%f=-R**hFGk)#%+snNFKKIUB\BDg1nZoZ%@=-jlQa`hS?8'Ln/Hs3kP)^/h^)Gh\G]k&GfoR\(Yk`u"cZY?>lFq+oZA2>XU6-gaFL
%P9)`YQWuBN0K-!A96%%;TFm<1hSM.j0@0SOh(Q-0Aild/@!8A3e'3]CV&i4X`GpFdPA0XZr"=\k%ljDU6mhhP#:;iq1uTe6NNqem
%ArG;"]1[pj8MgS">9'=p'DN9l&q*A0?piEuI;Zg=:Z<-lYAko&QU%Up.+@b-m`,'PX26mtj'-bFTpO/uWe.3=U;g<%_S;6Ql)0VA
%.LSO?+:<mr4_1r[g<=6^/KE18%aE(oeg'FuPp4jR8(8:@I.nl^(LtVPl$/mRGk/Z3iTK&^jrb6$"Rj)WqTm-eX<ParTU,F!qJ,"_
%-'\-PWf7iim=7GILAIRBq'EA55W+1b<MIp$YeDn``m&dJ<<\hdN,O+%@?-@aY<540fPGIF&J-Ot>P>Mh5P=I%O%UJ2a0YG`$K$k[
%,ZMJI2O=3L&W^.>?g8a&jai%CG/rCp[O:52E$$->cI4ZJ\!aDJ2'C4G3Kg,BQAOXQBmNHX3tX<!M5iiaFqVLKAX3!W(rbG-"8d2G
%n(6L`_j%q9S/'IP[5F/C"ocS(=kPR9i<IuDG7WID`&-S08O@$MqYVTD`>`0!<0+]_V(,<HG2ECO_&;g1+a9RJT8G+J49E!aM:@iH
%3Bb[e[a[jVHTO!Fk4N]-*`(d4cN!%:nkqp;>h5c#6L"VjbDtQM`&\#*O<aR&?!Ugh\=9\8Xtdo'W;j)M1jk_(Y,B@np@,06lQ(Oo
%nNPnr'ofs-8qbV6VY!"F[ro^ehi<2fs8AZShP],iqt`#(5BlpcqVmkQE*mK*O1'D(jabr;cY0[;SkB?mF?$ui!;=ji@r#Cb'pE6E
%ZN(N9?9+ILDQ>?B3]+i]=si(gr;EP!8o?j,=5[L^d..@1&[NR*RGV+#hcUUDk\E,Z#lic[_S)T7Y7EGgrps8=0?+DYQ!d@j1[c.X
%M;4ISdP"=><SI_M1/%P."4#a98bU5T.\#MdB4:lPF)"ci"jOaccKa`Xo`3BfA\i>2n9PB^YKQ='IXRUT^NKE]*;M&h_Z;uZ^Mlml
%"VC53]IV&S)HrGBA&f(7G["aP4$&,8TXusDfIO?%B_/U*+]Nf>,an7eG[M$9W)Y,h(gqHOqhXb3OI#'XMI?unJ@q;f*>qr=0CQ@@
%DRLNcp68VS]!WqWS9`r!p/7[m*7u=?T,nP2!]Ra'g_p-i*:NWurWEaMD#)#a=(]K"]K$+('-=gl%t97/:5M4/?sIp7jqrrc^$X,>
%)`+XLr:-Xkk4U/D6QB[We<[]jU11KTRB?;^OpY<J\SMOd?Ji$ir>/eiRNq<nKQB:S?nEK;bbM)?L^4a(0:j%p6QpJgi'R0p&jQlc
%YVB-^frV6sis-;"5$a1FeYj&`pr?3:npYc3$tenPD6N[\1-".Ybr)i&"WS9bU"tP-kM7RC/p)l^6.WtZ4g(1n5.lo*H/+BDASYWi
%HV-,"Kcb0VlE[&d0S"Sqp<:G9b\W>)fN\Tn>'R`C;s:+uOfNeA8[PI:9dr!A&I3GpgSOq,9lE.R8GnqkrYGH0A3UFq:G9Q_ft[^M
%QH_sOIY2E&X.1/iK."8pmt[f1l+me0Mn<@,Jc0a7j!:Uf!La?:0sZ#X7bh6rqh%Q#5Usi7W*Po@dfA;]6KGnPT5aJ\(VZO#-S>ud
%oO%;#f;sA29F!NG%%KrpZ/g@s`tsR;`oB!+2.DWjNt:%so/DTq48$+]:C#g]Ish,7=oGiZIjET_1@S.EIM/cDEqk:*rZhLc`PmI;
%q/D5josu736MDA6<l>M;rZO!$&5#P6mNcgq&;E7\53=(".&kcdjCK9h!n$O^W0nJ>XXA?<@jJOBr22H[g@`Fgd3@NA`@h7EqVpmT
%a7*kLTIFa?/Vqbqk:P[I'QIND^;VF`B_!U4_<rakJ[4l-_BWbL7\rM+45[gPPj3H#c2;tAhArnIRa^<`5;)UX^@NK\oJ3m?(G_?n
%^1AkD5_eOkhDlR'l+]YgBP7UW*MC!VKG`&k_pN,dn(Y?6+X$@X"6\ra5,;CfNpS0fU6jjX=2]5TK-?3.J32[%VD%C>kX6aoGP50a
%>kO_0=$fZ.)gd810/8+Rn4mLd4bSDN"HCinSpoj>N;U0tN6rN=RLA!LPeZiCgkAJ`kWMJ6-P:M8G@)H;=p2qh[ckV@548@/0mPrZ
%\'l.7H]sL6#OfP%=mS>okeI+&O^IP'0@-:Eq&/b"#(@io/W;rj2)@OomnI!5B4(g;hFX%u']KM)?>NLo\SuEU;*"ZC+XbYnFGdA5
%aou$I9%-05-HeFM#l^f/r8k\HET$\[IefU"%/s%bpMk(bpY9s<=S<b3@]+/Z4"tuiWd5UfEPd!Js%@#u1I]T/e^**lNaLTn!raEt
%HIR`_M&)4<[Qb@=VPu(Xci+aFX6`#a)1P(>HQW0s=opnJ&O0=LbO'#LaB&)O#/jV84KmVHQeREbMAGs]V[nF#mi(u9j+<$#QHC.;
%dCY;_CYhf6Ia.AM=OVKNn:/"[q+lM'lSR%^]2"BF`#PN915-c,qkk@S$Ma2bTD56iQj\SrVjgU$4-R+;YATGJW`I[OXJOu`DLQl#
%.RWDZL"(Bo*)dol1X(&h.aHmiiO;:"d+!C&J-E>"KI<Otj-7eYZtutZP'Z&d/a;OkXgYr*(dTKK,O23*>\,t)nu?P9%4S3iF\KF`
%&$$9<,=I)?K0%PBd#%1<#]g2^H:BMK^:4)P4)A@SGbA:$j^70=4VBU)H5t>baoL6FV`.enjKj0cEBSWh#rk0[oFS2rFk[-hjI>2k
%_lBi(+;=&P5:@KpZ.1cI\-;%+I]`rIja;hQ)*Y<chCBQHhDATJhR@P1mc%sFdT>JKKq8/H'+P)OTo\c)-sQ-.8N]^,)LGaakV.fY
%o)5kG&8smQS!8-jW%<X$a11beKV;q8(uEWWAOj(%h6p]6bt$K]3U;VfB2^e?PpH:_V1kaup=l"6I1P7Lp/lu*7Iqt8jXV:tm/DtL
%Rl:TB=<%)mDctoDi<eg`Bj)g8di?OQ@mnTMY#245)-.$dW@bP6a3MpB7:Jbo>alG!JOUNVnL=W42tBCq_3/8\QE!iG]Jh-c:>Q&f
%/R+'e/In\;,KQ("7<I[@!I5T[]=-^!"]>6<KjD1hTH/iLQ=9Zt^=-PmB9^eJ$,g@m+Q(VP_:,I*ctjIYR83MK(Lng=`TY7?^lAap
%*85B'&HG]Yq#g5/q;pgE7@S[#nS=-9di8m@qRh?*q`D/sKD`Y+K^Cb1VOL66c8uj+.PUDkbM#[9QR)H2!-M+5O-@UEqmF_^;33<G
%pLRHn_nYH9><Reeddm541lmmlL%mTp*o8mg1TCk3%:PM[[%9_os512?hWF%7HQL/q'C$^r%H6:;GQ/EhIC6,19!C/&i*dI_Aj\$W
%MMV6IRZu:!AYCSS4=hb(lGDBpp2AB/\o4>t=T*MKesZ'8>22L.+'UZSfEQ3R^sbbu%77.CDOa1kB%<QL(!<XdkIG9\&l,46i'3W/
%G,rEt-:'4:GC+9IC(ns7gF][JS,KgoXOaJjJM)<;Oug?22&ZmiWQprH6uPlnS9%U=2uG)hHfsCh6ZCs"r<*qt.\lLBiF-<F,J"$[
%hY/;hke'j@p=/kb$KeX4@7^l9JSt6):A!')L0'OUgQF_]`?pmk<.1"t*SP<EM)_9,HHD!q=ana[+%"34+`ADI:l.$UI/^PJ:P&"S
%1\9Cq[`k(kHV^krN,rN)pI+3*D[fOUZO<QZ"_R2,[$RubHt&TOj>8[\nF3)4(.X2OY`ueK)2Q8Z2GR_<aE+N$b_;Pg#%NV-S3EGZ
%.VlSqB/J['eXS]?2M]XqcW&oqIjO$kP!c+\j%j]9J.!a1qoLkDBjqkklYP:RGfMVW''>HM].7AdEoQ&oAR.W+XqUZ+CW%=D<(U;'
%ihI0h+h9<p5!sYtHoIqg*ulGM-e]+.YG(+6/<ju<2u`BhK]#YkDEs`lWk.)</`$M8A#;a#bakfA-]tMSnToKZ5T7N#Kqo_dreT/T
%3unbV>Qg]34BXB?1H\*uC>@tl"gP$T0f4lGU.UKST+c%RBr\LTIHrZ**-QpQ)LL$T9Y-h6k$%F&)`EJ7g;dbeNLN:DCulPeqO!k`
%4j?.ND[O#2>iU)*aM]1Am,WJ]63e\e[_U*.Q67g="m4n5H>J7[+GnBK8(ch=:u(4GNR0Gb$AXZr.Is]XlVJBBS49j0D0S8XT7\I1
%C>>?hmr*KYY/S_)Y?mn8Fm^+)W-P?h>_b5Xi\$2)l-=KkH^.h-L-'U*HIl[>s5nBXiMO.-N[JBGnsq=&HRjEWcM=dUO>T+C04KNK
%EO(bH8i?UFMq&gg*t#!M+C3:ZN:Su6@aaH/=4W'>)o#0=Z1)[)V2esY0J%#lYbJ4\"`B&,$:Ot@Kf^G*NKnnh6e@RtlR0Z@d%HM*
%nSGk__b+8^H+VkPH#dMbHe%!hqAp$5@-ID=lG[iDjC!buqu5HEms)HON;Zh1rmfYNFTf>pqgZn:n\>"n5QCVQs7?9c9?oK:`<BrN
%?gPTgm0UECkI-sc)k:ceh)=G;Zohc3e%]8S@k:\\^0eqV7)+cRc[3OThN$(a5mlKELnD9eZu/>[:HF[*cYI@hM3+<WHZ$;i%,&\9
%6;cu=6hll\2b#a9-_jbMFS.j_Xe=[l;^:]U%]G=Uln&EThPJW@k1BGFI6clg%i-!47Po(5Roq[\[&8W*lYaA@(;Xii^Mq';)*OZH
%OO7?])Nj&^%tN5!XL:1jPAb85kp(E4OYuGkdfC]EH&,RcL?1U.fL.i.UN9Q+;=&f#CpTEX=i@cq`9JJ3^pmrs>hVslk!lQ=YaM%8
%f7Y6oM:QXqL`PL*LaEP?-#?S.da8H4ki5T\*DRU)-\qF<VOJ/la8`8%F;UQ<5N"57i]JuO[7Ho'cdP[aoiR"^b].*6Dejh8Vka%>
%KI:N=HrN3J^9U'b>GD^XS)$b[@Qs.cU;\T=W!>6Kdutc0"u4(qFj.EOTYlX@\uD4WU,N'E3rQ;IJHk##dCbsV&M8jWM!'>[Re))0
%B+A<$2nh^>c-@\GP1GH_JG[EU2igCo4u/uN,A..GN'7b:Did*.##:oZB-SajqaO7LMn),d*rNP.5(8E]ZbE'_XO9!6hK1-*1-18e
%pf8L936'%M)4Q[t*XMeSSo;$c>"_RX?eg2\@Yr'pWl?f;*c0oS?Ycc)d9NYG4AQ]Kej;AdR*DV]m>lldRllO]cm:l.A2j-/)^<,^
%h3iF#a+4.)I@qsrdCY(aq(_Mg,E<M_WQ9^9ifVu,jOK1P_$G\R3Ji9D>_e'Y5%/UlNY)oZJjuqtgd/*;?1EOV[jX86'7iDMFVWlB
%a<]N>,dI-AiT=35RGlc`5Y=B.q_%#G7hpJg7.m*a&;EYZX[kpO,-Hg5)*EFp5WZ+"Kf/A[/?re4PO&MdBD)g2B0('BP.&gJE6e3V
%]Dss[m(uQ#.j'gPq/c-a04GEL_tJP8f_-N=m_l;0l8H,sE`"%se5JG+LY".mFeY9L0nN[cUGnlJg\!`6\H^I1"_VB/a.lXkT$BK2
%kA]<h=9c*QcJIC$Lm)mq[#BsR:A*%Z^(%bfE0O?D&hEfuii.`XSb1e3pK`!>jh:u(!52_k4A/F3O"RV.DuC6pKaTM;m;7p"2pR"-
%Xml-[WUTno1A%GU*g5lLfO>!>$@(@'IVtiDQq<i0%hYq/[EGj^qduVZ&>L$e3]PG3W=Nq"jMY!)U,:(BF5MpEP_;AKFaXZ7^5MZH
%2$]&\DOLL#B?1.:re`smEt14r$/oI+5B'i9!!%nj:=>UE'86/m<BmSJRc-U&ae_^*G''%d-A3eO.*-G?Hg-N7'K]2o,2*E!Nc5p.
%EJq&^M/S=FYU6W3Ri^4$@Qq<7Kan'a&ZVHg][OE,$CbbS\,Mp)^OnV(p3"MW>OkQ<XhF6?*0;19CcPA>SNNNBOgCjUh3Urn/J6D7
%MPUH=Qm>LQJ<G&pi_<0nN'5%P>X_`G=t#fb2jON>89b0cX_-DbgpY"j0K+=h\S6`>V[T*uq$PpP^]T8X?0<dtEU!F]&"5ch3X05s
%N:&GViYofqCVgDNe;,nT'%Qd07rI.9K!d$pTqHg=rB7Ge;H(ISdrf;F5U+paNKBWF,#EhN6Anc^&dKH[s/ff$b<"@"KX%JU]@M$9
%d6GkdN&=Wq83AoR<ELf0,@GRRokAnNCtMTGR:^.IO.>!!SfpMamKdKJo?u:=p$6#(OX`#f2/2':.9+SYEU7dsm7b.QNYjrlOi44C
%etVIp#>_YQHTQt8$fW@"*)cp7RTAi``X'-&MXZc,9u6,ce.hftJnFGb-T5cN*RKZl]a%Mm+42TGZ/hG`STkL(5m>`_\.c1jHskYL
%Z+e-Sj7ZSc,],M\%Qa_g7BHrL&J'nP%[EV$L>.>+35=$8_IWp%^NY50"I:fQA2>G@9's[L?&qIs98:J2k*",khEXtBd)Cg?jf2so
%*?lP);L-R2dAU=mG7uZZ\4Ruc*nhA;X)if=3>neC%U@ulji9!^nEu8U)]KFf\;1+fj<^qe)s51e"($e%CtK`EUX6N%*An^!EH#Qe
%3H;buLJE+Z\;.s'npVG3Wko%B\%TRN+c_nkLn+`&jotuO-r)mS=h5$sT!?)+B%!_/`uO'2jqPiL(Y&rU_][jgSjOr=f0W34U[u-7
%%GudaI_^`.<Q,^CYC/jf+k<RU`3&'mP3!_YN*+4F+(etO^&M=JF)0t@Y9=p%kh=h#@OiYd?/TpI3*p$l+uPcOHIC.>$^3)&j:@gt
%O(V#LnE1=U//lm$5@QjgMb[Q!=['ZcKlf)cBi=d$(,I0i3Tl_jUI%7$:e7@.RYLX[/D\:$iBF64YA?T7.u$u>ETHBOU4(Zm,oo`3
%8(GNnD<KlG/UJ!++Ph?t^Z\$-2HR0Pr7r.ld@Gn.=O2*=)SPdcHTbR,;hU/4]'K\^oC4ngVJ2[f52O2pIW"`F&W415:!kS]`7#'h
%,G<Y3)<!]a*5T8hPZXb\I[<dpNH->,qVLFR*SIBtMJ-2U,9*dXNr3.;#OQt,76*Ed$kI+knMh05k<RJ8+W4u"5.A2TK1=;r%Zj_f
%@.6@N_iE5;Zp[Y2(90oa+ICurE9PUn\m0fR[R)/[[Y@%Sq(b;)P3H:8l)SJfluSeKH/ukT;$oPCE#6TVkd=I>h,e>Z/%dh#RXF0o
%(`a9T4/%9Q*'VeD)B*%pS-G)d)%7gT/djQ4-,`^tO7@"Q[1dV%ZXYtTpsU.1a7>+'mr%m.()g<&M[I]CHB8e]cd\X9cY!P1]Xg6'
%dK%d]0S%<'NS`,Mo=JZ@cTtGioE\:j]hL(j4U)OX0XtR"5=)LH#_QI]g_qmK'\$h^/>h5(GeFf^)5Q58o0NoOPM\YJ8^WL`3XpnJ
%I"H%^/5L>FZNT%h^HmeRLHhLX9i)dCHT!J?V"gf[^ICNQRQMTr2Ub5&"@D4c#>[DGG$!]0##,-XcqC[Ahf4Z1_Tt<Wk0/ZnG$:!L
%))o#H*UY%2]T#+qTS[T@Le\rX3&;#r73^G?]9hM&T!q^G)<aNg!)EXd&cCH>V.aQGo6.[I"ka\:ZruIu4^@2Y_RQ0iM2E6g+P'+U
%46>_u<R>4Y016[4#>(lcN=[2q28GK2TcYL5*e]ZBCR:7,A?K_>]`=i`^W_MfQG"%!#g[F!5:#"0iYE?;'[*C0ihEn84,SS2'?1nD
%!o,A73bNTH\VkLFa_tnmQpNWOc<Ad5bS:ipa@D.NeYZ^>/'0oXA;l]XeS0!.\Q9*N\a>^L*jP0.Drd"l14>6hA>6kliC%QI(k3R9
%/a]'e=&dGg)-2oi@+Os]jND_d#^f,2W)%n^((3J)i:sum83TaVDX8$a!$P5&'!W9$Y)'NF)8r<8=L[Sr(=hBQCMrR]Q*?XYlml\T
%"kn,-mN`;J_5G&f*]`>7QYn#7pffh+$98T*.2i-Ta`bBA%T)sH]XD&I(HdFpa^K8eaqQ>f[>F#3L[1n6DgGQ45!t:F`mP:?\pjRr
%Qje/^F`CMr8!f;pH4%u(D;7]d),M>m77i0.Tft2RI5"!4oK7?CLop=n-,X*[q])b^D4c'I-<+^`jkMg^(rGLm]PKDSiGJ4Jjf_4r
%no\-Hg6?JtcVl-uTH$HZ^R5\C9)1B!lV=$!8]o[pWgt5@)AUKJq%cVdLL<Dd6ihFVgnd>5$O.-h=<u(.^UPZ?,FjRcfIBoF6e#+l
%73i9SklR6D4QjYQo[K,>"`303B#sjqBWUKf5GhNAD$#'%-t%#_d+G>D:*3@AV#em2J)X^3/[r#]I;-f*?Q,VP>j/!@S*GRPXm:Q%
%('fZFVscFR:AWHBjZBG3hNK"[bLsSor_9H\F)_ES]BN`g`C#WLlu8?XrP/<hSdY)j_R)YjksojLgj$_fWrO?FC)KM2I\J;YNq>2-
%W%qL&M1mI;5&OB'0uIL?@QNLJLO7Qd)LDU*WCA0/pbC[b:7l7>k=*Gh15"YmAj?6LVX"O3G`,bO,.9o!`ObXR6IG+bS/Jl!N;R3L
%-Lgth)i(F4eFKH6'.J7B`SOT]D4tHO((UiLMl:j#>dU(X6AIgSSI@U%.K#W=\ZjV[2ViP$DuL$VSI/FJQ^cfFF`b29Y,Wqpn[>5j
%%6&?9\G**3mm&E"$-pnN>rOpXkKQ08@8AO*cj>JF*g2-8:co;2K\r?14j[7'5iP].,p:T_KV=1V'&NTM[TiUhiut//gXbpVTf<q\
%C;N>-Pm1]"hX5c%*R;,o_u]s]i7\/4n4.^mJCiK8135+p8N\R_2a9Up/nIlH96KP_IA?(P!70.H&K$FcgaM@f64]WB6&g,XO:7L+
%m>2oTd$67"?q\%]2(ftS/Oa@&!gFZIa4)R@T);\n"EKBk`**lR2Z4mj(qDDX<@Mb)NZ03Bmb79Ro%[G[X7e]nWeu$AgPUpu.?IUG
%.o.ID6qMA`^%0@\nRA&)bQI)/&7PYWY\nO!+%*`s51KZe/W7-Y][#G.4.k;LJ\]RISVQ$,aWL>s5WglU1lf.;kY%<OEaPT%B,2g=
%eF(a)"Z&0e(4&"7#gK-_(7t)ie?D+c4FK^EGAcSf+70gm.p`bY'4gMPgAc-Q3>@".63nF_P*t?<'B\(rM"L,7+XBM_e$?JD_G5n8
%Tll;7C[>AI`&X&L7+c*I9A#.)b`&$nW2<`*MMrN]`o:-7hsijj@Ia-8pP3b&00`;rb7+[Z(]3b:b$Zs[Hk4ce840l^r\.+F"<%ua
%>J\`C,,Wnmn[?_3oaLr-s3MeZoPl6jjg%u?e!EN`hb'K5f%o56T,Ti1Se^cPLTennoL-Rc5K]Q=SZCnnoF80g1I"&<S3c.s>1R+b
%Qg#s(k%+[MK+CGc28.,T1tL(u!q+&?BeETI6<%KX)p:TEh6^Rq@cS(CTJOt!ONakqpBWp58A?$u;\P@-h<D<3m""t55e1Ka=?OL\
%W!>Da,Z"gCMTRWUU0F?-^TE,NK*(6nV)!1Kal_LT#Y;hWI+YPe+mIMMkS48QDqCqie?qf.GI$ZACI[1f9%"aMF!Yo;L)f`[3s:W'
%3o1p'/CE^479=A]a\H;bB>*tUaSbU.\h54tQ=tGfo*=,u.9*<)?I%NJj5@QY(1C"taJ;TPGWZe2mpS4+7[.j4)u.8dkBX=geVojt
%dk,!o<jH.(6J/&LD\5qGQ?t*r[IjlF_3aEKnk#q+TD[e:&gti<[_.IL5!8K%*+%dfB6%NW_\sma;,4jC4U5t`163M$q`H>&483SF
%:F>UIR'WMnF$"\5BCLq\9,)\$?;W8lV_QUGU1_;.-Ye]KJc_mdV0<;o=7g@#3[f*jN8tnU+3Lr*0Z5:"f_6e+QC73_@L18<:NlJi
%X%2[rDKg1&TdJFibl<JO@froWW$V3,^Fqr'eCDk;LPh'DEB>h[#&!D^mh]ao0Ki8]Jk,Ybka%';oX'mf70O?HMcaf,*Eg`:0'W+c
%n\6_sLp_W/kpIq>&BjFsBplM'+bq<>p^#ljWts7+k0',moX8lc3ZS(XlA!0;a4PhNm_Qq(m$B8<&1jA&r,UAubKi`PZi9p^qsV^)
%2,6Ss5U#FWHOoqp'4gp84DT>=TGpG)RR?a@J%t*IG;SgReN0Ob((L+$Ja4crhV@)3UH]AWWHS\TWt:1h.ZTATm^eKeLY7SUbY#.A
%5,ZV)PZ':CY(k)WO#d*[C*b)SVHuEEnYHgC#-+RqPM!8P(8H/F_e)/n\9PJ:c&]q%\P'WJrV%nTXIJX$q=jJ7Hi5tar.dc`IRMN<
%f7-38W$@'<p;'.GOQH&)7!LYNi^C\-k5(3Dg.?4)=ooPY/40t[E&s_/GN((q0Fa:Q,;1D(!/f#2b="B[G(Ul=($7<lQX.:dN*\%;
%"n\!5RKEp0YdEimn'6^@"#OJIf;_?*(`eR7eL]k3)Ngm[?8g!k2.E=,\bo%tdKnO,%Zi."%g%XPGsE./_2ZN&)`W7eV"t+]4H_E/
%k0,Y4ki5l"6hH'lF4V`>kVZ[(AQJo1J4@Zg-Q.6/1.8OQ\Rl;EX2]dd:cEi`(':29SCi'H&$Mae&X^mgfoHp-:o*b<Ta4%bdsX<=
%Z2#M`&+2cN9C2uqi"7p#p<oQb7\sQE[cX839KU+UJd11h'm5CJOu[r;Vf3X>F&J=,%nfD3;JSDEIQL>,o>HOUWl*8=D;ka3kR)?b
%&HSVT%7ZXjcWiU<1/s]Q.@2I+PN*([8[9_n&.W;SA0.^H!FLe)`5aXIL>5lR8o\QVNu:"/:mqM6[Tma*11N5K9fDn?,)fPTX'[]U
%N5%/pAk!2f2Y0q$W2,qB(@Fg(-+Hn@SLI-n)V0s"@+1tH\*0eCIW+=-h]Kl6^;t&5i(at]**ZA]m"/+#iGOfbWMY8\n$Ng7AHQqJ
%(>Dn.nc`<m1BY'Wdkqq%/aQV"W9.ogFgk[Ge<Z!(FTL.DUa\<%J.YFq-00"nk]k6CXdiO]:5p;Q>D&/_K7W$K#0.BU38_SA/g/8r
%YEcXDVq"pMET)V0>=2+9$(Qj.aZlMHBcH8q54U>Fgk[eDE-8M%&oa\$CS;cUb3WV%b'*Sb-ZOGfMhuXj:j8o2>68K+=IG$.)Lp')
%>nG9*lU9u_1ooZEoK5P]6$@1@]+[SbhB3mk-?":QTiU%G'.:+-@20MQf`'RrXI:m#+;!.ho/=4A[2qqq!>58-dKmHCb_e?o75*U#
%/el#Bne#>fg>gts393f:or=7&rkAb,1)cU]q4LHH0^IT0<%W.Eq)#mGBoVbp37O[m=McJ0&"=0OM[a"[/E[dtE,0oI8=V8-T`m/P
%Y+jNjZ,'.r;l!K_r5B##9ZF3R@4s1a_CR.`c*HT?4J>"YA2+9>NlWrbIih/_Lj`81=[RGs8+bL^<P;/J#b^:G5$ml;[DKs#`7`#\
%h^TZDVWpmU6?)*`WcVPjA&NF>NY"oCNBYR?@@AJU7kh4'3ADh?gfLb%#'M.qpDEpkkUXd=d%cE8MO@GRdR6]J0j<SaQi;FqgWfmb
%q/HcYZ[BKC:GZ*B^Usp`,Su1K:?ac(,@qbVXrpk,>cQN$-,Q@VZSo0Z,5)r)!SdpY+fe3Wc.*nc4]Vs**YTfFPSEa$3@?O9%B-h4
%5"8B2H2%%S`"r1-Le[ZfZ<iL.m1<J6;hmkp\a(Xt=n8gEpD4_hq,A3,00Lkb46[>6@2^',d3FZKR&G^2SKaQFjPug5__EB@e#Pq@
%CUfk#^I@`)8RE(="5QUR5\K-g,BtL84F$LeU:Ruc1Ya%:(h#<_&JZZsVF0l398PR^d)rEE>PNrgZQZ6:gj5plU"o_!d%,*`_i9!4
%kkdUUO6o$"[M$l!P7fGlc4V`6Fn:pqj[tb?V`sf%'DEc1BFbo98SYcC3Je>MLM[MdcYGr0Pg7dd-apm3bG99@E*R2q`V6H):3lF_
%#13<UfA\1$7<CH30KLe0U2VV^)6igU2Vmg;;d_d)r-Wm#0ONOa`#I\UU)n4=M[@:qnW]8?_Y1J%eAU*#fbS&#)QL%l-]mK8-Qe46
%iu>Xu97r:\SpZ=SF(.9L0KrB&)/>5r&)6Z&#G&J6*#=+t(9nTag\K/`U-Je>i<^TV<Z@UO%otI%+"Iq+b=\Ba(uWOC9KK4).Qn$g
%FbCFn,dVM$!Fom%!-_qPHt>B()`8qPCCK>i7UVr%4>s0P$4Q6icc62_AcE8c=rhC[+aK[<@=V`Q5N`2q&F%k2L:(9<ZF*2M&T\6R
%Df4]UNN>I1(3q:C^6sjt?\ib&FjD7f\LBQBkFK4(Cfii[''kqSRNYTSDmYt&.pP_bM:NTT#sHEbYfFd1^<OEr^>CQ/7mn"?Zo5H:
%Q/>^N`QVE!K=rY;7gb'K^jg&$@Ye-B.878*PrsJ2K;%^h%D&,(\//"qDuT;\?(rA@:kub@,'2.O:co?LILEUp=.-ILoK@8ArJ9lg
%C35b.2B[sDl"PPpq2Vi)i270Jm8efBAVq^?fnq:'c+52V[F"2aS2bB5Q7]U6Ofboe_,:Z/pt0Pabr3V\Em3KZ'jhd%;@CT!pd;C3
%bMD&9m)E(^&ceX//;Rg+bH#5Xj>m9%D@[K/'`n2V\rCI<OBa`h%YO:U,C&#Qka%mY@9;FoIDcD0X8!lRR#m9r+2]fo[i9H1K?o3^
%#l]W4BBjTCf^B@.IpWD0!D0Tg-+Q+nHjGRH(5oq%6YFd]Ff0B1oTTFqid-pdfM%@Fna@q!VL*t;-h'X--k9nS-\'EdIu5UE35%iA
%@GP'DFgk%aH<4smjdgjM)#oY!#>OJk+dnTSrJ7W1]C*6'+a\6-kuuf/m.YM.M4LDhYrG)!:XH'LPUP>lYq!FYTn/Zm9sO>i/c-jb
%$IPCAgS(DS79/eTpq"bR.]LEM\sse(*92$C;3,\rraheAP@<^&/6#W&/W/+oMNZ1!AQg4BaQ+3(Z;Qru1?",6J'6EC)[`?G93Z0A
%2`hu\?(BX%((.;&f+=Ip1Qm,_<Z;Xk*5P8rP8$hR,32;4A$d-+H,STj$S8@^cs:FAI`LA<mR$DFN2;a%GrPN#'#kOq),k.u?Xqbo
%m`Lk_Oub`M\OhX3P$70_%V[C3\4,$ajB>M?3W);Kbb@Us6!XDDkN:&dekC`u"[C)#RnS^Yhp50lpIg!cYT2qIo/?U)r;r8g9Q^Wi
%U.(7;U4NVtAWu_2o-VU<F\Qle\XOiK:E"^plid3E>a)$OqY2AYcqLAm,9A:A=F.RfE28+H\]PZ(NXp\*WMCCKZr7_6D<HZ6/2\_)
%.u>M2iJ<Y/Wk*IFM@HTb,N+lSQg"3t=X"#Oj.^@"H"$:'")<\,Lo1.%#UAJ.l0$<K[G07dL&n$de>UkPjrdo^,91EbQqNXNj!aY[
%p2t@VH?Ko`R?j'NmReo74]98XJP:cH>'WD!XRc!A\2_B3Bf<<FPltm)2(Z7FSmK-]LKDOkY^$Toie)4\<?Jh:BLM]mm]2-IQH@d;
%(M8C$XroMcVoWE4pP84H3"Fgn]PK1tG?*K0UT^W6JPpm:I23jbS^,*76sN,pd!]Ts+l_60mZ"8@D9'DsjFa(!06GNG&e&PSCj1S*
%<#oc,]nn9cW>7@ShiVWfpE0:D0I;G4B_B>!O&:9G`A;T/]?UDl`=EG)3:UM%OeZO8QaH@TQjc]@#q=*HFQ2eg("?ooXjtEBFrRk1
%$<;_-/CF]Z!2:>R2W:FQ#kGVr>@%$/YZZBOf<o]*Xt2N3YONsrfX%279B]ndkGlrD+Gj6`c42)riUAsHq`GRhgG%7Nl;*E(mWn,P
%NK:iRn&O#Zd+>WqXj?t*<HoH1INff4#FX)EIRL[;0r#\b_fpJM0V8Btn2/F5'tQiaObWV4CVJiZK;5n[a7!LdH[>k)AgW4[n^9&?
%*a##]pP84P0:Q$0o<;Ur$ro[:0W09a'(a4106&$#j6WD:$>;)Im!_@kT&0o:lc8O8;b]\hi"<mR-0F3"6.dFhIReYd3S^hsXB/KZ
%kAWSuE\SgM1Bn(b]O@B)o8CmkR::]198toVB7m=Zd-6c=C]n46dSZE#J"OX1Fg#Fk%m(%+SYW:Z<pp:c%k?(sD'<0=]DQq&+-k]K
%*+bA]IA/WG"mt^O^FgHUrK^`hpVo\YCY@s6p[><+OFL_NJ#-CF[)6ZFSJuR69m7"6$M_/a4pY/P]Xu)UL[k,P/0UVN'c*UFN+s85
%0I:_4/)?#%Kbh.MN+ef`m3jK*Wq79+]WsR+4'S'Cltm)2/'JBAc!_9B6tXcpnCN=LdG9g*QL9&<L^\FX.(aNr6uu;)e$Q'ALmRi3
%N2[CqVf83^17MqY@<n/f@9rF_ZUK&:=l8X`C!-"d_Q,?&?*gEQe*0<'/^f5fJAP[:\]HCOS&3cgA+`1'e7?Er8Mt@hc%?[&@Y/0$
%?&<hl(NV%m1r]*5N3(aeb%A]nF"?Lf]ZoCr4h!U/\048[o^_Lmk4IFg&fK8jSufq=SGkk!CK9&9jJsTpaE72Yeu!c*=An6W-8`W=
%pXFMamu!8)37jdi:%Ph.nB65PbZ;,&d26WDWnHOpne5s%`(uUB'Y`fdWZTX?R'@!J;/.:;Qgp8:/eF)<q/<nVctDCZnkA*,kRj>I
%n:.(Jf0u*hWrRjRnYU2;F9Eq2lW\(bgU`&2!6N1\X(uu0<(Ds@V>c^WRPlpc$)Wr\d1(Qk;/[]-:N2r\oc[k6s1sr&OMND=4gr,!
%0h]sSG0A]=eeY)1aEOmEV97H3FJsFj)<6"Aa09K'f[EJk`=VK3ENT_1<4*8RO9BsWC69J6Fe%ouVL]&U?!h"1ci=#pr&=Y:EV\bc
%J^aWHqfTXH*%8u2SM/4k2Q8MdJ%RTYGT^:]%MF3i+9*;RDt:VCqr_9Vhu?SPFJ(JKJ<O0M%Gm00L9U(;KDh^Z_rVc@B/XV$'71CB
%lhB%:iq;>sXdR7Qf]i7XT#90pAmMk\I&kM440=Qnr8VA:M.f%^iVSHd]r.9\QhNhPPb>r1)Mrmm0<6HT<kl:qo_%7D5,gHAG8TRZ
%$g(CO>5X@/_1;h$Ic0nj`]W\KL])\^g6[+=,LZLNcR^>SX1Hsd*iZI+`BLK]HLCp\VT,fD-F+51DtA,N,5r(tGfQZH`sWcP9>c(n
%-F>"hhY_SCeJEN.cLPl_r3/>F)u44"+-4M'@=%+*3871k9:W]#0N_Pm>;C/PcDO_7\&rMkDYN7Aa#LuJVbFZZJ$B$Dm4EiIAu]c#
%-S\_@[8*nITA6hdU=WgN.@#;+Af1cq%sNPFcI&0W^-t>;f[%U/s)^pUcd_">]CB$ndHA'SJ,I)eD?_lZXR4SlJj.^Gp4^cr91J9^
%WltYf:)s*cT_@^gF7IeT"lSD</Mljk=^h&NirFqN`P_!>PqF.':YU5+fr1,5/BtrR):1EeqO1^=p%Elf;-kkkN#U0S^_(J)@;l&1
%lo^oG:Ik!Gr'$_EgWjM[-T()2ZhhPVGT\%Erj4JRFtn:%Lc$<a0\\7!1(3R;q6NWFp&<5bDTUI1IOl"Ba#P!eg9LaW!km67?KK9+
%3Rdn5(I;LM"L]>_IXHAi!/L7H9ifbW?/8iMJ@]_Bfd9t2kn]Z\V7"kQn16_m]>k$MGa`K]0][Yoni!.)Z/q+!T=JeJLTI!=R,0-s
%Z[JP[',q9&2kLNNDOb)2`7Q(PC^7s=^mfWfYi4@69NoM@@,/JFC5cnGA$/oL5Z>+a[AqQ>WM0YCkOlEb:OE%b0V4?Pds:g@>&h7E
%&sj6Bjdd9M>l2TNh]VQ!bMk2:3e/8UgC.uq64=>O`-blUT&-(2FkC=B5OQP?[QX!H?SAF,6^(nnMDj6O'`>3MqffpX<SaT)hqs3t
%C6!_;HT*'K7D.G&LndRr2+QROL+r<"e1VoM$M8JngRQ#"[I(Gqfg`s0S/u9l>O'dsPDS<$e$`RbA+6*[YF>^X20!*+l\u&n"q.M\
%p?Tan>)3WWFXe>uKfPC@Z$^%UBY9CRI,OeKp>#<-)[h*]A*VW)%ur"?pHko<B?!NhKPL%@l.S^/=-MsrM\rPc-M9#6="2>\n'k:Z
%hM!kC'UIO6A\jf?r]]bgVepe9j2]Vfj4fd?I:H_?2m5'/DQ_K-a\)7;Xc+]IobD1c-bU*Fc),&\0I(n]U)0\jpff:2<Vu@\EUb1H
%l`f'UMk!-Uq^&QMQ.qgIS$^Fnqi3l.rMP;=GcDh2hi5rX.eeq55>idS*3Rk';DIig\p#*6i\4B5!Z!GIf'Nc0$.EENXSngBm@<h5
%oiXJ.G,)/A^A@cI!>8no/A'm6j/gP=2CoeW+4:O6%dXtlFDoZ3O(_I-ok:5h?<6bd1cB:f\+=RlpY4YP4D(52jPp8i4R0DXHd]HC
%9`,2Yr6Fi1^%o$t:i3(([%Ucj2rB<@i]l&#2[oFhNE%>t]oHo#$g!oPkB0X)"f,irr3si@2YEC_O;R/Rc8=BA7MsqW5$s(6St5Zn
%?DinG0=8iEmJ,YO*L9^\./n=M*`(V`q0Y6I2i[^Cdb(W+[QH>7Ok#6]%R/"rHmZP[2nI3[CX-\Je)!I)ceoiOAr^B%"?\9W,G%>)
%UK+SOYK^C7f6)rfmi.`Z?U(]"+S\!6M06MWTm.@Il\#_:CM7E=4$IKTj3`*66r,2uWcR&5),B/rN]cn#';L=Ah)sq]]i/36F6VPM
%[nV3H?ptJno7a`(>TF+9FkBKKIb^4/rHm8bMt2k'f4G\gaW$\'n%R1*OZZV,d^,[.h&KO,H/2$<X8?C^e`tnJ.M,3&M5Q:JZ25[^
%LR3Vjed1mf!2&iO[c0/)4I]'_XJNrt5:GEspba#/;t=MM.OgAAS)C6d%mDtF_EQ;33b;J--DOJNVk9"25Kr`:MEWWlO]RTKIG9@@
%gF9MZYaU:EcA>6\D5p#f<$?0W56(a-g'bqBPj\EE"C(]K$nGJCIg`e_dp%!>F])Rk1qVRVfU\E\D%9'G`/@2f=Vg-5V6!/n=H_c^
%acT=\`B1O[c`fq->8_L/h"TS!\?k9Q"7M2_EU6!I^+]IUoES,So(9?kZ1t)^&-K']Wl)Qieiqp`c]5+CoQ_-4ZIKOkS?mrZDM*0s
%]b(dn@;Qp2qu6-.NhWp(:_)LUHuO9EXCB,6_Ul&9)5iOc40MA].5pP$_*NQ1%?K]7l&`TZg\6F#M#P2D7t09]q^'f5e*O>g8Vf1j
%,h1g7]p)*S-'[[U0fSVWNQMb'j4N*K4hpsn`Pe?prc9^/#;L$\A-YUGLanB)Rac"]:%g$/H7@Mt1JmK(%N[`8LQa9.9m%JdBCZJV
%UUb8L*R<2kSsX!*;=*DbL!&B&\=\L`cMcrh+0qdXq6"PkfDcM2F(a&K><hKU69'*Ih*A+@kBL.g=K=&O!+sUFr<I=YRjWJij%2`V
%6dj"s!?#3YGKuq/`Zc%Gban=g@Dh<n'+1s\:!WarTZ^kh9+(?tUH1,jE)/Ecl=DsePC"KWG=[$)HA^.kF7=Eb*mW?s3IFo:Dp/(3
%I(HTD"7r*E%D."E:>`4*2->s;0>He$>V.&KGC/tq:53&c-->JeSGMXBj"^s%?+nh=-AuBYXf?Eo!+FPd"Kd#_XjQ.4KF;`qe`.&<
%bA#\%iF3m_+.)*k%U!Z1&%DE*>WeUNLXUED[;RSn&W7^?n]80M4Dp`KB]%t=;<3IZEo57hPhah1S]Q@2osbOggYpi0_GD3^+`5.r
%\c-(k5AnTlhE>]H7En<g[G$g`*_A/>S4P6QZ]7[6*S1hZUP4NRp&hoGo^ce0Wq/tZA!,t,/aX@Vma[,J(&_>m0pe,/e9G8i32Tu.
%gmI*h_u#rGe84aZo%4)J:PudiJE9-$)a/Nf!$.Qa7W.MiGS88B3Lm%HoAd$(MuG]da$i.4i/q:e)#L`LS/Zu/m+'.g(JiRLIUf/K
%X&-Dc]';*s]jpOFf,g1DgTQ^FkV?eFf5>r6DWi`2gfr,3gh0$U7C+_'gPP-@iRbVC!K&W9-?6/ImQ'&M&Ki3]Nes&jb:Y3ZX(+]L
%^2N,BcGIK559GtK><_WI"1MW_p7Q9[)&S=?VA2QZ^faDSOA(*1ekVGd\h*PH4C'1tA-*HtdoeD`k>C!bUn*o-ZPWVp&sR*_rZ&Uj
%?"s($2O!J,`gN9RA0fl2,dI9Aa5=@>YN<3`O8Jq@O?=P^%k$h*b7CcC4(E^rbm,kMi:l!gI#56HdKK8uB-VnaSsHY:iW?9ZW?mE8
%l11H_8F49_jrSe)b=D_A=m?p!*U_?YHbr@7.snA0*,VVL;J5)72)%]8%D7b)*d\A_"P1\jn*DI]fY&A^]t4*oGs#Y68+Kqg^+\D7
%5P),58%s@Y,!tRB`iJ.lJI$J!g!g3d=;q"@METR1HI]It#g(ot*O#bI/R3iBrW`)Pi?rn%-(-T*/L?<f9Qu=4#?H&(r@g>^qXG&,
%oq4*cjd1OIC32hRG<[.^aQS]#Xf:1G`^[AOPAa)$GNXC$^GWESZg`'O*fnsc)L^eaO')1mXs^r4g&mQTfT!g%dd&d%r1gqbJ<U^]
%(EdE_kUe\Z*@=PNCHV/EmGR,>Z5.aq-(_S=TFH9#P7h:X3\]JU[06Q_Fh&f2MJFCD(/SK8qe5NcibX9'Lit#\T:o"^Ys12NO!j)[
%CcrfWM]R:RjcAV$*-p`%-Or*(&nbQH]"*PYNnoO<]=p+0R9RbWJ/H104](Y2Dp6&7FD'B+38&"g+b.;ha";Sl]Vh=7kg;JA*9IV_
%%,Y".NLofds3'YfKE&-t%u5XY%UShDi%t4M.h%cM(AWBH06e*]ajZ)0%[@c0DSIhCK)+HK[g.@hYg8-'[]:"AlGnrs#a,"cs5cm9
%M>u=cofZiHIq1n=3c&Fqg9H706]*2Q.edMCB)'9q:mX;B/":J%%'ck"eW:`052?9.D%nWC.Wjm=.A?3(a8c"aP[A^EUD6T&IGBZT
%g\/.tO/LrrCL7U4oc":Vl.FJ$&<`=EKV.sG`2^/MWY(Z7MoT6#$N[?-kqP1tN=G.%<n_ET3,Q3Qa,/'I^Y3^8V%]92Kc'-SiUFGK
%4Q6g2)t^M$cb'1$6p;Tf2mtkpf5Eb[hQA<LI@WU]ia&:^Fn%k'lW+he$k<96ZuQJ.iW)ofP>I>:Pe%A1G*='CNm't/h+hYX%!^3(
%TfuX4dAQ-'Sb?oT9BBCM[iGhPj*!V&r23KaiCH*O^)NC\o_gja[eKI?`[?5mp?#"3W%jH1#KtSeD@d4O?e^'o(-aGB+lSDA-k^8d
%0lh7okn:oQr0^p^gk`oo?H<.TBU%Vj:j+TfAQpF0CjG[3kkAAdT$ZEu[)92#&@HB6WN1e5=YmXu'K)VQfM66M,LA&.EiGMF\o0W4
%`^IT6a*Kd[S,R@T+&;:R;1J)G^G.)5\9BPhoD@#!=J%$G0rLh4Dd-?t"$hJ/N929lAc:+f"=A:X.:X)h@k0iL<?IeM$_O])MF^>g
%Ob&#1:VfC>-JerOS>M\YaR*bb;'WAS07idXb1[lGTo-N<et:'$L6goLZuj^qapE>U:/C'@l&7g9h;;6O*o.(04>QC>[g/-p*>_d=
%Tm2p?F/93J&A*WjU%@t!nV-BbH:F6@d@-j"fmFeHhVHqc;oQ.4k&@u^MpP+MnK8G!<JWJjcG["(ChUG-P`Irnd,?`+cf>1=@;jpg
%#OME,%=^>X+3r:4cs;(g[oNE`rkO[ek'c5G?H5eQ@&\cRSAi`r+Wl"U@T47n'bS%7)SrG`h.gIcX:_,HLl9[HO.:[SQH'G^g?jgS
%YQ+m1d/:ic?L[^!/"]8r,T_ZI"8QnkaXRnP79?:0P?67/6o)gb6K#ZkB?B+'>X\r[_]lf7[eQFri7)VgqeUc>[IO-tr5cQWX4$R"
%Q21t2N&4,pFLe&eFr+!k4SiP@V&`f5aVML")a,c;[V.D`Q#!/,kMmAr)O%G&Mo4Ju`8Jia`uk'<cC-uUitK>ff_1tuhg'I'C(t4o
%e/b][m_n[=ToY6JRg1$DXV^h+B@LsD%rap=k*28,EUt^r-Sff^Y,9S\lPP*#@@2flim.+5d3&,GE@2j;rUGho3_aO/HZHmYGSojm
%ld=f;jVm6No9?>WP28]r5a*c/4L6A)1as_L.7P[;V%FRZJ28I)5&M*V*j\4`!fp0L`7cd(DA8Ed:8B'sP$<8F#ZC=0npthOL\Eq=
%o&G0_m/3bko&38*SA#r3TD\.:hM,[i5_4pOFq"[s!Jd\-]QKaTP#!gfrk^q+a'kuQMhk-g,XdS?=,$&Oo9_p!]"Wjc-Q7He]7bLO
%SbdTgM?kt#mb>VhIl\(#BBSfLh:VGoi&ncZi(#M_41h*ZHJaB/\T:P69QKZZ@Z+Z3I[1LR=^Sr!7I-tn(u(sKZdY.*[d)QkQ`3o-
%M1\n<>0eX*XpkFAaWp5mnE>']X8@e\^WBA]^ei*']Pg5a5,u"[[dB%aOWM"%p_#(%S*/AKijP<g/T0MEc%e_&<NuHK^:t\YO;AG*
%m.!2%*Studq8Rt-h2j_-*r5YP'=q\cqsgI'#Utij"c>S]3jH6g1Q#\"KMu0E(Y+L5T0r=^3BgbDZ&r0:F!5@`G(_=[?8>/3ji;4W
%+/bXKk65g^ar@kID?:,=2AlT_J3B*n.bR$G"V4,c_r80I`2c]4[_O!4+1Uj^[nf]c3bHr<4a(NRk)174`>RJNgGpqGc2&HSO#373
%_d"3tc'c*00hVEi(-cWTVes'5n]@O*kC3]*rnVq+;3/p^2!*ROMhcqUDYc$XpKNru/KnBoRtsb-O:<!eZotThMc#sICL!b[U(;da
%`b>2@j*!u^gS8(g0/L,bpN6/.Q\F8++EQQ"M+^?^V$cnE];2o\hdtpcq%8=ac93)sZ&X&I.BG\>f%Moj)E@k6['-\f%l9rL(:=?f
%$@#YX+i"g]*(r<T0`7;ZN\n;aYL>MJjfSTR#-W]qC0Gjh9b;IpdO>@H\t<%V9W$j@$TqSlbKK-r/TlC%gXGYQ'D[8`hj=,ZN/sKU
%@e92G4RV%s2Er7=%t';aFW^j)EK*I6W8Q/@TD@2&1F'dOH@"(l089_ZpM`NOF4G@tf24"1Tm_2bRpT3Q_q;D4O?!B.;<duaL*-M0
%P51GB<GOSQ^;[Lr@?A+Upi4\Y3g>ZOKk0tsLWB#Z>+P?[RfO8q0Ytf+Hs67hP9/EQM>*&Mosgholi+u$7s7)dr`+EP[`R5Dk,;`.
%0j&M%keEe/%TI3[Q*W51aI8ueA$;%$-jD=YKhWeXb_VC6:Mr7fF>@.Fd)=Gqr=XRa51?`bTKO9MC9OTJ@'?5$`$o%Ne*RnigO^`L
%8tVIDlAZ>OKZ0@jXn:fV/h?nl4+9]"q_o_Fh1=bgo=l&im[S8oo5k'C:;RE5"tZ;uo^>jB5b:\-qL0IJ'E'tPK@=[_A12RkD<QI@
%hDbqHV,IdJ8'=K$VHj.j4[,%ZJ.f0:\t0L3E(*ip_bm%U)5-gEMaYB(eesH)dA_9_Dn=@!!HeT[lgb`%-Ot=t7%Wf6Z(bQWelS,"
%d-CH4Oiee#2ZQ#O2JTX)6N0-*?3b+Nh3NLm;o_f[S5,%2LtN6gk)JTZV'h?`A$A`!anoIKK!uj\h6=3)[t7VPf66RQ,of5d28!`:
%)a!_<KDNEM5WN4AO59g;nW0QeY,P*;F#5R^kA=9^aN>"Mb<$mFec;!9@,*bZ6hTW16u"lZn"uqF4&RS6oj&F#Lp?THVRc'b@%H-b
%IQXog31K3&#SUs'*576X*"g!NEdu+_+;Q2tD?h,lO/'[gH_3/YLstc:TJrPFKLXR(DbN\o)rCDL,^'E1#<M$^[I6=%[AfL6o0*uc
%pol(*HC@K,`9,<lJ^p9Gn9ASYdoSWn]F\RkAFj';?f!`o)O_PdDdI0`Bk_B.E-g2&*>s`e,F%U:'+H&*q_4\Nn>.)nbQ9^EeXNPj
%X6\rGHAqr]OJP:e+"b"TECpc$m2q<.<0s(k6sm-c7!"eYORf7,/t2b\6='$,^H1<-SW^ZZ\BhNPQU&p2MeoC7;^[\4\,,_b9O-/b
%/67oQ;3<@@L'JC)NG&h4LaWWa9>hGf[-1q0bu[.K^<oDRCbe!"@+U2R=W$sm>nG4MEYb)Q4:'rZfQ.\DTl[GknT:?V""R_2EnN+h
%\hQ3#n=mP,,tsDK,aLs<^?e:miRIDO&LgJL@6LjN[/h9dXUL$h'CHj5X,2*WGeV%U]tp?^E#`)B&0fV!8W;T`ZWo!1piuR]O\:Q^
%_@\OlVucDdp(<Cp1t_!OW8?P?0XYD1Et%pT`6:-P"rD_B:#r+J3"'F!k"YW$m[kEDNS!W$_ad!5Z_3%7Z!8)#HI(Gcfm:/%[7K3f
%6N`IGZN79&QLGKH*pk>\qbq<BhWNA!:I&UhT%0QiBL[ro'^g8?kNH.Bo2`3JRTkognaUVAgp\&[Eq9.3)#8-a!>C&p_20DpM(OY%
%M,qFR`#KuqLt7UBG7J)DYj1**X#eG^$Q\(K(<q;B^R-!^aDU=p\0bQYdlP/Ki8O,/l7E<AgcSQJ21QR(YdP#bJE4Fe!;Q:L+cu:V
%e=3?S!Y3tt=eW29O4r)KDKlh)b[J^>iejUWmF&RPSP=J)K]Qfo@jSQro]0=b_tdLlo15/=jY&TN\.3Y;(%a<1BkQQt=:\f^*/(Uf
%'dRmbN'2;-_G<hi!Sd-@8*<P>DRalo<P>=b!0bEl:E3EcVFKkU*ogl6*%)O&W0,_WVQ4&M\rWfAMg:th,`_)ZOus36[ku6*1L&0X
%+^gXM'4!ut>">='((Q[c_(#4tTs]M:AnDoFG1C'ffROhm7D1:(`F%+Ph<KOdnS%9kBB_'E4>jnA`0$flDU+UJf.Q*r>>u@cX\B&q
%?ra<A"&Kh[+tL8o6,l><`sbW`MCnGCqd*6FrPiPcYnmYW6@1@*J$8*#Egi#%l?qnN$7Qle8Vp!e)a>KS"tA^gmkQXWX<Y-\0Mjrm
%>nkCjoW4)8!<V7&d7iS2600%H]]ZCMTHoR8;YKk:(*`HneOP.-=WEC7GnN%pd`Upt`6?eJGdg<,a&^=D`-a+ZSgkrf"5^._]B6o$
%>9S-k=6\]ahFo1*]`#>>qu?.MrQ"s1n,C5ns7@E4YCHQGs7*l%jaRF#^\``Y-)\;Ds80S/&-(PeoH4+N5QBbNrk&4+J,Z'hs8L>/
%s.B>W5Q,qVr87P9s+O8KhtSl#7o%HHh..q<c%k>VfL.YSfC4lnj_a!hNtt4krjZf$S""/Ac*ttR%hIdta6&"t9fkl:pVS(\F;gY6
%.6m!l@sV:3]os?RQ=oY>lVCmX%_q`qr-`ho+3?0S#S'6:]:DG$SGn54Zc\lUNQN,r3h'YRA$_)MU2Y7'/5hIdT$gR_K'l>eVO`h4
%h<aI"]1Hj_*3\6S6<>C`g"kZ*cQ,Fpl&sdCL`WnODVcLF2W7RUYta=7\MG*-]fJ$KU"8M[bK*+RNJ;9XmD'A1j691MiT(*:DAZ'H
%G7lKj)[;LPf>G#@G4a>4#(-n@M>4Lq^]1H@mcV0eiHKGse@0c5ocIEp)P"X`=l*Y,3nPLM?CgG^A5>]4a!FIRl#FYNMY=s$274Xf
%93%:heQ]B#V!TeM)'*H;g&)R:<<i_feZ0)2Jrng):6mnoD0jXTF_5`rOE%#(-1b/Frmp&OdR^aiqQ1@T9/u/sC9D4bCD5!S.Gp#j
%6bE2^.+4:]YeI1Ui!.a/?VP!B3[9:=]i;[[Am#oKRd"1n5@gRtZgSN),H3!=`;0G89qF@d%WcrS&J3V'1518g@SnXte"+30_AGiR
%S]7?8X:(RXD^mrUqgnV@MCBU@;:V,A7%9U.X$&*g^[n"5AT3V5*PhF)g')fCc[KjXSGXb*.Q+RpDt])V9G`hd)Q;aG"<?gdU@rED
%DGCK;%,9NLf6r.:rS"hn<c>Ba$b4O=<+QPgCl6"%?qaiAYf5-t^kElJaBdMfN;.IEk)+KD5MP_&bahYj&-<@[eEIZ(#kZ>JpS;\N
%JoimJ1o5pX9^93p'Tk7=E)a4R[=[sn5qm8N^9k@l7<d)jXjGV]3AEP=M5s75Cj21nXOCU3cqa5qPMXR7D:eYFqR_Ye96r=P1adKE
%rPVQIN@qq/>oO^*o>^#?FN\<#M[FNoQ#"S5)9pKKM;H1W;Mr<.QH1K4NOq7p'.37Y7VLU7Z<Y)F\J*.G3.f*!,WqWI=[FS\0>p#X
%3OreRQfc!=5a31J4J-FBUR]$ks0qbj9cipO>b-=Z0`jGgT![dR\BnYSW$b>IqR4g8"JB#O\\[r1?efKKrpID3HLruXhTk1P9&cQW
%e!]T5K(9n03q8lHH^GVZ\5dG2;I=a1/W%P4:(dse=tk(h]_205C=<G>:NLh<XZ#B<1mgl[p?Cpn+dNaalI[_EH6&\Rp$9?5N5\i]
%F_?)hZ(9GS]"^UeCstb,S.qE?FX`g74p&F.Z!H05jL"1R[X&"Z5&;4g!boIS[4a.@NEOK,:t=m]'&\FUj/:lX<us>:Ot];e1BB^D
%-daGj86hCL<d#Ic)iGlLkUu:q^p'qA]a.b>J?-S%28""?9Ps'!g?$tC6d;;F6HbCK4@1>T5<:t!8LZ4c2e"oqr_%)PG'<L-/gMio
%&cs+h(r*Z=I^R%qT"4L:Cb.%,ea/mbd\FE5C/r=G?g]d6eE+Bl?Yu^fR0tBRf*DWH'INRao5-Z&&5,.J`Sb1LD)f3(.pB*n2PHn1
%:'mi9cCd7=W0qufcfI`OOZb]k\@bW6U8-4U[]uMP8>>'XqkVeWZ,Sh0'j4jGpH)iGD!J^h'B)?.BbLFlKF&Gj46/!5Yhh,-Ug%Sl
%'D#>u#?ejcM<=O)&S/`3C_Lq$f(NKWP>Sr#>[Ht[06[$T41jsWB:/on,D6RcK$:7OR1sP]4F*b4DM`7;]EaU$&ZRl6(1(@h7`L[1
%de3&Z_#OG`U9-T_b5ZTYg;$MQEM[cu9u<0KWQc@Pk+0CSe"crqbGakmg[Li&iP5+1/1H1AT?MZ\,<GB<8LLksLs7\$5Wi/lhEAS\
%`*AOoB`hS>/BG_MWBhMlXfa2col1=GWqX7Z0Y+[i8+c%j4"IS4[Z/1r/k2q_+4#tddJ1uQE!unV2B*D!U$QKcpF5I^FleFP;q"tf
%h@Z"%$4m:0*<+8qErf+giI,l7XHfoags>dQo(>MN")6)J.Se@(";E^:lI0YC_eXSf4XtKd5E)q\n0LAjXQhH21m]E9',n+B$qf*T
%i+Y0.;Y+WED!JI'mdNF0rlqOmUP8?m*[us!]oGPu4PiXL?MXodc6Jgt)k.F[r_"K+<ZahflpD1CoJ(\ah<,>SLZ>qG93jm4o8i+k
%3sR=PF6I)A6c_C`q.r`6AD%9F9mO'`j2Ojr8$cEoccY,#2<s;d[!M(MmLt.hG0f)9Ynb*M:d47EVbi[:f*0iME?C+CAO,RP^ZM9f
%BaQRV=9+B&2nRZE7d?E\/p52SMO#YANBQNa7E-H2?p4d'=nmF+YKJ(d__O`dr7PU&ApBeb&r5i_8laRV#Weg9Ua%53Lq/A5Sl^$L
%.U>G>*!@!d68e[eSlZot[bOP5<ZB?7:XC+o(%fH8C+JI16tAaP'(Q3@mT($j[A=?t[Y[l!f9Qc0=7O#R*2I9[[C3ZmD)3(RK#q:L
%5eW/s,@t!B2QCla'L%!=SqQUAk:Y!WlG,5q2o5(\M@l:9BkgLUm7=@,hZT$[T>TtT86o:[b"+VMbG;K)a32L`d-r\qDS.aO>E`UF
%>*'/`+,9_:D@!aaOsL6s*mW!TgeY!G\k$3e7_h<Z;(p=\!0'6VdB*`0b`=mh`/*R_3\GV#6nlTf_#\_U`Y6)3*:QV7!T)u.?PcGc
%2/a;(!kObNEPaJl-GYY3-'X*(c];R;L*Y5fBM2P&'CuHlWU-=Blet(&(TK*BBAk,eI]Nu0>c&IK7^UsRYP<H^=7RP&rn+S=,E1Qj
%*;9cXh!d^4DoGqn)+l<+7&(!8K*Qrk'/-\r=$c1=oMW!l_"!o0@e?J^o3WMBLB>/fF_bHIYj"S/Gg':GKMok$oObQtd=1n4SJh=,
%V<<r*0D>d#7HM]GX"$b*l^lF.Lfsq=@2O_lG^54l7SaaQYQsdbPWr),!_+Q%od!L=<3eF&NOA!.(`0dDOj*7/!'qu'*l^cM"c7oF
%_(.r.&<$j\"(rDeWXt(]cePeK34hco+ndN7i]r(ZS;=.D6(`Nj-a<g:E*'OWjLJ5OHZ36*O%B-LXCp-A=p[H<I-s8$p2bn-71&8c
%An5b^jE1.!l#@Ke.[o)D**qe(a61;\FXL516,_j;'ltRG[M4Rp%6o1Fnd^h>#]?SZG1\4D6I!.+\PqEh.9VU;#/]X8?ReHHb7aD,
%+IA-Wa$DG2\,'YGL[ttgi`Xl[W+2uqr=7'QE(WkF)rheoL-NEi!@<Q:Y,0n2#g3MCV$fq3rn?*JJZ/;[TbO&/fd'%j/8R&Oj[7+r
%6!:dC0nWg\g,^JKN\Z'094e,]463S^ck,`S.B!Y\ON*tm4)1b"h:7K"(mG%#AH<k%(Iol>rH5h^&a8j=Y9\-4JS+'4Oh$@)7Z=9D
%C(;3bgN]sM%&Q^#'c3;O[J4QN<YqCHkn)GsH+?2!]P+JokZF(VC`VkrqO'`E\"a8!lQ1RiKm3r<HRq@"lEgo/g*cQt9A?DW9](m4
%M9@'2X@[TtQ_s!<ZQp9lp>5PJ`$%"GY?g!'_TH*t8$(:(N5-ZiZ"(2Ki_c)T2km=A&B7%BB8eBQX$pk6*#4JlNr3?%m9I:?/b8=c
%2IT&9lN6Lj]$Jp%6us)5/21OCkr&1M_-#ZQ9%Q@MD4H.<g,ZE_F,SSDSeH:5bAUp>lmE@1P$bp,E?DE.TFX,_=N,5]3tRSp@m-Jc
%D$8`U8Et5`R[ZQX$X_Y,]>Das^'(4IL/lE;GN8.K5J,W5,[#9SaR\J?&+-@mK+/6e\Q?fJ#N!fVZ(`.].661>[HK/DlKB:_CL@nD
%)[M0S$in@9+;hX"9bqY^Lcc@GmT:>%!hdC3/mM2Jb>XdocD0"6'UX,f_2\'=`^QQD7&nk)K-l*ql%RT=$ch6!N)s0#iY@GNI_IX*
%FV#itFe[1i^a0tV!ct6E0NAjEZ]+P/:V)_QKaQgM9.pj_+XQ-,k7RPoOjW&EO:^9(e>F(q1^AXmniKVaMr@jZnj;3[*SA%*G;3#$
%)P5VVc28,`7P8^,=K@o.@2-9=e<CA0YPQ5WUJD"2J=DA\"[Wq6"b3/rY"k6*DFAj2S1*3X0LRXI6sk+F<%%6C_%?nMdoEjJ,]\RF
%)\G?/ir3I)P(@@%O%'&Dl6[]s`'1)T.:D%YNKI>)01t5IlPsAGo>1f@Z?Q3HXX6f:YKPh$-L^,j.H8`em\XRNrc0#?2`Utl]DJ]\
%?JaVY,Ff'scFm@IBYeNu[Mq8A(NGdT>'!?t\j?=R3\KGNm$DEU%62YiDPoQ>:\?u!_MZ5BGS;7ULdRQsMsj((oURWEYhVTS:;eGP
%ljI`4((rrWYVp.ra6jamW#tWRJX6ON&6F35hc0_@S(kj)30(3q#?APfL;k?g=1T<)bsO,LX[O.[5bXd5$,_JXK@RO[lr!tj$:B#S
%VX"M(RuO2lh!6tdruLc`)Gh;nYa9.G@fSJ/dK_<4iB'MPd!cWshI?hD0S](KF^Zc3IgK)A(jT)?XFPq7.S'_8o^a#0Ph\!*rG[E-
%%gK1@oY^h=oJ,PY;tCRnb4ajo]'uFqN,Sf+!ufa*qH2\#,FmG3(mj0QM$JSlZl#IJL>c(Njn]a`jijU'qXjguM8M9Sh8F2!gLb8m
%L2H4Y"^/H'V:gO>>S9@jQTlNodCV2KMf%4fp?2WII5FA[E=gs5_)X#sTf3&C'2rSIPlPLO>Ci2*;Zu88ompBr@g"u@GhK>bj@p4s
%%b>X0IKiWBY&e1YJ%pe9+:jZEA9$ZM?Bsk:X\LuJ%2GBU0Q<I6o#D0h(npMb:o=C-TH4Fhc,0]*^]p5IMEPh.n8Wa413&&!ZOjT:
%aQBEG)hZj:gJ:%'=OIka=,.IBqZa8"Ldo7,$u.*^9Z7;0O"VfLR!Y+SIdEm,e`uIpbo$Z,p=eZG0SLAI]<S^^ps>C#<bpES';m!Z
%`Cd;0;5V"\"&JTJ139?`>NkHt6H1ZG"$k"o*$7]"aS'@I@gRj![r&N7Vl<hANpl/MdG1P&>i'dWjrA]]]pd([Q^/hVI*g5_Q5WD:
%/EI_"NQ,rl$(Y]@&e-@866C3\O^&l(d<^R@+7/W+T_LW@fhEEgjh+MIb$'Xh)rTkU?Jq[rV)7=/0LqmZM&i+X5`J"m1(fDA9lbn.
%g&dP:rh>fsCB>_S`UFAOP:2=_jpK_BBF^r_b8Jk6Y]\cF1"1Vc'l7/c]!>.$l;20;,YniAGY?odp"aJ*QYA8mJL+39]+)P6G![P'
%Nb;iLZ?tjZ]=J&GWJYqC]m':^+=cskP^mIDniRngoU"MC8Ae&+pq[PWS<=S(&U^)`#a.G?;QL+<E-@:^)1c))m92(J>C<(9.bhT'
%6pal-h)t=Nnp&c9\B_0N*Qa7bG)Vn-d].c`5qH=piu_2P"/:Jf2kAe[Ef/5oaSjOGId=&N\DfJe^2+,cf`-_mN8+B/!OhYHq+ub5
%L$Mc[^Ca2XL]Q.Ha)iA/jR$;(mO*'"1",D(cV($F`?0tq],3i]fbu(XJ"?=N6]iV'h'=q4V?X8e/E<S2Ol[ZQ]GTa`o\8jck0p1m
%>7-"RnkO1aD;"T0&J.B*ZVu[N&jG#rr;Vor0I_>7TntJ7,%O`"IL33]pg26iI*<EHS&"uKLsLQb!!4:tEK,D]#fk!R#q*eTgGbr4
%&EjleA!?2FL!(\jbMHHH!9I>`3KB!d,4/TKPqoMhDe!KCU9+&;$lgKrIY!C[b18Jg'!(FuE?aA)(3A(eo(dMj,RI3s_]((To0Z'-
%Y8OkXe/7lZ9hNk)/idbUaPM#Y5K!Pe?X_"JE%^)/]Rg`B2nIqq9m@ZV69h7bFEL0O>FKc8#q3?m663j(rqs`6DU0&lf\\OS&L.[r
%Od5Dgl:j'sqkZ;TOpqS2da+cWV.fu)Cu&:GRo*Tg($'`3@U^RfJ"_7]:1T8nHdopj6/h<.,+o2DjE08)2=\"VXLGd=L*O&BJ\aJs
%'%5Xd$c.([G.3]gh:NRKj0Z[1>\TQo%h2SOj1m(0k;dI&n"^31gta\=Z)B7k^s-Q0BJiRGENcDU4lh[[;`gf+jg9_3NHBkaho4uR
%bq<@Q)><suQIUnYkStHiKLT"d"6I<e<bW`J0oB)"'J2s*i!:c*q*HVMs#KPcZ-!:%9Bp2/MIE:uTMK-]?"(G-U2.aU$!-86"^ZW)
%p.'I?e1JekBCHpK)M&Ib.l5f2M#4\8Ai5*`aHV!f_7RQ>`cJNM`kW41KWVTKKD=_B(MA4"pSto\+[/qq'4cK])IX-q7j[H3*7)BQ
%,?#3rY+S0sDHN`14EgKJKpN-@'tqMKeH[(_0]1i7>W7n)"16W(CdP4`MI>.T2?9*f-2CM6HtbZ\#LYaJktZOW$;BD*OhpYEYX>&3
%h1sGX,^lE;BUHYk4?+[i?$]uoll2Gp"At+/\\o`[`6:T2",uUX1-6CmfQkc1Z\JjR6r$_H):eo$1<t)Ho2LSdb#_55$i1m;CNSRd
%ECoJ`Qc4qWTWg4SNm'M%n9rCZZ#i&&:e[eL#iXXVe7Nggg$_Ba)"!QQ[:6Ng*!(2\H?n"PTsiU_mDhMFQq/H9b.RG1Q,c4IiX2oq
%r"^oe<Sd!1jXSXq^<-XLd%n9*<D,HRoGIFk,HS%@r1kP12E?@L'L>.&-eAaL:1?6#/Y9U0#]j^??s/@nnLm9o)5-e+>')r;!HfbV
%*=bQt`760e#G6d?]`X0?h6)/IPOanLZsafnH;>iUDM(D"\l:[.X?@D/RFJ$S;7*WGR_kT&M0>sC*Xm$qih[KBHmB%2=6Af#>ZN$3
%>[XuRf!$1W'j91Ae%J/*$Sm,@)O1Q"n8^qp&+?3i;Nu=Gd_:MceFn4;LrCF%qH0*/.nrRaDahL%dA`0mp_!M.9Z^6bmSLLE,STPg
%Ld*OCPAWoU>["K_Jnn5Ohp]c38BdlX9&lp5"e@ob+KcoC+aiFjeof3]g[SJmm$t7agl#K.kV:1(T2$BbLEE4<(:7EtH5F$#;b!-f
%.GdQf3t&e*F(@#_VMu\P:P+W<jch<RBaj=5)`okec'MJ93@RGP,;?[PqD1)/*6i6Z[Ig8Shc]AYVd3`o\k]ljd*W,;:ST0UD#,*5
%X"p.SlFnl2Kb)36E+U0:iN<=1MIn48(l6DBT:XFPf4?Y2FSU'!q*=l\CJ3&%m6&Ka@'MiGOPZlQZM\4UOGam$[((+>98"?[#&!)g
%;r^:O2>=F#IQF3U)Trg+Bs%4%>VIH@FN1^S4;*j/;Fl/gLI`!!l-cV+1E-q&YX`A+$(_q2jc8!Sm/sPn!-1BI'WbJ\j"LPZ+"Y:$
%0b[LELU[7q3[m\;W]U#nKb9*g?MDQ8HeA)1XlOK/*3SS_<N<@=e`[c@m7mg,rS"mL:bo(TfK^O$h&7Ll.iKXs`'btoIDcE80L-=t
%*7E-ES%1Lm<'NY/oc>'$b*Dt*XY>"J?aMPP8*60`Y'RYq!D*@F^28*gh#Jb4_sgbP8lPo,0lhm5I>ed%#IQ\"nGfnpLVUt_r-,B'
%*&Sa,%0=UGpK@dE%#A0*<g5h.1]g9tZjL8qI71:6f">4;&T-Ud@?RM?<l3%tS;[S3jdil"=C]XtOpT$E`fX?"%BODB5;8=b-AP"V
%K*T3geVAL%-BP',a2]bZVC7H?(-bH$Ces*(=a.i\SEq5pSa]MsOY57G0M87@JG;+EU""S3:Q^9T9Vq=+FbjsYs5FY8pLG(1&YfV`
%%Rq!m;IJ7!>Ug([.C>T6_GfSo'G,J/q)pU*oW2k'oqhgb2\iRU!rSTKHZU5m-@4HS$i`5,1FG;Z8NnbGG[BsqpEO+lQuCB5i.M`r
%d%osR$*s@dnPbFg^'Z1AZEpJN_A'=`<t@<7@^f$^O.;:)#h9)rlm.l;/T?H@r/>F`*@"Aom9s_Es.?Zh9,1@T!uglEfkplpGoZ)+
%UtGC<[pX4MPb=[Jjg,t=@174Z<?g&J)ombHM!TX^dNgBagPJsjZ``!2SIcQ#h/\MPN$b6fFJ)*6dl)EKq3RB[C;dh"Q[8;tSo$,g
%\1M,W-%R8ies$AeEH-QD'%=f]FVFt-W+*,`3$Ko?Ea_Rb/sj=S3!`Xe77"`O.>"n<gP`i-&R_D"c!<6:B7R%roJ,0W3),n9>'q%e
%YkNfNLd["T`%?b%ZII01LMu]u9HJR4`c6<E"($DNS61&M3['KBa<l;cpu`QkF^#qIM,Dr`#W^ck,X+UUBgnRnpB)J/1[3.Dj9dC+
%h+-G/[.^90/4RpVJ$ti/\MqsuX@=7*<doa6=&mZc!/=<F]=E*FkFm7.9;F:EVE?jqQ,ZW`Et1:Fr669_Tl=PiDi80@`IRK:FBBHd
%Wr@N`.hWn<@<Ft*0(m*fcCD]NbXl8]j=a:6iL*#-DWi+^kEr!e]/?UOXl`Al[4`23pZ5+=q?S)h/KW6c'Y1UF/`n2GgDm%@;J6[r
%#K"]"$D[+VXtKccAA"@PBBtT:(aqLEd<sJ0'df!1.<^h31llm=e3`@qZXpqY0Pb-p8Gd>W'"s]Dce4O-58_Y14Ga7$BBMj]rDZc[
%aC)F%bY7/;]@.PuGV3ZEAB`?YXcCt:R5jCO'K;=QA`g6$3R/oq^@tg$0D=r3GB$p3:aHLT$$KSs3InL$I^uXCA_drT.8)'NGNq)B
%;>#37#X4<^Mfk8GLZqBJF_-NE:&$5rfX_]H?rS8'(A5(XCZH`2j""ZGCcq$3`^-OZc,c]Z6eOlS'\9kj+6au5P0FTo4U\",H#Id$
%H>OY,<#-^6@I1mFPHIGL?Oq&Ae:UD]juuO>Xs-XkZ>Ijsq]kt:M6T_(5\L!HHNYh^Du!Gk+3+>03GKe%1S?Y'6ec+dkrgleBYh),
%JB(J)SL"TS``L<ZA!Clmn1aQQ<'($H;[>sXL((^]B.:d?#ka:F%rqf>bTr*U`<\K)0M:d*@?$SPp">i)Bb%=@C/Pn<VFg2V5+u@7
%Qea^*C$AY1k<oM=9O?:ChUr>!?njY]8ST=42uC2+Y]KIF7q72nHr>V25KBU]8@piJGoJDn6ZBo"Vj#HfVmlYb%:>H2i=SP9.7I)b
%/8l(L\;nXE6\$EIT$M7>gr?l+-Ks7g^gcp_Z*m)h5)rQd<*<1,,\p_b6TG?2>Z6uZ+jffdq80*(EA=#LQ&$uFP[c^XI=3O^Sh\*J
%09JeI>=J#m#Z0#ZVrMRl8?lP<Xc:5f:fLb0a:_Lk<$Q^qej[-K;f87[qN7m<n_>e4@mS_+RLW?,^\;CHr0H0pMjRf[09nAlgKJ'S
%85KS+I\_5F@'t@V*4s[s&e<-D^)YCmm>fp%+[WP;dMX-3;45qR-))]<YgGQZE<cqC<'m_s.5<%9ZYTO-X*@biX2:4X_`r0+8DQIQ
%.`t^8:30?X&K1)IC5GK"Dlg+5"H_fELV-_]VR!?INSM90+/W5AK:?UB56YG'5IOK`?DmJh@;W1Y$3j]qo>[h5q\XX]o;OTcQOG,'
%Fre(SL6Kns%SG*V0b*9qA+0^J9*EO"X4C0:E\SP5[lNoZXEoZlY=A/'CK7bPk3+4[Zj/T\`bm%3i'I15*PV5]j=cM>i`oX8MAUVm
%(F?AllD<E<?K9(gs!jV]FYmB"O/p=V;2g.?p2HhLd5^lSRVJC0dP?jAgW3G;cEXkkAr6^%#rs^&:9&'O)4N.N1Eb+p4YL3HEL`N0
%f\)B`a7ScL%0tm0$EroFND_r/;gq-$?iTVk4)1`tWH$D@E^Tp-2U;%c&ai<^9mas27$k[bE6IoYFFlJHWX.K(`d,7JaO@(T3>+>+
%FDCGHZ`n;4,G3)4<itPi`Z!NX(5^k)oq>2B(<r"_b5dYQQ60W"YtUl2mh)SJE91K1OX5eq7V'A`RY0u,@qQu*9)Q&"`2SSJqqia/
%P7+*BX+a?L5$#)h;U>e97BsA*0iJKWF:f`GZQeQf72@uU8g8k/XD?rnCO53GiUSYJ`s=8Oq0eQZEp/n8G"GBl\OAnI&p,Zg81s81
%S_)=%MdYZa6Er-;GR<lf"'d&lBHc!+g:"\R&VNJkh+M0p4jN#iEIh9gQ97A-,J"4VPK,[TA0O\SQ*`EVH;cYEB=?@E[D8f'):l6H
%0"&&%0@8[<W#.gH_\'U%r*4nVO.E`RBau]@a"!I6Na[]`!<eX0kJO?Jg4IW.DLtSg\tmm;QV1ZCOYiRW9p*l7U[eE[f]5S\8o2@\
%WI`2\R``!aT?""miZ-$;L6rjD0Cp/Dk1OtX@ZO,m`8XtWoXAfu4fJS+[-r7:b"r`(`?9XMkA&Qk<hS82p#G7Z=JJJ@#B3*bBUP_k
%8!`jPH@$pfNciTM?V1E7j\Xeqj4[OQ&;fW%&BfnT?*`%HA?Za*n8hUk*7q(%>pEI,krjfq@qk@[-X-Bl?a?ugObTEP6cW;UJ6i<D
%/o?)-;-p)-9X#k>aqV8m$@97$%"@eibmU7uq:qb$UhZk;eDoO[T0_=I>k_[8KB7nUC!2dn08s0VQ:'%)5^80d@HMNfj-$%'G4$o3
%_HTrE9?o"f<C0mc#?B7/V@`<:2GY#uL/nZ2TGl?Rl09jkOm.B&;T>1Fo&)*'AZC3In2m"[$>gZp8c@H(LRWKE,Oa*-'h9tB:s@%/
%^lV([+ATV%3A<cN^-:V36=0!PLN-XC)5Vh-;C+HmnN/h9;S\Og>"E7%Mb\*S&Ar7IESgt\"/F:4^\dtkWs:G>MLXr]&D/ZUcssdt
%`k7:PrJ;;$c5$tPT29AAnQnc1_CnhEd[lJngur_YF3(u)S^<Mm4=`p"h?1[Bd6X3YPT,fD8h)HF5=/gaJ28mKdV;O"/R!g)PX+Hn
%N>f0m*Z/I@\JcB3ht%1EjM=bF;'%IL+ukH:ZUV13;eLMh?[t-X$Slt.JD26SO6)1arsB_<9P.`]F45H*i>GH2Y<0:u2FO=I'oS^`
%LgHQKfVmt!%D3sKne/*-7WJn29*:D.KX>O-A&Um^m/>n]=GdhN4AIItD?2c55TK-XW>A')A5J);.P<:\+pQDB"th/US<er/N:SBp
%\;7+.Pq*3k;VYHTr1$-IP>7DQ5YEGqD;!08I1B*a0.UV:$Q+Mm:N@1I9n/#g&/CYN-,;qNq9!f2-:StPHJ2WZrrI1o;it?c+L)\j
%,4TgqcP+j<H!IdJ<N=08[H,q9%ChR*+8>LR^?n$S9Xh:'%m@=D/MbZHBM,C+M)g$u.(._<?sFWoGTC,>)*g?q#Ws9X6a[![b4;]@
%._SXE<EY\\fA/"8.1:Gk!K!XV-UCG).Qp3[G:':6OH_>so75FVQ'Z>rkm/#qHCbbJ.tRCli"9f+jI$*d,Iqg7O`;+I>U\T_&XjiN
%jFk+JmM:bE]_)b]4!kdE_obF8.puu8.2!8i#OW(Ni9L8B3I?XR4cB1PT"q9TI%S5ur_HPB^,eAB0CgZ_QdppD-3-mHS^TG4-Z2&-
%4p.\UY`?)dn\n3a[q,n6!0"('m/c8h4lW!*k.E1A>h(MF2J]?E,-e&-!bSRCnN$pHAG#G"=i@ka6gTYEG(o$ZeA9rY\UsuY0-L8E
%ISWGFA?B(1AUn)d#H4j3@tb<j2U9m=QRnZY!/lD_-tI=N<_S;jo82YWF9C`EmZ9!`3B[0h$iFNI8oQe(&qA&dd-Tj$fk1:9Kr]#E
%!%ZMG*@ef0!2IJ]HV3u3bco"<D?9&ipr/4"rWc@=%U&sh&g(a;+n*Vm.IAe,BRf>4<s4ZlG@dGYL_5pq^Gc%-45R@)m]bk)o%/=Y
%-Ye/e2G%.Rd"VTCMFpK6ptRMsP^Zf+cdTE9[rg_PNi6'lcX@ntploo9%'>Sg8\T%r*t7*s:>CK!o(`6ipTEm\'O/KEqt[rYs23b,
%e:b!)m](0o'ESk'$3K3V7@YV*6me>g8V3H1iVDkZX^b?QAeHpC>IhGV_OBaNY$/6YbNo,,.HQ8PF?.>NYW[!bhFe[qL--=;UXlf1
%20$OjCKqA%%B@p]QsnHMF!%KgoQ26r"e%@^8gH1OB`_VL\8'(.c(\Xnb3G@27"^#Tl#uc9>Brg1PI.>5PK^s%#>T@DemcqZ>*2"&
%JB@AP-^+%"`3q#U`C:c(du,Sb=EjQ59X7-+mTS(2X(3gUBJ(7:.<%C?*%uM55f1e^E9(Cc(\CMes5E^?+R2PA:2FGfLjISn>'5r:
%l4o6q\bP,iOG>D6%k0NH+RZ!:R8G`]od5bA7B]QkX^q-jU+-<5)G+Na0e$d0("e+K-).3>,!_geTgZIMT!O4E-BR@jC"+Hi$Ym$Y
%5c"eNSD&;i=B-\`beOC=:tU76i*Mje>cd'pW&1+Nf<&1_0Je-KZBuh'Jr6Fq2B"G'H7k+O4NfM:'Tts)/KYCC0#\_<2O;:YL=Bsj
%F3m((8=`S6[MQf`p&seS\VA6@_A`d<$).S=ru,*SMP<r2Sj6e\.3YdZ`[TS?*\Gm5_fiJ8Q)67NFN:t>XO3=fc4u?^'-7rWm?UI"
%:s^c<KIohTA2QoJ<8m&c+o-t_9GNMPW',^<)AE?#,LLjS.m]jTdc^MU3(5iCk];lc1e=9]7@'dF<lkll.O<JP?pk'hk!:d9aP!&b
%mPBN5Q81CXEE?)5o<f;mfiG2oq\SN]"@+?^S0lAVd")B5MJC.6c08(R&arM(4e#_F4"!+f";;tXI3\9mlqHag6W#)UFrW"#P2AF#
%bgPb+?Hjmg^-;Zfa&>e=O@@XY`[Q*XB1.I\CMYMdX;Y82Z7$I)g1/Ej>5\s=]buigO<K^L'VM=Z-lW3qTg20ZJA@mOOu)$aD[N#P
%]HBj](9+J4TM16Pn'!@XgM2U!aL7uNkgGWfJ5ML.#sba=atS*tYbgD@5tkD4*fSZR!))V>Je=9p6J.F?i1SQ8T"mGH:)]uTEI;)6
%49DaQ<7W8coE1Q5(Q=_.j0GR7A1e6bZ[Oni/Z>:pcnh$d@2rj$^eTPNom9HSJ[#OX\p8EqJujHbGs?smJ?%*Ok1YQt:,cli??>./
%$9:dT:o.]T_PhDGAk?,r0`Ct4JprkBk;:_[D)'tZFc/Tg^!0QiXOQ_t,Eo&u;fAt+rB_tJJZHE21,2MqVi^PG'f#UX;p^\0kRoJ)
%>+;r;e+$'X;X_[IO)k+Vd[9Wip3NT%4!i"oTKHBM-d.]NKfZ:F#K9'8Ua6bp1k@1M.=AH2pR&^Y`1O-#"lR%[rA;p\Eb/@_&!JMA
%SQ!RI(fWPQ8E_Uk<<Y0&Q,rQji#8\^0;Q`4qH77k;C=LlY/j[JWo?V_GS+U;JKZ;jJKfDk/+R,/oa(2SQABlA`(iaG`>3]ul";OL
%a_$&TCFn!RB,=]J?`+sD*[STNUdBqG7V%@c"_so^o*S!*]_XY=mgOoH7&FfD7!ES\O;A<4og'*:7VoiY70V)p'RQL3*j&-baC(2b
%ei+%P^=T1dhVP!"oH+4;)_<4<(ij*%'>o>#KroP/Z="\1SN=cp@AgQ.C5Dq4<8fg9,mfSLok7t$SW2I:ZJatVqGIA!>B<I18O[m[
%PROI#5R>:8nPl"jAH`3?.Y04fm5CDB/P%9A5fFV19"Li=d0RZO4UK2Nn.ZRr4]#TH"Ico`RZB>XHit^j6E34\QU!NF8dUO3M\_Cg
%&HS_'F/lah_c`sRMbc=_fdsfgq`lcT$0;bhSd"7tPVT%hpAos9_F\0P?S\hmY*'^e7EBdg.P;MXR2h[""8?@o5SW_okd`0VOhC@l
%>%hCQY2kT/?+U=QY=gFt=[;J^j3"0r_U0DE.-%g:/R>'eC9:-%>RCLi5ZQ=E>OA*k<:843E,rR1_$]a6\)>b8L=AS!V<BeeYGDSt
%O?+KLG,+mI@9iT>B(mM;^_!K<D*VM?HVLo!4eu8SZE#ih@B9Rr^!nSb0WprsXC<2i![=2._Q@KR6XTrm*46Ig(mHP/Qc(^cbS[,X
%#+E?8=NMV9^oFOSLrON(!SoC;(DDL-/6#J)nns1TeRHh)#cu+<S8-K(7ZVocUmoUUN8<3>)FHn_?s)fqN,PAlF:)/T9\+ik8Zd0^
%\[etgC/[3`>rJ6?JX*pVB*(P2ck6n$==T55E*7=l1ia*a<Id>dBXffTcie,W,+VWN]`FZ4!?lGe,pesf7TdYK?N<HYMrD=2`W>l_
%Pop.U@00YB*%L[_8*CpU/=(',@u495D'5NW0K]S9Fi`O%8j\"g2_7;Ol2akd`cls=%fgEn<N!0b`YBH^BHR"tQ7&"1LEK>I\[8f-
%_e]VOW*V%W9<*a%J;QKho]DK:d7+WJ6_=tYZ(MI+/[tj,Yi4<GfiXYmJT(_>!jWZ-9r?HX8-P:;.C"GS<A6$m#2U>EqO5daKYZj%
%>K@B.MFe1.n.C<A)^[op']Yn)lYgR4DC+g.:m#(s$*!Q;A[qLt.^/UJj'qH7fJCU\D(dCB%/C#N&U((S"'ge<@t]>^?\D=m0&q32
%Hm3gO'IN@2"p3-`NWRn2_!-D?\Do[]6iChmrE=6u\';N`EI&/4(7lgA*bs+!VXTPDR)6JkfMe:d!,IHS9ScHQ!pg^u=B8$$O6+1A
%>ll-0])iPf/`('pEXu!_,BRf,L*[FEQOk0kD*_**"lU`Z3W]naK[\jWlj<q@)`+u7l`VA1&q:fR)o/%q*>W(=q:\;X.^_aZAKOU:
%S1-pI`UJJTMq0G5gVm;V;?aFskL8ejEn8\B<ZP)c,im?u<`n9#i"ug'<tQ0N#fliORg](<#r>:#A+lpRR9JIBDL9!'"U2*fXH260
%Zcis<?<:<?'!U&-?V*;?Tmk:7:\BhMiZk=1\kAm]7idjGRsfN>dsaNbRQs7%/7?>6"rRA*"M0?K0@%#JCCP`fNXp_Hj<>-BlPeC8
%HKpqK%j7D5=<\;.9VbTPb:Rnl!"26><7>Lk@-JnL?ks,BS(4[ZN'Y.c=qhV58\?Zk'6lE@87h7;RrR`^_Q,'1#&B?D:P.Nh,T'%_
%m01Z<q`.mIa)`^*iT0r<S-`6A&M^!6R,T5"=RdBSA->1XZ<V,3"LN;KG7^`OAPJSuV[iC(.<+MsZ.mW-F^`.SpK)R9\3P*Gf&s.7
%T"ob.-<nrr^o`k>;>qmF2W1pj?4[g4..RbW/j1J)el[ZB!BY?ao@4)r$b!;fW+n-#ms3qc:+26u9JK+X<WSNI_q&Zu@0T)?39sRr
%.)ltYOc.@g<to_?pP"-/n:lH1+5^qg8=CKLf=oJe4Wr5(rZ'4,Q,Jru`anYNneRrX'tHKV9r^7`c2Y$5GeMu:/VmB"OE7tVp!!@p
%SG?<>G=h;WY^6GTIE8=mfnX&iq9=@QMr<%0=_"4_ml$'^/g6u\q^/-gBIPL*"@<<H]NkSUG@2kmChU&>n<P]gBe6,"F/5Tu\%FkT
%LU))?SXB)7@0kCj'MOD"dZgh$e1).E%ed291Sl;u=^NTBaU!PZm"uO)=ski;is#0'l^Fe<:BXj$%>&YCc*3(!;KY@07,3?i^ak(J
%&fHAQ51iO\9gDp>2A^f88aNjHI`o&iR*%N]+IL`LQF8mC)[&p"ZB'.V1^-fV]g\ABlDbH[64f,oK5u%=[P^J\;8J9^RafBPm&"+B
%;Bh!&S8@.t&WfdaKR[*.@G.)G)cG'eW)-/k=8$I,F24k2Up-qb\$Q_#8BTi*2Ko:ME4%tS3`QZ!e#QLTd/sDm>+>\,A*LWQ^6-@G
%#XjjlXhrFf[Xl8`oU9lJIao'%"*H22f3]IVW=V7D=%#X'8<(SnKYWJI&U^d-D,?J=E=\(d;ed8]OO2>g?8_W;;:mhe^kM90kWm%R
%Lg"!Wm+=aDM@HEK4dcqO*f^4MP<"Y)4?/$r9t=IUR;W/X,HA&WD(]LOeh<r%-mUL7EbIp;fLhf;=BZ#]i,ML]>pfC[Lp^(gdp]BF
%'cV3c!/+F@?NhBMA]'KV)(E"qlVcrKOt]G<:fg=rZ"sFA0u4*<JAJteH'soq*Z&74c&\"M`s<;j0Zd%d-V1Gck%]>k\Hd9d8es)\
%Jhr?%o2i^4#4dU0%API$7,SQJ[L^',@OstkM<"D!h*6`PkOUA=Y0Q1.fN4;;89AB`61ZmFgX<khj?k`2Behd,^l4/j$["::IT9nS
%:sWdgR2>tMHrZ9hIgGd0*M:RsC]/EnVSJ.h,63H@+:ueqBpJ#46fSkrQr4hP1YZ5`De`puGRnUmE1,s_(@ND(3a2>(PD&\IA&pAU
%]<9g:Kg:U>Nkh<ZFTa)ZQ`hXE_eb^&Sm]hZ#,2nS!20b+@A)cGMXWmFkQo42H3,#=O.)85!"_Kt\-IsViZ9dN+5e!7?qR.i<<X:O
%90aa."K[Qh`6_TQ!>Fk\E9PVA^u1;dTI[#3U\8LAa?>'R+%[pt.r2Y3E/n?-8d#\:1J/i&'63=r=GVrmE20kf8k^0F$hTTV$<-u!
%mgM1W-^/:'[=Z8L2J$VL\^+XtBO*!qFbmCC`(AGL3$P5D+ND1Ugg^V3Kj)qKI*`ulNOb1-Z9qGtL##):>[>G0f-pB?N"!$9otY?/
%iu*u7[$R43/Dj,0OB%p'KIN"_!'RN!1EC?:7cW"(1_60I#h3$q#fi`G#e/_48O,rgQ5[4D&41(<]`]&Ql(GKd`oGR?E@mc-+<]2S
%^m9d5&Qkn3j/p<t7+r"U7g-("Uf+oe?=VPlTCp!u%4RWZ4ugV5/<($-WZA%.MM=>;*6!nW%jbEd!D\4"#`MQn,9V8M;7?`u1ItIG
%iIN6V5s\/nBYoo]/UR[:F=\#;Ka*j;"p.mT<)j8o*6J.03"#*Y+G=bX@gIE^dG9EFNSo%N>OJ''ER:(t;lhK7VG?d!%JdOHOQF"G
%@?s0/q0Qg*4s(i(V79CZ/5RWJrjWXs'#NTE)km+7ASXb@Fr>jGH6f"Qni%TGR?6Ghc*aX0FrE"-6CWd'%4)LqM%.R&i'GOs#I@\3
%P%g'=28F(3R@'[RG[#J"`3DaOBQt%2k@WBjOcZOReOfhkS.k^Q".]msG))T8`1LWU\Ps.ABR4W?3_*nS?3NkDBW6!j[1-?(X]!t`
%>[4qBh)RaWVh-:T\"5:<[3`%^L_<X.(6:.>\V:(iY0,sH-VFXd-r+JcXaP`#Ak?JVKdc/^#"3pI)#+SLW-o!^CHZ0Y[-Q3nVO;26
%D;_:%q/sW]0"d&u@BKf%^l#eaC<l3:^rX/E&79eP!Hb*%-\d.D1uZB1J4PY([*#kWKkQ:NAKT8mKQ*sSNSXHB`K<ti='=*9C#QCG
%+#5,WL;T,na[$ZDk>#4O*0_lQAud75gN1%r"B+1R&?Bp(bSWcln31Po=bHl!kubjCR^<]bb9Bf#_(+H0F'h@hZ\"nU(L88FCI%/A
%f\d1`SDj+O(-)7Z)9s3s8M^qA.s1$/_Si7R`#R-G=!8,@DM6'SiD#6Zo"_^Ba[;q_J1TekZ$*0!.nI\i?YcYeLqjRXME(9uJ^jMV
%E6E?B>@ueEEFiDRK7Jc/#fKP<!nPp1?)U=l7n^1c12Z_#U4l8)<[^Uj(LOis#^.3YR,As#PKqR;Q9$7e!3CilkEc:VI[;pq$O_Ba
%9*Z?if4'*BPi>;Y.oECT]!cYGXI>6qiR=c[QWN;d0VkX`n'#=<Eg:p(mUBP6^.D!:MMNgZMKboK#T^3dP`Amnc[$&nU@``"bZmRa
%n<M5EK+*Yse1E(D>a7$0lMFaFBhV)JaW]60c:?<3Y@LtFb*D94Cdm]$TKGn_D_e/.6PP*&5j!CH5j'*KO%eQ&;#+;GR3\Ih9.,Sl
%8nper($W]lQF2m$'t2E%=_Sj(QG*`;cf_a,KF1G)Mbo\ghcM20;AWU#E&bEa\Si.cA1%S98Ao*ZF8/s^eg46I^`2a\;:[GmBTr1l
%c<hu0HZVmm8+!Q:C^_!dOr2NJmlAs^pO[X;?5Sd]4obl#/48=^4!WAq0F?@QRp;tDGFZ*)B"fgc2L8dhoZFZ3"%8RY,JN##:e[6W
%MJk=%_D1D[Q>RSZ1&BU9rq"RE+Xa_l/f8&[GTY#U^,H9T0hJ2I=rI`Ee6)X6oqGnEC)&O/qgb]!9n?f&",)#(Lf+8t=lfhN9Z9U+
%9YR8bF4>`uW:jJX'bBnhl7o-T7`\U?'K6PQCG8"XIF1;k+hFgQGe;C!MA?r"QF7&mF@oQd1f2MbjB\)1W%BLj>Ik&QM-aDddRZM4
%>Vn&q)OW"-mGLq6),8]bAQks,)VW6m%V.cfSN#L\@02+IEL;btYKIjrGd@p`V#4Z!QUPl]k,]RMC6hh%DjP9CUg.:SZV-(l>rosI
%?p&D!4V$k.?b*Es@18?/?(!f$/IKfWOV#V-*\[ob#41D=?=1T=<"lYI.8Y^WXjspih/:Y:oN1Q<>\4>rO*mSj\Jo^9*c1ih:A,q@
%Cne@#\%OCoQ)pW1HCZn6ck<WQpYM'$D-P=UC2D@gg6oic^_/H,-$.l]J/aJ='4A7+$+jB@1;Iia$g(ZZUO@<*3cd9%r(KMMhdB`d
%B>n(jNl"[3:-%0F=Vb`o&b[edI1gC1!N"+#Wea/F$WXF`+cf';f8#[]&h\0Z"k$$p9NP7_WrpD(o?D_KMr<%0X2";'oi9#8mraHf
%cah6`R6KeGW1mKtIVUlcD!js-jo-7Fr$6@'0OLYE7s9,,bW"(D@h(=nGItgJ[MC-aXgNGF3W'&V9s-%N<\Jm4hmg+T)e@"/fC.nH
%j%CL4TT"i0#55)$6^b@8*c;>?OL;1mn+H8b=M:H6,(MO7]0EBqW!eK-+^iRWmt,VBADB67V;@fn<9%2H7$S'M]c!@5m0W(9$"8bM
%Dn[T<9WHbY?Qa?9-s=oj3^XMC`6/X43DCqR)]7X*/RrPRFO!H269r!Wj>itH?9-ULm=NO3<4p=L#IFuL]h(=j;g6/TbTg51[ggO&
%rCo7M2b5o!$SJh5$\$Z<mPjL'Q^RXf:*56p1G@Ie6M-:?Y;g4u$IL#4"^qNLV&1kj(d\@W-JtIEPo'3`\>O]ePjiVq6^].deYAEc
%YD/cE,j*['+M3@fjf!b8T!E/?e_gX0e@a*N$\iE;F/r#6$d)O:>"2"Z>3I5D#IF^#+-YSG9A(oOMQu#0SG?=RV%nsGl`^MZDV1Dr
%.WjC:3?_>(2*b"dQhb"Z*J541hJY#[rtd@BKpY.o"hH(#//$h1$A$AdAt*%^$M@^TPG+Z+(kH>pWd]d"782Mm:jYb&;!OMW8ONu&
%[8hdK0!h#EPNu;>A2Zmc)$3n>0hejKH7&k8E]2(]0hd05+H%"u.BX#_E+g<$eg`f4Htm"XY$n:m,XN1:h?IcMSYG#S]H#U^ZYfH*
%0`us7k1LM\f0_>J=tQQ%*q<u^=W>XC1o#R/J43b@Q'n?Rm<rfYD+o/eokKYTTP:VRUR(:aW&9eggOkft*u^>g&Y@04:IgG(a]J43
%PU8E+kA\sf6DdVjoM,InHFN:C)%Ee[S(?W7-ZE#2qk#DfnY)mshr,7n0Ef(u.>\?6l-fI$pWslIri>2&+k"8qm.aO4@As<I!+O__
%%F+I$/7W`e5A/9(/*AK/mjX#t"kT/VVgU/%?:4[]os6CB8-jh!<9&#&qfjg-HVr=DQ`bV9&U&#Ca7.>+=\,I<*HC#CegVD2DpC"=
%#LCo(O=Poa7k^L]Z^.`"hu:i&P4Wp?:JP5gRW9FV\A%l#dpq&T#Q:7?HLB_Y=:#_gk+8B4Cmo2`,=ZX8<N>H*g4K3D*j&2U5INEY
%EU`;?m3Oa,Qd33ZNp?Np9M4%5_=hL_ZO`'d0(dGaosDec["3q:-gA%[Hi[u<3"_;s(DqIkb]VUQ\%8[siM\]EQZ/.?Dd53pDD4D4
%K&uA9_6KV6T!-%^9sVm>d@S-@;n*l\TjD&=KhJe_hp5XP^-G"rGpako8d?o:gm/5Wn9-aor(O3g[$.Gp-X]]<fm,RJk%G)DJ@!19
%ellJ4C!4;KgEPH+a@MCo]B`5-'5GFjkIT:8fb.7pS%KJ;rYk_3<?Wi=`\.85B$&nr.?eKLP+G`9)=71CrD1u:"U`mIke`q,)bcUX
%4VVn6oJDYjRQPFLk6NFX<Y[onX"/=C=).k^gl\X5=[j79/_,Ig&qZiYMUNNNkIHR-Uuc..<TV/M[B(;Of!W*)=phfl#p`%"'%5s<
%pm'/@4FV;=j*EH)l:UIq)hAj?`H,upN<9[;6h)n7mf)QT!YniW#pJMKj&mn/5il&kDT<?n*#\?!?BUJkK<g5:_D$*j52"jhbKe=.
%RDm9sTSKkR=ZK>m3[gpq8tL[LdR_X$gi,V\o_K2#GMkp3E?.VN/;"P])9^LG"KL/XgK?\h]C?oTZ4Bp!NIVlFK"Fi?<=*7.K`VG'
%G'9S<l4-2YGbuk=aZU+E9AG4hOn$1JDuH:mgLTEjT1i9,C2d$bW6f>uc\<rSKZ7aU>lnqf^i9.Ieq0mTb9D2rAq+Nhni-j'i3cgu
%$*.P'$+pJJ8oR/jE%m,aOHN0E'r!7`>T^F3iqJFObUH%F<;O;Xj21F91f=FE(+L:M4<_Sh*'n_E:pZ-HhcL)K(3A+=XC3OYLVbK_
%nG^pZ+\pf`Gu7[RW](mUNlnY^+GBdqf#T$E<<FdG^./eA8as`@jY!Ng?'oFg(a$X\W[s4]a$S?C?.HWsY*M+NVU?o8Q>kuUA1=bi
%=&"l6'9H-rB.enN+]Yq4!al_AK>>>?]Go.AWGM[XAp!=&TS9tZ8h3.Oh6s6N&eG(\1PD!i-kdeX64U^$<2^jgPnA*sl#c`!_o:X3
%8Sol@B##W%AKNgd#,*ko>H*o4,i*@6^)?(_>IMLU%%GRqW[S\Lbf]&)C;H[j%_TYA7MeND$<YFd4"mO=-hQR/C]OVVFGl^X#:3%$
%$Q+-EP`kp//281JePa?>i\k'WPaSMR#c*2fTU#)BPc+\8,o&\a;Ti70)[\1HKp4]C<0%VhMA[kk*$9X@ClokiMup\W++j];-:l5k
%/s6A5"cX4he^jf\AS#=QgQd-TE[FoMM@(XrcIOIafe6ek+ts`D#Krq7E`<e0+f_V2-(,m$F-([@AXDk4.!ZE-dW2^6JsDOo^qQ,d
%X(5%,2"I/=B6YATB9PT6K4\Dh[i,[16m,DJ!&g]bTXCWG$e&!I!)GE/'!!]kd8XB0$"KsunZ&FQ/+.e25-7ej`AF$jY+h!b<Z&8)
%KM6$;Xh]]_p!o-l0;u8Zl1:=!2hlJi64"X`pb[MOpSfaSO*c-UW)tPM\^GT2I0%!X[)OKEOldYf7^J75XX2OQ"!E?JEX>_#,lejf
%b>Y68Xc\:SEW+-cWpV!kpUR/a;VXV_.uod483L(PLep^t"C?+_!s>gD+mg.K:PP0hdl@CM+*\:(FI!kYj^G-%i4uM1KQBT+V#@Nf
%eILPC=qBOj*@kO=Vc:d71bD@%=Z)48!:s,DOP_\#8[[tbO=IbB2GJNH+V9]]BOhU]dYSPJagpIn.i_9&/T+3M(MUudHGH=>6i1ib
%o\Pf,9rFRTg-JbIY.4t/\+,#,>apa.,Tuc4>!?2e)QL636LPALr/_Q,-'^;GQ:de=7T4_K_te_*S#WOpIN2b*5``R/@Wp0%k1ft[
%-dsH9'Mh$)0YEq7T7C&"L4I*""u]I1-''Q.$ti2TFMs/qX;M<(2iS59jff/hCQRPokU`eufW%hoh.YhFbLJ3XYYbI5COU=5pd#48
%;rUp_\mTg#Y"<[?MT8tbM^RkF5[dB5?CI5#JN,I<#+eg83#OleFAd"Fdc=;uTb6#<S*#A1PXQm?O"5??<J+8Efhc6Z;c9k'`^_W8
%C;B*a4\-k_;e<Fu@Yt_!3Os:@;+;0:><t&DQa1,cgb[l_3E3S";N)<Veq=N"/jY4Y&X)I?iorGO6-(fKBuu9!;\R+.`?p_MWJI<(
%&.p9f8Q2E8l"Q"=m3!NdW4<-s)GbH(]l`#W"/\;UFW$c#\<rPo"4f=2oR'.1<>jmY`4pSc6h"(IciAhP$ns"$5Tjh/R&NhbT_1sS
%B*MB\&<O(<!NB1knC=KCjpgU-#uaQTDg5Gb/J<T!4FS22L[[q1Qg/'L+M2\+CX.X/9g]=0oBT_0!"Tt#FIB:+3fKM56P.>h87BQP
%cG:9,1Sn)jeT>#W<uqeUB%VIY(t2RW_/g>mn0aOEohkh?@R[c35FeDokp`BFCMb%nqLsc?4nu)eU]mSf_;$<teYIUiiJn(-gbZK&
%9qd8gLY<5]\mu!IdiD]Gia%ZEX\i./YkZL$AX0YL@,d8)V[LB3+[\49FQ-VZWfmL`+dPf1i7%tW[tbC80rKY9pSDjO-O6o#&ZS4E
%<@ubQA^_(_*"1(u'ko%J-ma6c)@0P7r"[g4Vc%JR%jAcFB41,kq'lhb,s`ZB7]D0+CM4l]JjCWcL,'`.LJ#an<[OlQN`;EmJ-8q!
%hE_&cXtT39$;\X\Noftb=cQSfM@ReY"/JhpM=IsC4!arD8k=S"$KMXRaN+3^ZP&OHZ7]j9WK`<P0h#d6NJ0VDI5WRY@OFRlHH108
%.A&Y]N\Ul3JtuP#rjftI9fW;"4:q*NU7<CP/QdEt)U;`G[G@[(.hmZ<Gl;#+0N9ltb(mim!Z)0@llT=Q>Y8XqE&tje@/;AL\5X6B
%Z@_"WWG@(fUrNc3:6`0A][BY(bQtE9_?(>R&JJrYTh.9OgQ3G0H;I?J.ZopL(r.DAa'0[I-NoE$okl-t1WD[</mWqMre9j!GtGNW
%AWT7HO=ujd;F;W4!hD)UO9JAdW)FHbI$8>4/CCaZ'3%TkHHg>d:L?C+>V%PPquW=;q94I?A.CK=YI,\>lYV&CXQ(5%NM2g#nG%"r
%@u0k/\Q90QP,n[U9R3<'@AHM9b_:QccYtUA>B$d-!`WoX2j3Eo\.e7\1,%XElS;"rgPV$.J@$k0CVe/YfI3:0,n`INm0p2.E6<t3
%i']ZF'%dO_&N[D:XIt9Y%oNj#PTnr9Z4Y'398`cbCr;.#\gB0@2*jh0%.d)#(I*;O@DV7DoUUWR=lrkE8AJtXCkXr#8@_2T=/dMO
%4BF]?J?g*pRG;Q,'EX]XK%d5%AdhSr6Y[XmW"m`?R$,VrMs(C2YI"@k:O=K/fq1U<B2)EehK%TO!h9ugP:L21\#"k2`XB@`1l&mR
%%k_^D+2I3[o%_`Zi+!:l.)Xck/#YbP3?f#Ab]V;aMCd4Q%L)qH]AMgp/NCp*!Njfl4=,uaT"-m?7Tia>""5p+:qJ1R!9k=>eW6GZ
%S`a$umNJM[cqojE!fB"58QgBP0$JUYahVk:$<8@OQFA28-*qmRV&mcO`&'BT_(($KM&V`&]O#)mXJ58LmA+[]%BSYJ5q3Rs7Y$G;
%pS>&EK^fX<+t8d#FG8A$KtEojEfCjY/kX9`9\U4OkV&*^Y=VkkW!?nuC8cHa18L7>lMpbe1d=5-bJ9WdZEGIkF/&60L!&[,RmLnu
%k(+"oRAI@WVj%uHQP(I'<6e]>DAC,KOgL7a<*;BKBZd362[pcj(^ZEjG?1uuT)YP^FS9jr&NjOtT/YMkKMJI2,985e($*@ZI'X88
%+b0c7^nu90!6W(5(H_S1%4iLFE7Ksk5@,Utid5hfRPZX'cN4d]n9Y6O)se"&QUlpIE4(=3#nSZIjo$!sT%*2C^BGP%JfIhV$;,i,
%3\isH6]Z%4f%*014CeurW/cXr-()On!ZdA6\4g:XE'`h;R*a7=;Bta7dec?49=11Q9dt`E!!`Uo0d=si58hmqQdjZ-:385kQ_&uM
%n.g7eR@1nCfOYROdm;nb8h799`=QG<=L!RFIujp;]+nnKoZT"/K_cKqI_qOW\2D(oYmb'Bn9J+bh>,!tQjSs#ri%;NdT-AsDF26B
%]-90PROT#afG5MD?$tYM^s5I"c;mo@U95JNB<fq\a!`r7[q.ssdL3I(N`9a*?=NaFJ/RSOZ@.o4`s0[`)-P8eSJCp@,J$t!=c08&
%T[H8d?UC_mHD3YkXHA</hB/f]EXsJ8nfh=lAOt`s&a^]2CI>;/j-jRB<AE*kNhQU7bRCBWMRWqJJ<\91$B+]S&i(Ji?42>hP`N9_
%A[%*^e,pDOYL$_jKhW)L(seJrXH=T_dLhp$M)Alg*g:6VIC^e2V0>Hi0p+/(]^bAVHNW=V`e9[lh*Zt8#_Z\@lHD?r)Ii'dGXLU&
%:se0m<T%`7+FG/J(QbQM(.2'_OcLq?</n'kaV(GDPdCDnf3#sq&At;=2jq?/oZhHLq.+OpYRl&Hd'tODk(r,,i&Ka2KXJhQ'#P.N
%!f1=e>8SkBTJ7l:J_I@!(/W(2C?$bAN]+c5>Od%A)`'cQ=[k]7>Qbh6bc)0M<MNOV/Emp`F!(k%a()H;r#PGp5dK%C#+e2`UlI^i
%D'BugCF.H7L?cDo*:&>I)!LE=DX/FVAVcGf)/LmN(Q6\[)uE.#o4p9Y1"r5d*R'Q<G=I?``Wq^ThJ?iQEB=A-^B=lbOVZdT35,Th
%KZG!1r#?P#kTHt#/8HA"WtYA.r5bO\OY[tEO!5fD+*#?-2Vs"q)..V^n#j68aKY$8@n;RsLiB(q-ls@=K=9iK<3r;J88X/ZK14N<
%*9um!*L\rc/HuLlU**a581lI@+`GI``HTs#=p)<7CjJo.'"H("m'GY>a5]:I-0L0fj;t4,9=7WLr<,P/"6&i^hh3,E,#n2V@Ch'C
%_$1lH'Gt6LER02q`?P@qBTO(iV=ibu5lPkum(gb483'O8Tp$maLbt29(dg8[3JP.J_&H$O$U1^&b4m#MB;tZ+Epb]9=6s[VLP++6
%47I]5'Sn$P40g*q8_-99@Lo(/B7LI*"75&Ji=c8b:+Wb*#cK#:4]*]-*6X<nV2[oql2msJ8r,(7pS/ok-11ac2UP7m1*M$Qhmggl
%[jc/=b@tNTjnZ>rH^S;t%,7)h2!fM80MnimrI`a/E'R?4AXWKLdHV&3PGT$ED7id'Kg>QdZK5nR7NrM"GYo%lK=DBU.:@;j6'oT_
%;bBM%0\,g<2p-SRo\&n*dj!Nj/ho7\727)LPRj:KBQS$o^'j2EC>'JO"YbG%l?=r`-pG!-4UsSX+L?)+fQe:r<KW^VnPf)t[M39]
%,U[5/,ZN/8_Mis0<YeP3JUp:YP1V[M.5cYqo%8T`$Y1o!"q@&35VV``&@05kbP05PQ;F9pb63De_?I[C2-F2c=;$HukC;m8P:@<X
%Pt"51O89+bB6Jj";?h?mPj4ZI9@43cZY<'I%0"\8?UF;B6n8I*k.maCE[r#0Qls4s$W8!2H#[<f]N=.$WK?\=Y+;"7TqPR)((m$*
%&D%.AG]p<:HNBGU"b>3o%&YC6m]\'co$g#U5Cc-#CF_#NY&V[M4*kI8.mR.dU7qW`eK/.0FbD\ap*Dma&o'p!1&7#smoP4%(u2@V
%]a)[]_oqb]139Pa#J3O2_UV]kXcE_C(<)98OZbJ$_HB1V37NtXUi$DLUI$jTPUCF=r/uR]5YjQ(<A'-9!OE%EYP?UV"[6D6)Cn^I
%NKT4l!1M)gT,9>"_j6Jo*,[b@T+@L1p4Dn0UO*;&o>pR"jqeYu_)14DalUVs[\rDsP'h*`^=e6ngkTXbc#u=0i-@QJlu#9o(OE`X
%o\9YSOn$>P![upW&j8h\"PaPA)=KIeq$Dj.1XfXXKiV<<O@_ga0r5"C795(#Uh:r\PUm^Sb.Cl_#loZ><*cb7#&"_`?4.'E.N+77
%Tb;=k#XcG"h^')l8DF<Hg7SjE6$!$@8()%l`WCV"9:>r2JeIfc7$.b,R;_/SDa6A&M4l.2FW1b[e0'oH64nVCKr>s9l@=qF+@B6[
%'k&<uapk&'##A?2A/26[>qsROEXtnrT<:p/JJ2*@!#d`A\[:`90(p_]/eSF(Mm\2M7uiWI4^I[\5Xd6oRI#)<#u)<,)3+)S?1ATf
%+9oP(3eU6Qr!Ic/J&+h.<'fU?#.]m&AD]B!#7Qd2*ir@NlG2/N@<gf@2/XNrLP;=O%@(qZ)mTH21!rU]JJ,7*+uQdM*X9Gg^8Ql[
%_;PZUN`sLgCBY_F*\mlOMUDV@&?DEI:kT"f#>]/rVoOF:W5Kk(#$!J]B@3A%4s#7J&;51G-,i>p&%+f]32ifK3*@CHgX*Qjip+nP
%Nn\LV#Q[a/ONULX#+@<oS(4H+1\"u_E\GGR<H(*6-GSQM:1Q"S8]=AP,@1_ubQO?IWT`JprOQNnK7h$?"nSG!;Ku>t]tgWPcXj:b
%kuin!##cfVKEsJTr>o,m>q&$On>COYND$S%U;DSf#0<:AI'"W5BV=n86H/@"VJ:pRjj^QAU7*?1<b$`,,9uoUhZdiRcq7%PBu(,n
%R(3]X9I(4(,PPjX'sZuhF1IHg/9F-M7A+bP"Esm;ds9\2q9n8:LlYeGHX2gB$DnE=[r+:>Z,5l0XnYl:W@.Wc&-l%11E?'sSr!Q:
%Gkmjpd=H8;Hod@0RNV*N@"ESM=48*7%r>YX2-j^[qn[TFc\.pm6R?\0cJtc?hGj+e5GL"tIjJlN#LjMjVN^tLa>#ffEE1_?]s,c;
%k6F-b8'UmGi4TIqG=0:ukW2BF:"YhmmP_K.2fJb3C8Q9N'"&PX_.^[mCB.ht"U&<62q9QhKE;c6o\JHa80\G*M-gSQN&4`]8X1pM
%AVCld(ad3HC0nNf^u.bbP!YRm*11S\>qcmapE9#ajJRs$Zpsqh99p\+i[q9tf.6U,YbaHi<8iXa_$D_=a`D;=KQiObK5SJtR2gGc
%YjW-b+*&JL<Dk&L)G),MQ?<ZPfaEp+"iInTcu'6=_L&XA[n6p*:igDTM1,S6s+5J8\>%jAS#\\[YQr$6(k@]V;D(?Umg:GXMHj=M
%79CmDV+M_0i]ABcFX;nM[O0+S\K2)SYu%p/c?L4MRYEa1Z[\*\K>^]]:F$uCn/4P=BgaEbP.'K!Mm?g9'k6NkEjM>\GeNs@lOSPX
%8=hRX_Ri4[.9Z*3A/qGcU/HNI=+P]har#B4Mnl\eP^%./l@s5GZ$IDl*Y%o<H#bi5c'S_<3l'[rdOQ1q.8X0!]dd;p8C9)j'(eWG
%PKObr-VN6O`$kaFVr/#oS$E>Mi*%a^UYJrWpoZsjG..@%m-YhT@lSi:J>Ga`,e2<"&kh\s-]]cj,p31J6:Z:`<nU1O<7bZbKo;K!
%N<!8+VVrYY4mC26e,`sR:Y_(BmCJ5R=(8!g0o?5a]1O1?>T8l=%5&/IbU%SY<V#5&ntnDb/V)c[9"_t65L<?G*<]nBSEDH[jNQ/q
%Q%V\Mm/RlA#Y&-fJY\J5ootD2pB`AO.KlMeOZ+7XFqq#sUjE<9].gE`F9^%QJirP%]X!-AnO^J6:mYQI#R>T`%aThr\(2i0g6;+h
%>[R3-E^;6WW08Ec(/D?)G69@?Cl<^9H2sY`M`S!aeHKnDQ<dk2&8,Bj$8o*)HUCjL]g$5JW(ll"H#+1,MjgiQO4PY@7#6MaRY/^Y
%F[rl9oKNe*UG+ltXrj-?nGZI!@&UoPMsbLTXDn(9K"U5;k(/bqNO$0M#]FBoXMi+[PG/9&=X>7qTI7WRE%,]L-6Xu*+OS5<"ne*H
%Ebg(5/JKM<,+:deKW[cU-iq(eE;rKU$*8YsWmi<-"*hchT.0D)->o?AM7E\![t8*A+8E\[Bp=j\9QS<-fK-/a6VFH]MbVJSi_@V-
%%m9#EpE:r%o'2\'+>0lpT$`G2NS,Us-h@SjJ6*1afW$4S=*;F$-@TUCG#jVV22]S'/Zl4E?!tPj$@cU`L\E`0TktfdfNs(Sdq(]e
%0>Mb6SMf.^O9bk.!qo9?l,-H7V^c1SrZci0jA)u](`AE+RZnn,*-!7i9ncA[I,O.c`1"gN8EaCnJ&K]#fDqk\%_S+E74$o+:]drq
%gc<M.n4_?UQ7SMU.BM;Z\I1\(`bKBr8R+c%/1Ls^!TV1SU/RY_!h)'D:ff4.`JG:ZJ=+[$F:sF'h<>e.M'D#U\>>0R/(&;Z(ihti
%(IQCDWbs[4LN-+DMZc(<P;3D19-]":[bu,N#WIsB=1ka'9EiAL0K'M7@i^bOGqL-&F-t72LdhnRXVr9@Of<lah%U8$N?ARqZH+3,
%J<eAmF3mTXn),NhQO1rl%WLuJ>)*^t*X4ZiH(@PVLkXf&6j#a$6;Omq2qqu>=,UVF&\M^O4EqR]-b&"F+E#Eg5I:TM41A.:OtgA(
%'+#Hl0G;4<PrI'J#-8a-r4qb*`-La<*=<u1<CTB6)i(L$2D2&;f+B+t@#0A'AY3P#TV**sJ%0-L5I!@r).9%`i1C,9TH\Xkktu'7
%(qjnMA[Wd""9/JKW-\TL.%h3?-+8UV!Y%77#QeY@lNnl+at`9Jp]I:-O8_r58mE:#lO0_ZS(:EeJb?mV;<@ocWu')/(/Ib!6jH<1
%@md2oSr^B<eC7s+j(E"PAgPOM"n8QFW=L4NnfS43`u_I_W6G<t^;N`#o`ILI.smCL=WrV'SKcgo5T/XQ['`LR5RJWHCtJu$i[_k$
%Z6BlA.1\uS"`%ib6s4*>M&>&6S6n<"\@Dk<-UVU0J_mZp<d"pFUB?*9bM53J@otpSaM'U40tWa;8R9g"UU*-FoVmD2<FbHqKUIBD
%?qIkdC3DTr%a?@AZ=GFSV(^$IOo1I1kluHMdY,Nm%fYY;U_D#s!H_Dmk*<mE!D`nF32pZFfPJJaLh[ET_/6+bXAr?TL]a-#U>'43
%ma(_)CN8GZ>m*`W\ZH<!a+ug0`9i,PN/Tr\Z\>VE];,kj`'fF8XP<:2ETJ^GS@BeuB2A0:U1(B5:DOn9'Tj=RB,:`1%^fsJQ7/[]
%X*>DYo[%Yngt=Qm(c3e$3V)cJ2PLfB(LCO1PGo[8`j*pf8?->G]N)enI%ie4'_d,V7]PuPf'Rn%ikB&:?[n9br:&nNAW0%_/sN"p
%pr%flB^?nkNuVFkaY%8EMX8bmPXc#tPT[5kbj'bTQe6(-$aIlFUETiNY`K@D#"ik)9]%uWm?Xff:M#%/VoBJ:I9V"(DZY<ibDaYa
%p_Z!A!S=+OMVouWjn(0J*^p<?,uu-0>5HpDa72ud=?)!sPMZ`4VE!WO>])B";Q6'H!5h/Mll1_Q]$.Siaoc1<*@XV16eN0-.*-0Z
%?@u"1r)Z-3(X8&8I(BSOh3.%5%6^"0Mt+1fIfd?!ll-?s.l>qBM&#pI)"BJ7G?hf:eY`OT!%TEo:8gQJ-YN),<PKAOG*'rc*QHL"
%k6'<f+NH!qc9)rpW]DqBOJ]BW=V\a$bW"mL=*W/mTLAqp#Q0Z&(&B08`G'bA`hg7>o!(Y/"Maum@he[[Jk0VrSiC))R/$oZ93Qs7
%!sgDU</ui\K-^I6,T6=0kr9r>[Lo%'h]Tho(E)Y&KA.8,6/Xl_b8&c,Q[85_e8a+`>QaX@=o:Q-cCpK2Tu79PZk3WWY/"(.RE`O,
%S+Y\NK#=25-(22@oIJ%s]CMBs!sCf."9B;ALr\MpIMF)*5YjYrKG$ng2]O*+BeD]Xb\#[c3.o&t&IWQ$7/NUdGqVk8rb7jDq"e9:
%:Ab/=*e`612._sM't@sQQ&0rQ2=&\+cB\WrD'YI""9=*V4ZAN8+;QZ`J'sB]N^';pX!qZ^g:W=n=^="t"rcYTEVj5jYt9CQci_7:
%(mi:rPuJ*E@QrK%mNI26@MGkEH,/$.oX(>P:@$C0L7t_GS</07+Y.h4&YjKkio27D%:X3)[D2N8_Qk=/RMQ><8gkM_S\7TPKqW[s
%"(K<Q]Hl/5K7RS_%!8mf,:gn9D=@hWRf.Vd+b*E!H!tal"r$ujR./faSirXL`Yl(8!J+VmOFjJi;mHLk<@ne.MkYLuYkcMP6cfR2
%*<FV#:I#h&Enqkm0e9LoSS0>7&nCZ8_.VE,!to.,)b?rRPpGEp2-ueFP+o_f906@\o,kJ`01a"[@6=)gps#-<U%Kd#ZoBaDC_76-
%8X\0U-7aXp6&,4eEQJ3Zc@W9bQn8gKkRXqBMBQ;6\rYc7*d9gt-uM'b90i;Ti%aS7J&"MBeA\3NKW>%2WrA;FZ6/e+ZNsn!b?RWL
%$SdPYO/37On5Smc"nNEdN?i^*Cj1KL8m7,U,Lku:`*16N31@O$0Q3_^fI`)F`uLjq-k1\aii:dhEss-MJk0'NWn3%loQQrjPVm#+
%$:^NdTMg,o@gY\H+B?!6(lg^P@4O=a/9(.u8i`mHAd70U2fK>33U<KE.,Q,24t\9AI3ikQO?\Zi2$$-V;7"f,Au[GnX;-!=C@Y(H
%Nk1<_0M%HN1uWEZ:5C*sOtug_:.tU(;@r,uK2p_^dn4GEAC@J+."+m)/XkaG%6+M%hRa6#!>Fu8"g9<Z#1g00BLJfj`JNMG%=[q,
%V2:n"Yq)bk-uU61XAL;U;KJ.'2kV;Z'HI;]3Vnsa%#R\TL(DVPq%Y8-8gFg+91Qlc.]'.Q74./s-i?JQDsRM</9Q.EZ8R$S<(9+_
%`UJkuOjmQ4"(l>u"W.n/&l'5-6k&<Bl%oi,*'k1U2:V=Nq';).d8b-J#A!G5Ul^<ETTCSCAlJ<L+pL$MH]I&-HkoH3.S@X1C"`W\
%KrO0;a_M6k^rW&SZRK\4<F:X,<0f<[;bq)<?:r%36dCHb;U5QF;FRBOls#gQSumNB3%)2&[(I-#B%(S0k*;l%NXp"J9/\c"X5k&F
%*;W4>h']XU'@]UaC<6,X2d)Y!]V1faVdJt_"!7a!C=E\"P\_@;XlR`C$J[JV2"%[^+*PRZp!!r"32%Ro&LS8",-d)@FE!q8#X-*_
%but[O2G($<7Ka/mY`U^`@ToU;="ToW.W\bqPBPhsR"Vp]]M"(#S'D=j&C4>C%jr%uL6kRki/GdM/0s1'4,/pHljuU3aXQ(9`qGcC
%1KljOQH5XQC;%bmU,L%XJ#i3ikl8nC(,m0,'MPumo.d#thEi]C4g#,r_BZ/A(jF8EVqh=M:6hB@WaF1LQ*6@e2Eh&nS1T))HJJ2O
%!2lISUVT"VaSLPk?d-Sn+E?0%^`eIgW+N!s8<#WtfcmruZal`YT$6cMJ./BH(oa6bGHV*e$N[MR90lg@i6os6K)XNq7mIkQ9;F9m
%!YZ[_Bp6Gk2itmg+OF$U7L&LL5=l_!J_)`fG.6s?OBjf7!s?#t%H`h)=_!q$448![YW[aEcR,0nc'Hr8#CXP>:S7fCpquM8$,!Z\
%W*S[MTEa`^p%G;FKT=aZ5j^:Ps0AUYYdZbuj0[gqX2<R(878!gG*t"_[sm-Oi',5YTY34u<%rfbqXKR?J*D1q.%aWDVa[C6ZdkrC
%gKP>2]d^"ne$tWI3E`NmCJQ((FfO/,^80W^#I[*`GHX*9K[e])&lNAX(/ef7K[a/6$)t6k,c#>HA_&hXHIcp7[c`b1fn<;5g!Y3D
%YW\3lkj3SuC+-u;c;^>)_1[3*A`<5^1P%#L5V>i_PHm%R_"r#XqTK<+dc;h4DX!,L*g$638pNYrl+g&i3#!\D96i"=(:4-&8(od$
%`rZZU"2Po#?eU*!rtJB8@QfBX:)AjN'id5=))pd'MA)ns00OOS/]f5;Sr"#1d2JPX7/_;L)M#<nkpN#_cDG+pLQ!K,`k7R64=nrf
%g6rYXe!aYT=M*o'mYflj'b!4-m)+I>]p*uCU>Wi(^g21b8E)LgKtSi)!,hulXd5SZDk<laHQ7t)-qi!s#.9[q)Tt`d+#mF,e+DV4
%IMV;KaXCD\4m^/Cdo-#r_d79"V6,`R+mDm.E7$m]Lt`j8o_XC;QNYhSc@V4=/o_ghKosVG]e0M1Un'X\oOgPpX.Y.^+Ao8P0.&Z?
%4GX*c=SDiXI(d(`f0;k8j0itTm.U?4\06R(*XH43EpJAI:f@5I<-5]_'m-=L&Zk>YH[<?Ag.Y4FA9Ceh#V5$%n/4=te*Z-*hnjID
%EmaV\e6up(MZ@/P=%_1M:c=uGZ5&l_[ft+S2j@XL#>b;jQC%h1]6fRK<D>4bM!5Ie*GYZ3lK8o<bV4,pcfB+m1O(o[K%7KdL<-iV
%=-MS>mCd2hd8Su8(Hn>pPD*q<Y^kC-(p9">fO"!?LMUPN"oS_\S:XKm>1:M>0okj8V,od1psmbNW%?>o(e:ap*/RoX#cHI`!BaDa
%p63h^"``DhR:$*/m$n0afVk]LSNob\Z9)]'9-2bkP9M.;H?6oaRkHG*B72Zq1"lt"ck:td#-J3:Cc>Z56P%'"@J,po3HC+@r5`B&
%0Gdj;e7!%u1o0Xu+H<F5OW6/g:5+0OCk4.Ymp<9Fpps&Qn/K/WGf_"=>MKGH%8t*Lp$!]H.8#M7&m[#uHOWt2-%1,deq0]F!VO4L
%Lh36T/[:Mh]%=EO$MG,"-`Qqb>a.\]6US!EJL*6_;Y6mMUYCWKO.gq9%idD9%Qs>5-cRms(TSjc6BriJ.+@_]CgVO;l_lF=NXJP!
%PS/"l+Bth'K%*ZQR`r)FVX29=E3F1#'k/`Z>d:'CRUqpQlX]\mKPjEVKq;8+cF(Sc(u4>ck$[\l.nZDE:#PG5FH2'u:($?uH[<5)
%^rR'J#A<6.H(Bj_N[]tAlaoMCXa"):cm25.!PA_r9`J<7WV2Q/!8K%f[77a(ed\BrPAMf]DE]+4X!CR.<@*'GJR+>N9Si#@:)kOf
%'m3bb+QUG6RD=HR7qROm"q&a;0d5jVN$>USDl>*q-;Z!SB4CPnK)/$A\^PV<[>m!k@ku-*g:GeQ[n'&$ob*SD[Ajkrk7apH4bb)g
%NF&gl:,ATl.;Uq<2n=.NJs`72`86B;hk7GKEeraQkcdK-pRr%NKFXi?/X\[7.)Al^FNfgiH+IB[6!9+n$G8>U5P9SK9k"Ea>jdhK
%@d&W;//G(`50Zi;YL_e+OeJkH>!ln1-1QS@F[iN].@qBJ.Z<Ss0pr&01cWnJiU^W7k"UFhR3SA;_Q63E-n#p/B_.l-6N4EEa)!3E
%$]Ne9['87(9/c+)7"&?PF:A(moot@kWY>\(Q^-fe4\oV'au0kFU[6*68`4]GD#RD2q[$uPoW_!B$W/R9k;I[lH:'$4"rA`+V<8Jl
%!?TVcSEFDjP.;mEV=u:t?jf];?+/+(1?>6"G7cqs"CWDTIEfJES.V1J4tB<s_h$:"@bFk[Ta,M77)X1lV/hD@,r/^MFL`DX8^'.s
%8a[]05=@.;CQ?AJPF0FO*1kXL0uc4'cUoi6j@E6DjLeE1S@X?X)g4dX2,rk<2elf))VoJ5q,%J;<LT9oQC.r3[)b'*'^ACo!"sG[
%JL?D-N4VR'=D=?q,InZMR\k@>.3A"4d<h4nbTP?cNTn?]S1],5'jJ-`.[JJR_.@P,:uc'o&loZ(-F@RE!BH9-Ar5c(NRU*l=%;9W
%#u]qC+^)DAlq.70jC^?"&VJ86`5EsdXfW_pF%#%,;f7\KR=nEB]LXXu<:ke'drY=I8gT^57a0hZjILJ)-il>nBp6>Tap<^E%kR$0
%"2cs#ip7SG!iqhdPj1.I_&7B5A.-5E8I%[c7r=j2cIoMX7g8!s@4f%E7[Yn?FMG2!W8O18JsttX"0M:-1q*a.-jP`p?f#YhKa_)c
%$=672gm[j,jb^n"$gV[4q4nHMM'<HsjU+j&+Ng#R7Y/'+/L=79`#in-pUSstTXf>Op71E%JJ,ia;Z`ek<=S1e_qr7t/8S7p!-Y+B
%YnMqa_BZ<o;Hd1l]1?&/Md_T'KboHq<33/16d-LPE/Ff%Gg5&9DB]9)TDhC`h`Jt^(J0Br>-^+P)P2gok[VL&i8@`e<IO-OJHn^3
%K+]][Z3]<uFd9dQpElGsnr8oOl5mHu1n10+KbRkIMsq@@OZY&)\#O/>HU&B7iblD,AWZAJ>;<0%j4:k((5@d_9ugF8=_EJ94['.e
%W\`IUB2kF`#@Ts$rnuA.-Ql^"*3Rdnp&`[V-*A(/S#s3_L-upP?Jq=%LZYcf\:)eO_1U2q+WYoBP'pMTRcc$0iBVdS@74WD0Ul(B
%>V2pk,11_78-Kb7'@b[rD$Hm>PMhag'H%IC5fqFU=#*A7$cb_*9^8]u7jS_0()C&9/gs<@kSUMm\rsbD%.gG+.`)C$k9)9r6=TZ2
%juhY9k?Ngthbic*41b?TmV]-N=@O,:-$i8QFq+U,U!A%NX10_2$Njc',!C=-6m>+1jg%tkpGEjVTi`Qc"&X<Aj=Zp4eq0'1,`7I+
%R)]Y6G[^YJrKNP#[CbAj"5R=fE9S`#9L3>m_>u8KH\.'=C,3qjc=dM?OS4987]n_o<fSmX[5oB[@X+_MOGH"H-LJo#R_^ieOR?,:
%OfVN=c4F6i>hU"ir6n]?1+[-)'&;Xulk;C\.(?d^WfY+JVo(^>Jnpk)D3&^q*d*[TZP`gK=V\k)(mU0Z].eXVSOU'1Q;/ZWL]"Q6
%lW-PbH]/*[e;J'1>/]7Q'XG^^lB'A[$s]Op]PRuF>-"D'kKU+h[8!"HOm-eu2#a]I^[rmI+e`K7Tte"qb,PVWO$PG_^VE3acsHQ]
%4J/m?:"orN+JR>-LDTB1FI,$HpZ)S(R2P#eM5_j_&LD"]X>#-A8_#:EG@NE"V.j<S]Zun^6n@o^ilD<6M?+7OP)CpB;WRl]1WVPd
%0!@rGb0*PZKengdX,LD,-=j=mf31DO@`9G+itFi^0qb'd\O%r=Gml<5?)_L''nL$2&8\YME2#9n`Dn/>Hm-HCHgjcpRlWrb5n/\T
%@'6V3;:gD0aTCVq.@hS@4&hG<hA[n?-GXc_e,i)39@"!X9s1l.dK[c664=MRgF'-WOW1G:ljY[i]lg.GR*O^BZZU<u*#K>%p*Yn,
%.S;+]kb&nh..&r0o[B^XWM![X12q&Vh+7tSkh:j).9<=s-n*lTROU4^QD:EG62k5fQ3)W>V'K]hT0ckXp!+JkMT.Ub\iiZ<#ptDH
%#d=euW#`3#[DHI+3L8,Q!5$a:@u=gU7L(c==Bl@VT(X;EJLXOCWA_+o$"i7e0X4.?R9LKqJSU-/Vc(Xj6"YT,^7\LBq]D/f/I@XR
%^nS$udmc8MDd8ElJrM;(JaQA69@Ogrh75.VBqU>$&3\*+.)5mXah#moW0/8e?P^k/iiQEd\Z*T3V0V)jD@nQHI#s`g9qs2*1_:U8
%=OiSs!5]Lg,1K1;S4"Ai91R4/`q.@P0V!Zpk,f"C^BD\AhAf1V7lBQi_(cXlJAP/F+hBriZ[pU=V#D!QWSfAR(T\+?F\4u]\n*l.
%PA1>3['/LG0&uqhq`RetO9%<AEGR)E@jrFap0aAil1CW20UO^jNPm5ma[!$E?r4=.7gY#cK8(3V[fuabAWTFf&<dsO[-e`4(b!H\
%gP$Oe3g(E.5dl7G,$0=sl3JJ.8O_RWS<m>\fi;8]_ZXIB.\*U]8DAeO)!K[QmJVYDl#":ciZ:u/H:'=f/LaL?>*(rp0!^VV>(Jil
%]B]]=<M0mod*WN)PYi;`#V&2mmVc8>P\e\$1TqY*ge-Sajb7@WK`T6J6-3_/A.E8dN%I#,>&G`.-H1<=p#PS$e.I;Z<t9AoAm<AG
%!'4#74$e%Z;-b[AQBJ<YK)WHI#^ECP@"\6!'i&I@2B%g=C?4$8"+eY@,t8OhJRk.JTk2+Z_VQ#b<&YFF,@tlE?Nq^Lf0pXp(K'*Q
%=/nt1$=8/A8?a:dZ^Ta'[&[S.i9(?$#Mi%3_ke'4+Bgd^ilt"sD1oXA`eCC>)i`6!>A;@c65@i_,u,!?c/PMV^#n:s)LL3(2R"C]
%8$@\GT,#]U;D*(['.I[lAlQAILsfn-B6!tp=QFsN)dKs\[;nKlWfeh\iWg9k=LiU:Ar8,[:':G\C8Y``e-T2K%@+qa5f\F^Q(S+2
%&#PK5&Y.WJ(bd86>cki?+D4:(d,NW,U_?<42GbJ1B%hf_/:"s!*dF%So,$Y*Pa;0U$J/u,(O[M3'>ZkCN!/H#R0I$L7+==s/MW/N
%)&%>SA]ZN3`2n\((mO.)+u!R4$QhS5^65B+m!El4=__2k$Hf29a4.-q0An8#&QtP28!%(<,q`hhiU)WCa)`[1cfmaL4E=.2q@`[#
%Q$hN((02[HH.V?r`h%^?EnLS^Ca=^82?b*Aj\#[j3$VBB.mB^JJq2P)FUjAEP&FeufRHDN20jnY!_gf,&8Me-Z%0uT-*ALp"A[b"
%"Ze>LC(E'YVru&u-bFA(8DnoODdO;PT]d[$lK&d2QI\.djhHDrXX"d7oe%LI2:kA739*`0Y$arZJC"li!hOI01j-L\K>:]N!H5Ua
%b`f;HH9:a+$f(#dR"2$5gH^"..s[&W>NH1$Z+q.WCL+oR*r'$9-UF&!lI)suYc+o\jHrlP!acQp?0H8q8Cf'Oe4;cPHs?7J_NR6=
%+lM;d_Uo!F@B#==]P<p3@CYhmYDZum$r8;l[c=H<kSN3F5K7.AX^1-bU#1+!gP'^Ial<Xea1.g4G[X4&;lBQ@Yg4">Ju9E$rhr?n
%G?GY1B36p#(OEl9f"?lL(aB2:HG+3CH>J6`2L:'4TP`MN7XI&hI1rDmdVVQ@T?f+$S0@Qe/n(;'@@?_ocr-jEoN^P1>ImP<V,&u"
%?Uu2A!VG?[Zi+,"h>O,)rPpE=$qJ!Arl\OGp[(8LZb/.YNrQi(p"O$SkcOkH^U>rQR]sg&S+6LQnROhp3T$7K0:_[pLjiVO:T(gc
%kMq1B]A)-5mVFep3-(dHUXAJ^nc$hQ,u$%Oiloa/#9H(]R#[4sb<E_=VLZ*6T8fao;sJ/n""PI`gj+9S&!!SARfCL%</&P%Rbl`;
%j2+jHQaFF=2faC1g74*D%5jG`\&USBj8Gb#SYP^;CI`gG>$jMN)t/hG-Bl7P8?7a7F3(k8,rV5f7Mg?0Mqd.AIlb/^JFI.+68Rom
%l?mat/_B,T2ts"VA?5+"ao;#%FEnhjC]2A"^-*F-d!"GoB<nTBolY7rFoEBC\\,7%a4'R.ShFoDiTd!$q.r*GeVrpUkI]cV\=]7S
%rPqE(jD2K4"/Ef8]>F>#>D[hI>ob"NRI%kUT$O!':B(7Tph@>Poek7kenk21IrZA<l/Za6VrP\4?0Z2eD>W<'mYpmPZ/Z4eeO6Cj
%eE%uQW]pC_/^!Jqr7-`Y%bbCO73rERSh,ar\k$]D!34E'`NbQ7?o3f^+;uKaK3Nt$A:+jVkN0m9nKkR2k-A!G%'?:>\2[N:F$]n.
%l8&>t5$#%f]#'a%.O*1m!p)n)X@+u#O$L1)J#VH8CGp%%oqE(%iWX`lq-B?G$X<r9F&@q_7QKmGeDU?C04STZZ[c42h<;Wf7*cCC
%6mdDrM!,J\)eZhKBqri`8C=ff*mQ#T%QsQ!jPA#4j,?NQ(/rV`dR66a=@;//>S$jM["=)GB*iX;=?u'MPJjBXbU8mpC7X#r96_CY
%;htb@mH*03oS4.qh@M.rEl&O:Rf4jG!H9X5PgIS457on*r-qf+s6OHsr'uN</.RX]ms5h9eYo9:p+jZXQAM"U?@4IWj-gAPhod'*
%nX?cVQ&Z:ZD-u`#M>a4.j2sM:\h)h?:PGctE9tM#o@TfV2W"f54Oq$hqN_P1@Mqt^=+;K>hd%5D5=Db9"e)GurqP%rRL1j(h3loC
%-3ZfiJ5t]29F*W2mVJ=n^G!M-G:-kDX.K]T$8Rg8F8.7tZ^BbpR\A!q..K8ApEHq+lV"dEPK/T<bl;kdAp0B60Dq[5r^&/(rd3?-
%5-j0aNbmCc:tQZtZ^.f$U<,#[NnX>`f%EY%g;D&trV.pJ@[%*&0?M0c:?i.eqPJq7%cmER!+Lfm/9dg%GVt8?`7#CHY$Q,eN@]uM
%aCt[tUVE7OO=5Ln,-$@3KG3d6:FBe,-eH#"C.5o,')r5;C$<#s)XeY/T2#mRqS.qqn'?I?a1joOL\#*]GgGEF_qgl?gor3o`?df-
%LPos&8%[(ogAKt,D!qA6[>iuka9\,g2;$_,;%j"<+KEP#4s'\S$52)h?i77ZN-8bP.:W!Fr8[F&:\&fJEVZr9gQV$XHmbL9r!FJ6
%*fLlaVE)=s.&L)!JMAO57[HV`rSQhOp5^LVilnPnoGjG%rbuoFfjt-Fc47]EO)UP_bOLdS\&S$7_8T`K:A/o2e7u7D[+sZ*lcReB
%H<<<"jf9Lt>eUW)J!o/`F5rHc7Ldhp:7lGb4p:g!@n8o_,dS(hi69bbq`Dj17uJ/Z!rI0'V_@,qlq]ipF6u2Um:2LkrJ4bO8^uHX
%e<]p"dA5@u_<"L#.Y>DL[!^t'ks_c>C\i4FrfQK:r+l7%]aB-h^*FI\GBT]'3hQBMA2<"%]R]Ur(3R@iqs&G#+At+,ojXtYd(&]'
%IP0L5"ma$^qbkJnDGS:B>RmN&81Q2\(N8X^NQsmm&'*%rS03EE`k0\.r3nc'(OB_g<)UDTCYl]]Dr-pADp=c\k07-%;VrBsg=PMi
%H0l]5TbI8q,k/Prh>CWV35mSj1$/qe)'Cr9H&^J22^IPqan]9h3D*N4d%&S4SFD9q]V.?(B[1=+%QM5rLlQg,=hOgWZ0i(CGscW/
%OIS7GcE!^#Y'`TXhU%cO2!9iVk7s)K.oRPlmuMpBZ?m;Sp&=`_q!AM8cJ@B%kL2W/7.B.IH<)Z<'l<ICS8\cP6A+4<GlR;33q0mU
%/Cf`!+gLYO[jo1q0R=Vto(@>LWk\%G=MClc%IjsR6Z1^_gDM*O^HF]pC]<hS'Q/)\.,:8O&*'9`l`E[p'S.3nSgIF&hh%EhdJ2#T
%Iq`I1YO"mY[6*\5DUd4eprs<BpYNIUIrEq_jr]'Mht>f$h0JdBFnsG-^"r>TGFDb/]6.ranJ_D+q.B2*jo9`5H\3QV!.smPk0*T"
%W4t2sc6E?r]J93Q/(g0"n,Ml*D8Qh_j6F1GCn&:hpZj3:/bg^gf2mH<>NkV03<&ArT9$](+$T)\#l]#7dA+hWdGcNa@kp5onfe?L
%jnXED<_2NF%qclB-_i>-Z[]QfngA,9s1V<Mo8a#*>hM^hbEXGo#+@OKnN:-[8YePX\H&nk%e?L;s4RZ4buKjkZPc%IeM?Wuo^=;k
%U!"rf?DZ9VaTG"VSr@kYL?MO.m)R'ZW7Ae"WK8m?:M04u?>)Wr:$+qkjtI,!RdTXORqtf[kL:dAL3LZ/Vt(]kAd@@5J^C87N-FG<
%9VNsUI!mp1T?IQ$_Ud%kGH''7WEK3m<\o4mY5dtgp"B?*q=\WCCNO35qXjG(g1Mm3hL+tZE,l(iF\hktQMn<1figP/(=cHM1RL<d
%4;.ZOK'Z3UpFbr.K6QmqrM,"s;PoV'<t6aOU_;P'WXgsf6@g<\Y=93"g?aZKUm[<&`H\M(%QQWpKogr(C<HcWs4V-6?Vf;1RlP&k
%TK8#us7n*jjWBEsf8og$O,pCB)Y`aQKc_;o!KFjEl'<H3&Mej5X?;cHq^]4l^E[rA@s]uBE]cjWlDr>27^i&!1*RTaJ2bE=:QjY@
%dHR:fo@Kkgh1J)i+qe/%[<DQ7mbu!(r1*c?HD\7AO!,Sm5NTh8B#;=So$c=DiUt=\j!R?Fp^atu^e54K.WdR35+8jP[jTXU[Lnu$
%r)2(qInHqmKl8_d-;``#'.YZbHC&:?#bS4"A3Sj7Ho.>]%2_ClVpVpBp(E*;lf,;G5\]2>I*6d^%bmqk2g[Hnrp\Ld!;Kk1`r!&k
%]XL'dfUX"j_D_sJpM\<"pQ+#b3"EPVgCr,3G!)B;NK5CsY>-.b-^2Hah^Egks0c+=m!dP.DN)&cAgF6S7H_-aPPOpJ3t_C-F*E*h
%guH'o4l..GEB\Y)NATs.K@'KK/4&/ShL@SD]/@/TSW/E3ilBeLiub\J@Q`V8mn6HSQ>NiE?(hnVcGN.d:]:tO#*pX;?0/B8s4?DY
%GXEY2:l%%Ei_NC,2n6$#m[#*/J[-,9$-&IRptg,t4rqM0`TZ1Gn7CYWbBQJbQ9D.Wc39H*TkqL:Rj[<9Ia-Zr2eBD&8VVT`Yl*rR
%/2)WfS5:%"Db)V^.^P"=M6f.Ad)(7eIJi!mj8PJkI.ZIon`'4\K,5_]m!?aaT6TmQ$uA$Z"Y8/bpEH-P\qqd$mQ@(_)U9_Z[FFn'
%]-!GIp,0Dms#cQa]PI,pg!T6]kk=Gqek=,4pV1S<59m;po).jfjY(;WGU*&,jL]DDVI*"$h"[VhhmDLbc,`*K63#Y$?iDflr5C=-
%DZ+`?G&qBIqW+GH^R-C^NH7)*qt>Wf_uKG(B$.Aig2SP%p?!&rgJ`K.CBrEFqKngslf@m:3kEc>*SHh7OU]tE5KVYe??pt3f&!nT
%^GM)EAV_U]e3hnk%s?5BmCood?0JD,RL@eaqsk_*?M9A^?K-tEHXk2R?hRmb@)m'EU8CGVKi)/lf>E*rUH^hhr$8FZ17A-jhu*Mr
%<![tl!rqZSfbgKJb$ZqbWH:QGXd%@Nfg'u1<Ti_lF\r$@7>a:n7#Lt!&1P3<N>0pYUrTgVmQiD]YY0K(2@YE<rDbDsRu?mXFOFed
%NXrsDEbk6C>gQ,V>$brs'Uu:eO/BPdW@H^GZX@u<3UL+%_0FYR:B9V`ChE1S;JR.uH.lsmodCFC@p[YOXg\"qU[dtCX4+Sis8Gl@
%k)GPuT1<khCsR=7[\hA@)rog_WM0/g?+6h`h2:(^8\SV[7k\cBi]Wg)8(QMR-f]cj-jX.F<"$HeiC.H-!eo^'#\ZrJ+6@tomr(F)
%6Y=Bp:C^r10AhZe9#IaXEQluLgrLJ(gbI#6:uHI"6,p)VRd%6+=;G3^S]31"/[POp%@/]Db++Y-5Cu<sKWk@?j&l!#Gb8T/N^i?p
%_kWHujY[VXhA@I:R[`#12L/l8]"5]Wcil!T8VGm\^UC06CTKU4abR&uj_N-p2kNc5=*G19B(H&lp\`Vh.HXf^S3Ce>XmG%p]-'#R
%feNdr,??6dI66=E6S/bVD"VMAV6+PD*9tu^[<0p(Z)^kYg@*>G&^T"=B%<-kk.bluNJk9aR-YWqn=0F,,HsCT!;<92Jc2PMnCaF3
%%W5!Z%k%\'a+oG^j8IAjl1'o>Q*"XOOEIf*A'2[32h$,EoY527p@iK,hlUgX!I4%?<20Q'XBsU*s%hc]IZ!Xbnau$2cEQ*Wh)guN
%L*`V7b)R](rmR0'-ITB_F*#j"k'Ll&RYTMgGLknH3/p9.<<.@?m;2gR4FXNHs*/+/iE%Ar0&7FA-V$Z?RaeIAmc;[nF??ol4IV=>
%<utV^TDnLjfS%N\\$h(CHQEi.kJ-.t';`h5?WS72rYCY/`rBGri+h4688hi7LYmM?+$Z+<37uRhcN'@BeaY^!&&6hOKHHuegVJ./
%o2k),&5mN5h!,LkXqpq(S;F]3lnq!^!:i8=Hg?li#j<OoS&"p>D=?l;iZWF_HB`#D`\#qDl$P`IPG+LN1ai4$DG@#"dIM7XoCjW]
%.<+W/"<A7p]9fC7?J2D@T?%$-#pf`7YC&7/p.)QGX@91@cC4?Z)02oNl!G$<4p.&dT*@0O#er^Re<5!7cia-MYcIS6jrNqDPdL$n
%,H?HtYr8_IN\pcRJWhfsIQDf$Jn\*0dF4'H9K0sV$4"r$i;+=tZK%_kqA?Xd)?E%64kWCdL5>/@_1]Qm-^O-urXgHf/*U8B#/_No
%(\aEhnM?_46^ceA%:1Be0q1rKiM''o\s5.JH^oOZIur-c65$TT1^E4XaTl2)p.;YUBP^]5<(t.QVANH/03nhZKFY#g.mkDE\G_fX
%N_'MN:D_tKqd2BNZR-^%k<l/nNopXGh:*'[?,ib-#a2W[q<m^`qbO+q>U"k>is>+TcUd4Yo(tN<Gdh@DcHNXp.XI7:kMuN]P7Ejc
%6<'dTLiqlo3hMs6.;7%RT<_T>T:h68r73F.LNaY0062?k<<[mNR#=%6"S;9(NX*>@B":)e3"Y4c8N5'KqssHI=%;,o]`iNKK[3k>
%(T`W:EDG_R)J-7b4.dP[DF]!1cLLlW]H\eGcta/?Sc<<-'DH,\%ri4bqR_m;5<P2EiUDWTjfR_;n_W]Z.Jl]=n`(G/U6mm[cbDMq
%Or.T_gc[Xa9"Nnf8*^_iqIhnoe36SSH$emcmD$^5Lj,!]468;&+$^XOXsAHo\]2QYjt,Y!s7bm]o:u)ME28tc@;PJ[Dfm69hAWPe
%nlD>Sn#_-`bau**X^5c!\$FfS6b:;D1Fi]#@+INsh,0)Pa)/-L`mEnZBn[q@h1N=N$Ms;<o=_9Z'Y=/@"<KYj65PWsH[^+GICqMl
%5IqbedKk>I;#h`0^gAmk$N^;(B(K4<Fn'D5hq?uN=j5<Dp87_l`<uMN4H31+HLKg3K4e\)4g7AmZ?H6EdIRJ9q;PSj\&6\IRiIDZ
%XT%gt0Rn<_cc5S4nQ(nB-BK\:24;SP0p,PN+.#p,m3fNpSbZf'>'2P\CH=Y:1Y=`Pio#:\mGjm/>risX'G#EM00&86=BfFtnCccs
%B.)%"r;6AH&*)=`?=(u:T=Xt/N[68gk^`0C;m(.&dcoHAlb1U;?^G3d+30B*D#5XeBd[fPIXEhVfA2TY%,T_.4C6TWE?utbE[u/L
%Z%71+(Rd#>jl=@=go&brC7Kan3nnWKkkDjc2*IJtDZ@DA;I%V?g$sH:EWn"jYOUV`GN.\O3Y-*Q.4NF*FVTY1jR\S%A\<RF#I!0^
%Se!L>GKT9#d_[JP=.<%$SkJrdZ]k-LpOlJ0T88P>[FuJtHEQ^.b-Tr/i7@6Cnn=MV7n5N$]8n]!j!5TZe*:_V`r8#*YI?SWE.=4P
%qeTWAZWfnr0L:dGdp0LnbXck0OgdD9(i><-+!6Oc:I_g*#KI'Tbf2;RbpS:1q6S3,mc6T&UMDs'8)p`-l0aZF6=3`qdNP(,G^d"W
%)p`^tgU$-\4u/nDZHFURI8%Y8dl#uSkYg*^er/;:C^qgNc0'%Tj/kL<cu7OPBkW#g;@ge;OLLk&&U/Fgl8Xe/-Mu\Z%`Sa;H2MgR
%G_u]C+g`[Y0=8<9Hus=T1qJYm;Kr/!/P!8t)!I)G10*Y8D^L68:AUc"iIYIgBK%gg+&1bk-RcqbDuFcB$;Iid^W5r6@bLRL5Z<-E
%Q]:e`UC9NB$>G;=DIlR6Gr3[>PMRl'\!hOEEWSPend]hE]2KbHG7V<i4fgiiS<e!I_0BT?h6s^1UUB-WRI6iE6]p3:@e<3h50&C.
%cR+b=FL3osNq^"!/tt_smS'M0a%(,N2J:e).BNL[)[qp!D&oN/RGYO.C7G6P(\D>ooDep5VnP=M4btKqMQ-Wo/+kmI['sV;:C`&(
%baqPk#G</&l&-Da@N@mXF3:A8W$+q^n7(goe(N9C>L1F+-`"DBkj?@bcMVXH<'*7JU"=1p^H]nbQOp.J8lg,&m1H'h^ZG"bp.9,\
%gDc2rkB,<-s8"qbX4agBe:29h44lPWWQ!hQI;I4je?dU*0^aT0Z[E*K3TREXA]&N:%'bm:%Q06,5_fo^@R8IgYA'qi>IO"s+;u42
%&tFIRYuRTKSVGgUcu&Yj]JGsO:?Z\4i+A%^>XPDhgqtAdc7NtA#P\5%oo';:gn-\MK6R9W,EAn7ckTHE\R>,pB9VSC_&htcXWAO%
%*A1P;[+UigbTG(BPo?)([G-W;Q`qrl)uk0Ol0@,Mrq(1'kg:mMjem#]cU=$s1d@ELSA+MM8dB&L(:9*tA$XRQq'k%\1I">"2"OX&
%DU5tV#LF;jY-%5A.CqmaH0.#0;VQiF,Ob%bR[lG54C?BQ)dJ@Z>.)ntAa`;6_=NtNjhh3?>Q6V93WbB&P?ZJ1ok8Q\oGU*?6ZlC7
%d]!,i$oQe2n#RR!R6gYeTj%\[%_&qAQX3O(F>2MdEaXX$*jlq_-`bQgg[N<?1k]JIq.&f/Bd;kVkS\n/#ID>('9E]m`PXpeaNMQI
%Aol%tE=s%*:Zne$Jo-WGdF-&*XrbfIQJEg"RSgq1XGa$&&k;ss[W[`*`Ws3?FA[*ab4q(43_eA^#q2td[ocG=[,oToE;/o%M>Ma@
%0OI7_D^jg6X!]^I;fH3XhbVq.V=%O8h9"_([`XU`eAIM3[bBPqFL(jS<)'pW$pRA\62kC3]=`!,02,J"b2nVhpEDF%4)So"?T`me
%VZp:hfOfmYMO)Z6f]j/[_r9"-RiNL8//]/UnXul?i\"^[\?=:HCIbQ_>_^A5Xn5jZ"8Y8ON\!;$BT2^c6g^%]KA'p,eiQ0"_4%_P
%Ab,(W!o'G"$fd5-:*K`1a@a_g-d^auag.W)iR?V885/cMSk/j2JRF8[JQ7.VgU\!-MgULU>81:I]6.b.ZR\;M<']4E$I4U]k!tX]
%!#0V"PsG9#Q]e6Q4sRJ^6D6k5,)sX^H_e`mdLpHOMBJEQbNa:-l"a_&4"Z#thejGK&aQNS\D:%NS49U`>qFGNR9Td%5>/SGdI'3`
%5MuR7$m($AXke6l;o#S3E<o.V8>#Nn,2[TZdGOZq,dGV"K/AKI>^Srllqa/`p2FbXhZ*[:s3ltloGF"n\=u2SKndQp^n+b32]dE(
%gRi=IREtRR=(f;:PH.aQY\`EfFKl<b$?ug58NK5NZon]X].MS1i&`J3>QHS>9)]MXT+FC8Flm2"DShqm:/?m.U9K"a\=b-I<PGuO
%[l)jLZ+b[&Ni^kg%SK!r75)eB;0KXBlp!l038Z,\5-3$%'j`"naVT0a]6c6I%ipC=i=Pa,-bm_%DCfEJV=d<j?9_,li1j4E+-%Kf
%e^qG1b8u03#jt93g$V$ahV6a+mnRG0#8o2jMXk4n6o9pNp%p<.n5A4Ff0^AGDJ$b1E?/PeZhQW<no'kQ#mi1SXh5DQm]H$,k4na?
%"o`O=WL$uJ[(ePM9jHGAW=#XfeZE1S$Ed=!&75+iF'Ui_c?F[\@u$l("^h")HQn"Z?KcDjec+pIj)IPnQ7o\+q_,J1p;\hn<;?+)
%=5*JMZd9M94gHeLm*9Jq&a.+s]Q0`9EoEq*1HN'3mC_Y3Il%)M6EXqR7F0h30L<bYf#J#+Lu(;F6R"qt1i4JPEn[CHmT5]i)g*_E
%-#^/TLaTjlRjTV!>E*Qn,ji'E-W7]qpLtDT.c2dmX1W,<_`\`Dm-ZNm3DS$(Z*-=Yp!hk$a3"f@nZ./4%q^jjS7IR>iVSR:O)e]G
%a>6db<IaAA^015Z-h%<EV2-,T?[dY:8+D?S1n8[IUX/k\]3cOapt+8%^]&!FdDgn/m+N9U^@KJCo(/?cIMRBO`QmSeV>']RYEs/I
%c5pj#\p=4i`jq.Z.QXep5/4RLZ*;]PC@1`NNOrP&3dB$H+8t&WEL9O&IbgB"DfNS9LMM*o^H]KA^\.A`5Pja(HY[!gE:'4lr3Pqm
%Qd^;rD-cu1S+"qZ52J4//q7d,eQ:Y]3PKZZrVFhNYcEgKqt/g[o$G)Ih++)%3H@*C36Wfuo)^`DFDL:(K5\O$ip5arZhjMG5HJbH
%IOss,@BRk)ris!0j2V&0)kX9]\ihmFcOMRTEY(aN^9VY6rUe^BX2eRp^D;9IGi.CC0Xisss6a5m*cQJnrMtth/ss&Y?QC.7=<*(2
%?iTH/;=*MIj/]4>T6rDdQWJA=leao$inaoahPKqC\2E-QE:j/)g;a`<]m.MGCu=B8I[tmAT3jdp)^kRRNP_dpFt)h1jX[gl+iNfQ
%hDi)ZJ!iHJhg[T\n>#:(qLtF#-f84@qpD=NrKI&0ip`.3\(TDp55Xp+qrOM7r$G2%?G1[TYl:r0s*a^Ppt#liMOjM1?Ytl#oDHE`
%5C\H`!iE@1NZX$`W_5:"=WJLTQZp4#>WAb@rVF_3L.70?bibUg4$Pqdn'-WRHW]/\5F6<C9-4Y'HMG=shlJ@G[<ckBr5&>I3,0G1
%\(pPkcQ@RE++H4/lJ!8mPja!L0\m]e[Fi"[obTuj`aRlBrge9-k8-<&hW48,0?(r+Dsn*qqW57`hD\e)]K8+<Qe1V1*#5G<J!98\
%TABG\7l;BkD-^p!m18f\O$DBP;(q[ip&'74e'qWYUTT!77YP7VTf.fZ]\H^5I*`b=WqIJT//n3?r5"Tq]*h+,@dM"P]-\$:)42$$
%o3ZDh)YNs=mel1=LI_=(gk3LgSkO$G7Km6g"+Re/iNn$K]=0dWl:72=QTeV-CA$Z*c[YlPk4#>2rVOQ';g\t?2RM8K2]d`uDsuAK
%6_bD9%j#O<(tHCmhUDFAeiTYD0J`.-q"!HPmgY?SA[1sFjF"I%\ALi*I/H!cH@P%(B88_O[f#c1H>hfYf7&1[d9>t!T+mc'`PAFE
%oL?MXRJGUt'cTXp<k<)&r9;7AB2fe(QQ)OaD#CSPe>pPI+$O@m8%nH]94.TTs7Z0EW-9kDi8Ank0A!u1p#M,`(6&+=8oa%QKsuh-
%rVHBOgRir-E'B7"LWKb7pVHjhKqmLMo%gKRMamZN\G,[4-c;]s](b2<hf!o4aesd7]m&trgC$Nbp[HA8Nu!_$ZhWMNYHOg#@5Z`R
%hgBV7i@j(OGVD,BK:>YT/0+>lqpj!3Jl."%dTJ[lS?<8RpY4R8p22dr)]\P0NKsHrUX%c/o?k**.R%YDXo5uD[_):ai2H=X.rV'W
%ik`dF33$3M?Cp24i?=8njXtX-:E8N6O.5/?EFA[[BBQJ-Qb-DuqVe8.)"k5\W3P7;r[i&=^XsS"E;':/4R1>W+2QX;Q[A/`nP9s7
%e1::<NAb)?G^fGdBBN[P0Dabo`epkj'@Rg62XU).[lk2u\bUQJ6PhsN.)2UFa1Zh6rTj0Un':+VXaM&Z8p@E/[E2*]p^1D4pN`rk
%]>QAKkEinem;2@JZcTCpl'7fu+8Y]$Y(-KN0=+;=^X=?4?,-E1ft4`Wo-_NM?f*qOphM.n=5RBSCHR:E5?`P487s[QD%\l=Hu0qI
%bR^>sh-]oK]`#$f^P5rO0)_;hm@up`5J6s\_U%Nqj'OuPq!4Ass2XN#?\Pi>r+Q+O]C>F:XdbA(0DtM*gY5ra(]7HDJ,f?mh]M-\
%4o4*o:$;-:5M?jtooXOs;YSeFYO:a1r:SpsO.OYGYPh2miOu@Ok8&OG_p;C;ICeq"?f1`,]K>bdCt`et[goPor;>eBHf_kn^[=8@
%q!=>9^W+OpmW+RNXl&%e>CQ:LKthNoDr')Oo]uD;hS8UPLJ'PmrG-3+CeY[org!H[D6rHX[<)&t$^VWI>'7Ngp?@@<n4VptGAd.F
%GJ?6;S:=gOrM9&Nh-[qpE%V*tr:i13QL@B">@72F*OsCiK3o\$5CRVhoIF^LIb%bR(\$aGo.3gi^3s^HA9dmQ0CD""rm'6R]C5]K
%e8"C=2`p-/nbf<Z5.WL2r&2AVp)MD.quDT1,u^H5((&a+&&5hpc@(*5p(-=M^A#gAF!!X%\U3cB:D]&M:U_Ml5$^C^o(Bo#0/qa;
%]_7o.;o`UUIhX3]fi.ogBHEk_rh2J&ZKHjdj5JD3j"E#,R('8Jp!Gjd/FNJM[Fs);,.>57]PTn.o[[YV-QcZA%kf&]4$UhV%_&4>
%WNUq:egt`sm68.hrmUfZgI4DFleU;k;`dg=/8G%?H_6gtS_0cgkL?PhdTX//iP?tSI!=IRIX$`nn(ldtApg&tpikYih`aJq+5GLP
%I4XdBg"TVYoMp>0S$+.^rq40Qf#!JHa--(Kpfp#ZKWq:4[*uFpC\o'i=&o&>+V/6YU.ekGoG7>5n!Dp:qf2MjO"TjL\okjhkVo]O
%F<051l]\uq2Z*7C(]JpXhQ/5QVHY!&J&gJ3/5VJC#tj)$K[;3^J-mL&-j\7[Z&eTshc5q*,Z'&rem@6XTD1N-KN'mGp=Ggjfc2&k
%h3N@k*1n@\\9g3AZS8!mRJT9kJj-%GY::ltH6NmGoK[8:/F*utf_rUS@.#q/1V6oZk#H..BMC1NQ][6hp3#]AB*TlF4l>GN$dJm]
%fbPfK+&+Xu5I]PS[B=_&'6VDdE5iD:/Lm0Is8K9!:RcG+:AOuD/hX<WmqV[Sii&>p+QL?V'j:b2JW])Bk,?ShC6sXLY0k8aLjf+M
%oC_UhT+0.6PA<3@W]#LB-ZZZANk1Daq\d`296=U4!"'FH?\Dmr8eno^$/sW"r'+Sis$R3%g9)MEPDV9Fd7Xq0XYZBhhLkV^*,q2b
%[.*/12VrIl*P"t/?0gip6+1YD:fHjdaMu*0@C"k'Q[@ugkg,Zu>$#Y[.,KP;Rm4slnod^5.Q*S4jo(XpGO-D:$uPLBC65dB^js;,
%TS:b>)o9T36;-,FBH_S_5B,iMi3+&a86aaMs)cMG]q._A3"4lu-E&[]LZ[sMC:FRfE@-JI(""B&b$nIg_0b^#!XWPC)>pJ?$YCDB
%.LQI3=8DWCdAC?EaM$\/HJpmV_276Q91[5^GbK"W"r&U4%JM0=N9"/B?s6_%cl_72jX\-7'SKQ<GV3)-Jqr5sGW*?hHGM^S$kch@
%*Rm%.o1'k:dt.-AeEj7pdEBr0NPX$!h=5t9*8Je,^'.[;,!+@mLZ#+?DVRAX_dHc^h##tTHRMbA\S[!\o]sI47GL7^HArW$Y>_lh
%](SsS]@GHARs7*.Y-i;JIHu@E4RSMhe&dGn_@()ND98'EE9Ok_$"VpD42lJ.Y.]stik,i/7jObDmq&\M0k7kZqt&L7i>1O_8YD[b
%gr;rtfm2E/X.Iq=lEPABUU"U5B^Np79r"8HV[6jK/9=d''E'KS.'s^5=9"f+0Q:2:ghE=H'/477C3*::Su9$>GA9l'B0oQJ&6%NT
%:%?:-1S2(NRq<E.'BqAD%SqPF?l5/ugc2%+%#G'Di:Jm=cURRS1MR8`b3=g6f,K#^(S$]&%uN7:b*4J^_BLCbd!:MI1JG#\Q;%ar
%O4A%\(XNpuf*Q$C/Kp$Jb7elC,LO2e;22T,nFKp\=T)ENH+7S%J''Y+^W/N&off-6op/6E+$`2G=1'q1HfCm"RZKS5iQ>K[fcCrU
%O9DBOGZt.D$1INPF'tB1YM:(l,)Tjs-Xt)AARaj7mt2PK_M<1d1/L*kcjFKJ@suGDk3L%VZ\dHUIPqchlUTR[KK#uW4f.@-6P\u=
%ViKjqf^:^HlEalcUZr[+_rAs(pTi40+NU8&\W8BK6KdQMo![`/bHp_ghVREKfhJ;T"#^ih\^e$U_^uL:-WP-Ap3TFU(Ic(=g7V^a
%b5fN1E:]fYH]$6>`EuUI+fN\Q;B8cl%X;mpUI:XUFt"u#oB72pDH[C*PMhk]H-sREGgj5>X$N5@gu<;s_;%(Nh`8pc&4NblX38*(
%S<JCp>2?3/F6]oNc%ufDX%s+]`F-pS@tVf*jG(11_EH)C.,;l@Bn@MbLrlDnFoK'o)]@q14[a3MUbZ;Nr0f7'r[9t_K1>elpr<'#
%=gT2W(joO.,pK<bF`7/(JedbX/`2l,`jU72FIj:54!Y)2-b)73XQU:M?l5WI]>LKJ2/?I%i'UE_b6+Sd,!4sNmd/kH:7hg9C1ujS
%(J1_N3JUA_ka`Wq31g>g#Vh4;7oF(UrPEQ@RnSCMV/#r]2cdK>0I#Hs,-T`IH\e&[k_J;BP.%g$T(3[.bT0BDS%=6^W:7Bhl)>!E
%7W#Wu]HC!3m<-=VkMVUHV77;uG=Vc_n+j8fhrU`CBl^E3fp`cQo;UN7F51!C,)498$q6\T<o=UW)]pD9VkrKte%JbBME*u-L-b\l
%[u-.6JQ79[dZpea#PnRia\n8>,#cnS:+I)_K&iNBF[D\nr<#*nd</DdJsK?^\tnhPBj;0"_j\91i0Cu=<Pl:dnBZ)''1fO*2T9r-
%X]+$`Dmpp>TXAKW__t4X1nR.mWRb??-!5O).faXZhZ%^Tk9LR/St),;g>U=Kknem!3fq.G5$W59>BYa5eY&6UIAqS:<EoTeL2LH-
%oj,G`3Xs>,Hqs;d='b[/]kpMY&Y'FBb(,mE.+KXRSq\bM+an^B<=ZQ"Y:_us//(#5\J*R3mT^n-dX8nWJQ"XC[p_8bE@r@XO9>M)
%mKs]S'X5[=f,=<8_h5=SVVU?uAj6R-X,r%>BdX'>H6mI-:\d1'V5],CqL;#P?b+00Y2nVFk@q,?Vg1kL9!kC*ZdclWmnW@Jpc`q@
%:50`a]i)iJ!B!`dVu^mu/kJAF?k-&Xl[b1_dV0jDL?6dKhN@3O$"bOt1i?\)YQFc<&6b'J-3Rt,,1).fW*8EA(h(V'3B7UuU>.Lu
%&F?<I]>,[5Qi7_W:.PP6*-sEeOuG$EABbr[C!K)S,P<._$((3*oLUA:GOB"/8/?cBHD"$$2K0luK@!FgBce86"`soA1>n)-7b>ar
%qOtaL%C^7:08?>MJ12s1'WPjRGW.&JriYn)C@3&sEOEn0S@Ke4%[&c$7Li^bB<G&o1W[Mp4`rHq(H%!.q36&'HCqdE7O3LjW=c2@
%,Z"NpR1i/,R&dBQ3XtjX)09#$,W2&WCkT\<cJ4K&D"&bDqk#K4bseD7I26df%i7lRNnLcKP13l7DDb"f(%F84$U64=qXX6bSLIs#
%7S2n>5K%AsE'9rodZi5obsnn4<_F7XP13#no8/-FP58[06rHNl3`mbiU^"/P4(Zl:FtKo/)5S(Bm;u;="\3VX`Co'DBliL!NUaSF
%a&lX*A"uO1cuO'HcTGmB_%'D,E-qYKpM"pYiCT[8R0XL[j!*RT"\s+>S?,mO59W=8\g6h[Jmf-6rLL*rIR98$-+XF@kZ2?E.T@p_
%>Y$HNJsE\mV%'Hr@l]",Hsd-4'+(Onl\q-S,2oD5KULdMGKN=*e*;oB\)On_(LK_n;"/G):q_o;p`E.YK%oHOWHrXH,<CWVEri<4
%ERGeGQjo*7;P=J;E_KFhW9Cn_lAuHVB1:C$LF((`?<%KD8gj\:XRnqtB4gmVm/mb!ESXd(Rger6mU@Hb6+Vu:Y1`L@h1U8?n1t9#
%^bZ6&%dRB<ai;YIRN8e7,Ij0n7#6$NcUP4afJe*>PJ+YBkT@8;_Rgn7"cA"_=7a[Of!u5l7H#1ZHk-V<Tf[[Y!.I\n`Uc.]>h/0#
%2so+i[:g<8\]oT]EN;7C\fVWI7f>;6>F<.i.hA6kHSJT3@D4IO?3ft#"06c3@_FP[N_#bj6LSg#;<QLUWL9Ii07N,4Q%]PP>4CO]
%`MNqp7M-0QZ1pI!'6M6(bPK?6"`J;XK)9a`+C?)fr.YFu?_.8,S%-=I5%`>]@SG-PSpZMnUU)>*fg-9Q'n-*elX4P$0Dk[5_`1mT
%N3"dcp&o/D,ISU!YE[J>U#HV2*n)trbY/VX!*2ZPB@I05PoZ.]6'OIq.!,.)9nJ9m"b5-`FF:gg^mDO9:<2!S<rApTphXkGW*W!2
%3Quqng+ORP$ekHjRT3@q0""S=BMmMGQ)O&bKQS?//*5oe1a"4V]kZS0%m2L)ZdUb+Wn)fn5)kcRS/l&s#Iq$3J-30977N3o<W,Bi
%oc>%hAAU\L+"E3FkX?(7Y$+nOH0Kh[i^'Q7HLa+:8.Z^W,?GVf&a:dmnIp8jk&h_4Ugk]9T@uXh%(D3$6,a3aMB[&bF9LrSA.R5#
%>M&PK`SIi$*u`1i`T(iAQR\Ig_g1.cl?DBX=?r9Tp`@)rOMj#-"L@LP'@nk'?aK'!c1X57e+C\&1_T^p+9pF,F:t;Wm]mG`<B)A]
%5X*K#:*j4[]9&%hRWeVg\CI[(NB%X0Dt8ulC#*=^P&%.bR5-%l;UVhF0Z/DE58+Y36,k$CT\AchEHQ/!S;X:ne"7%$?JkAsQ.;MF
%&-6?)XaqW6k<oa+$,d07%/(qhKR4FUMSK:2@O[hIqODm"?k0N[&2ps2?gEs6#AqPg.\'D^TlI.Eg"@?;UW_!GFQF_&B7m,,l8ort
%njRk$eB5iKEi*)><=5J!:SXm_s3Z$41%e`3DOQ7,qJ)?%YE0@9DXs5*gsD6^9YJ%eii5\m&X'`mpKd>c9eMl&/?Vl-So;C4P"N9`
%8SNe9Y>,M4]Io,\,ZK:S+FuX%ZZEB$a+3@a2".BIBe!0Wfd?DFV3Lo@D]24X2eLP.\<*YeBi2ea?-bmkIDi_HSs+Ur>'!l&@7@7X
%8Y(s[['3X@`gfGtmK=>f)r_ce:)Kih8B'!GV^W&E;h]MJ;shFa^$SL]('0sT-Z/N$k\SJ<iZfKlZ+GKXb>d*[P_&c$_XX^.]o"7`
%+&m]R(_9?6m3rkidG*?]X$@Zp5TPE:lesWIZb%BLqAa^AMY4l,ke_=GTmslce\n7edRZf)*e@4!#WNu\LPJDbES35D:gLU`W51oF
%m\*;tJLMfp>h!-9C>%mkMd:4@#;OU$&'U7/d)J'<draDenB0342jOU9i1d\X^Tn3aGn;O2Bd]!Np^h9_\K%O*d+AU8e+$n,&>F"E
%^'kDPVfd9r.lSgbQ^^Q:BboqN(AEU7)NH)lM5e1dd_IotYt,-u`C1GKq>O$"-;VgJ/9k^/+"-Xd]37S%'tQ=E<9MY/,?4a\eu[G1
%dYB/!SXDF=\nQ@9S[OmsD4t-c1g#,PEZF8fEKkVZ3IYDZ2")62e&"[8`QU1kB`u+k-L7WX8lq@Jl8rN7&2oI.ho<7D&EW1Sl=-Ws
%ar%p^l\^(X,Y0R_i+h<31hK0M)PXTu.!5rB0"o:PJQ"Xc)ua<;O=,%uQU7-#<?6X`Z-+hn"JHp)ioa7/Y2Tn<r8q*r.srX,pfLP3
%F2K!WO2!&#c#+*,Yr.)b.24)#W!d:i8GJdH/-pYZ@)]*t_CQ"@0YI0Q9lN7?T,58nOQJ(D_"AX(%EKfZCk]+H".,A.otX0lJV$f5
%D&/M`H2)%-9%E]f'o9XWn'=sc9H!on_cY0OOQ1jWje`TfqS4JYOl2:QX$0h%8oo^!+:rPC-UABt+EWZqPbo%G<^`UW@A;6G!/O01
%KaUo*9gE1T,f0^u1!-4\&/nth:H9drs3VE4a`Z3JT%nl=3hr_\";^dnrf8`i/KpmW'I6II^q)hfoq<&i]\7NH?&]t%JuW0YfLFi!
%'cL-'M?T[q3#p8B[+!hRn1>[Q5/.H$@8t]<.B.O:UXcMu^1a=<#.C<;Q/ahU[4rr78V!(89'T3q#A.#.<)QBXc+trjOjme%*q>ZC
%adkL?WD/7:R\t,TB1hGVB*uLU)^MCI/PehNdR<tT8l?nKJ3GM6fK%cN)W(j(4dI^TYdHtH[?PfC9'VIsINYZ1C?,q;I6!F)5h&.2
%%3?PL1iL7_"erF1@s%f+`Lg@N>l^Y03J=0n!2AHillR2EP[P"D.dnBG"UK(PW7XAbqo"C7K+$naWg3AdLKfJ):i:MCGccOG6A"K]
%pSTMklV(K9Qun=>$IZ_IG"i,Lg)+^I4cuJ#537Xf)I>aK\Ae/0iY5A5GX?_d!$7A.IpEQOPL`r7!J_&5>B":B"^W!Qjd=+9P/1=P
%XKU'Ee07jq`go<)YAudZk2(l!]P[>r&;5'_+I'JHL,$<XmLRk1hMrp#4L;T-U9ce;hcuqe\"^2f.gV)Pm]C^DVBoKB\[S<>pPIFj
%h:u4]224$`<cn%iXRd@T]i?#I)rKFT0fq)5<LS7rjdj*DC9Gt>>;84jF)-/EDae;W?5G<,\[S<>2bJ_76?@(aW$^.pr!L]^i?T\>
%]g_[JZ-BuDdR`N52mU!'mR6.MYYL2?hJ*'_M8F=BF)S26*LK^6c+S,5m9<7pnTiBm(%3q!<ZaJ=Pi4IneqYfrC[QV>?F\Nn2tt=H
%;Th.K+3Eie,sg)DhACO/QT"S=fgBn+2g07\gc^=k_5mQlHVmgYD2(`!?pF!@4RfYH/7WY93'N':2`aX.JK2^LoI4k3cU!S$^rDYM
%l=[Rg3=["[jgio,Nh<^n``*%@^rA#7YB%^(,LUikOQ.1!@aF0lj>[?[>]\B>oPnT\`_CgoDBfNS*5]]i)@`80+NO".+YQ0B@sHq=
%_aO:@E=CL0jEdDW*66u^g8i%[NoRTq^Bcj&Ef`oGp^tb?a"'q0.94?U:?8p<GdUr>a3Fl*3NhO]/jPGtDPTBk@EdDp</aO4X,j8(
%`sl]gO+SFmcp196H`FE7iu#"?=X`9-*54=I>]-[7LE+@e:!J'!*QW4/fXUqMl610f!s,Nm4/`fQNWC(XSZ$C\K,hp^N@WG&c9dP`
%^M,_@SL7k+-gqKK*#_1`.kKqkOQ.1!&lX/'7ue\:8M+$B@cTL$nGbi9phABj/@uiRGG<;V`*TKJYoob!3/i)%m5^1;Ud*FLr%P,=
%,"T<]O"r/G?FUZufl6k"K"j#La!F&U^$#1D-R*=cDSe"3GYu@u<TWok_Ac.q3EWLW]mcF&F8TL34G%d`IXs:;Jbg:FM\2#V;"Akr
%NK2^'?O%E2lr#?!8Wq(!9%QG:RktK!)N8:KESD@]AlnQ1/"tXWCmpK"G*;sG)DTV*-JW'iQ_E)D)-ti]Z^Yp&3*_JU2uVo-16XG+
%G*V-aCS9?T!n^9`"DnjAh'<&h6^Th#*&P:lgs1BFd-N,<bpYD1b(i/&_1deZ5D\<*#L.^bX*td?4#SeT1,QU*9D*%5p7kcj`hD'[
%\uI0MNFpe*Sd(tCYt<k/1qUVmE\0-F@HRMgd-O4u)?uX9m^B_GRU&[&=$s<`rdt`"\,adVSn)7hRb`XSS.`>Og2k[.d+<Qi/`(_/
%4+7h<7;-in6/uJ9FJIMLn">snA/(K';`OnKm@4AM:)/7g4ITQnb@*5rh*=Ro%#h5d;:LGbdtq[<GWDp\AiD.hNa2n7DUL.&CF#A)
%,XAU%YtN0/JS$iH;On%7c&T<LW@m.rCEOt<h)bh:joRBO\p)M?2#@SO4%-F@Kq?I\)QC0V0Fl?FJt:*81:3$0Z^]TBZBqJD*CmFX
%0UqC$fhqI\$(lnPBQfNkpas"X>L,R@S'J*MV%_+&baDo_RN8En!hfKABQbZ#jdOHEd-N*aq2(-Wb.?!e3.VeHd-PLZe.p?s/.$",
%S;fkARj;rh>Yk)3B_E+NJ5L!'I0TT%B_Fg^i)S.j-om+hZsO?g%eBj'$==^2Ar!E!!:AB*Z`==3$qIWs!\;opa>;30D!mrs^6;u=
%G**/C4JD)7fhWph)h_f^l)LA!2O`Ht;*XG-Rf.3+NhG&KCu#4UQX:-20#H0_(UtB(?$m-!g9m%.icALplQOkUXMu[L](d6^k'G*k
%&HOHD%UK7J0#H0cE!>9alf.8)ZF89f,M+Z$s-Fq]Q,*DM+kKKlrs_8sMZ@d2&R5dU0#H0CH#jGU3[Z'd1Dn!@*cbQ9(jRq&.`cbW
%b^3i^lUoFa9$$Z-&(G``lNT6Y4GI**#Iej\ErC6@=2U-c,&I4J$t=&6]"$Z#J!uM@FgWLc.j3HoPK42'Y)>%);](RROR&oYP[VXU
%If!)!*`kV0Mqc(geujU05=?8o"hBY]T6;Z(?'^dq4lj0]*;^YqoqRq:`Z`r0#)eI,Y)BOW;lRGH+kJS1buj&<#[>>A<'D,/Y*G_p
%0QLG5s#cP,.`caPY>'o.%u):[`B5Lb_Rg_,?$eG`,1f99q>mE1M-N9>fbfQN<u#Mj,M/!INIf/n&[lTHfk<6*^Z93Q1d"!7'OH`'
%(Cscq+tsG9/fm!0Y[7dKIM,[r%!#WkX^)CHN`Z+o2_@8,+5KYJK7R7<1aXfr\H'P:Bc"sLG.1t]e(<J%[@kbJApL00`OP"o6k)C]
%o`H`B_.o<!+Ss1,26V3$-O>Upr$b9glb\r/DOO=:WRdqTfB#!*Bnp8Zoi)op/PadEf/4p6+SgSRl?'Vd]I)MsOuoVQ<B=QjEYDM/
%XYU=3BuS6Ik4Q4i<"+ZbY4Wnd#d.0F&ZAh(g3,a(7W5[#J:bY.a!0`BJDBJl*_o?>i.7!9nl'9>49lN^0V'le;hFc"WFQQUVXg;M
%;\h4gPUCKh[85jifB##(7MX4LY^$rXYEEpL=m'lm6:,(=!S&4)%W^jrHYCjk=aX`jO5u16m\.($"/5CcP0^B,&.J`8or$"CDYmCD
%VFkakG'4:J(V#I+EBk7`T%dgRPm#B'4Y.N/%^B\d'*l<,%^,SPQu"Lrr8LF4fa/8>f*QHQ7WjkGU+GoZF4J[.<3j\mK%@P6-bWFK
%X?[GW-IU$:K@'H&S&gI><>k-UOD=2s%:@VrFCo!mL?CIVC,qOoCX+r?BMAc9Sk@bT(&?7Gp2uSr3q5Ue8UjLGp80/&L2<;]^o^n0
%\m<0D;D[8h7>94%,b80Y.4hI/6-e787G-imR-9b@!-.Zk.>Lfd!uDu`5*>sJiOUKt=I#dmi]'.eY[L#VC5u_nn\jp:)(['7Lr><'
%>r1Z1Z[fQ3rYeF^`Fj<>rqsR26G[NmBp:TC/CpV=PM!;^U?[`:Bu*.$j`gOa]fB(O_!Wt>de!lW2/+VHDpU"ifT`6X@D22h34+G+
%&UK/8&E]l:T7d=c^RA`(oZ+o/'HJCt4KW`u?E&W56*ECS#tU4iETECbE*3GAR*Yon[+(Wqk6G"<i5C_$_J2hSSJ`C[eF`R;?p"E>
%^b(k)"da@n<L#%kB>N5,<la1)EY:?g&pKj[?Rbs#Ldm>Sb<fSrmpWn3hEXX1Bt,]PV8Wpb/sIud@jqkeSm/RC#>A+]1VnV.$"8"C
%6h;$]^g9&Ydo-.tpC*)<W90UH?d4M33aYC.cF@//Yp42&7Q.\Q+.T1AU(l=A0!KDCML?M#LmrY1n&:P;[*kSrNPa.-im2UCW5YPE
%WrB)W?Y]J7=qafYYDV!b'Y[HqGbRfE3XT)=>&l&D8_k..odSIK.B25)N_=+Mo&eEL_=<2Y8SS^L!$hU#$]$%,9aHY=1r)<XG>;(7
%X,t-=T'+aLJ9V7J3HX"08I^705Z2*'gRZ!2&5n!W;X:*bVit+/1aM`+%c'$>;BIqC@0"oU.B1-7><'Wl6;en.:$8mZ`Wjmabc$TI
%8VQK'>Pr2S4^kiQn?F]O(Ppdab?iuG"-Q1$s1]A9NDpb]*?@<WmZj6qVf8$%)hn.ZL08IY"rG(kf;nZQ5Kq1GKL8>cKbFYPStBtj
%nXM9XOj?Ll0#TKGp"-1;&FspMdsj'o/p&c?7%+U#6E9-/?/US+WonMr?!A3*l?*AH]LMEtCt2`T'5>NBeZ>T'MF&`$5Ske;TZ?%+
%Kc%tu/3eBdj]HF_4&Ogm>KF'e(^^qc(%l;OL_5-g*7,rF!TLbVE%fDZm*IgtP.r79ML8[qT+iIMNC>EG6!l\P;gE!qedB`97\l<@
%Y3g\De:&tWB+<*6Yqc<'SWqG2T#Km3LKV\8[k6\K[0W9#RHJa1_SieL*jEMiNNq(@1As`9D$Uur=pr3fW=]5>=\Zr*[66oqkJM2D
%Fe<MLD6s/'<U!BQF.=6[ZIR3SfTKjeCfBr:n"SAuqrs5j$p(k)"n-4+$&6"::Vm]6lL";q@P7$6As0-?/_tk0HJ<,jd!%^hNUm&/
%C[DTib'tM,T5f.BrY[hJPpVJ]jS:t=pX8Q79@Lm^D8']F]MJEkO.>&"nW@hF^UoQaQ"AJ`Rt>)"cI_]+F4[YPD`3/NZXl!sH1--i
%?SVFnH1^*T31k$/^Y<<[8dstkdMIsK2Od[QC3K5i:M,3Y/=`um6e]TU;FqtZCbrf\c0EuKX#tlK2Y3/[Zi<Waf"&J<4V'],E[478
%DJ&VKh[W]^Sooh2f'dQ+PpoRg:sFi9j^>48-CD_^lr5D@ToqFPSgG:D[4[,\^5//IMh`2j59NjCPk_npV;q"A!t2TQVuGuHgV!#?
%1qm/&J"-(Kn/2XEDEjJX-['2gnD$(+GFe#934>LJWf:9RIaBJg*[915+BTFk-C`k#$GuP,c@jg*L9h8aA%hkn0%t+j'5AuQXnf7U
%To[HA<kRr7[J(Uqe4WU$_D9Y58(YGa+pn;ek0m\g(#F6\eREAJ>[n)N"#3ZtLj&q0_dAJ]P:6!M`*sP/Hj)$+E*h9_$-o:tHdUT=
%g<5acn)uKQZg6org,H5]8(R$QC3Rl[pSS0qj!_c/0sd>X<6]<a[1A<JBm0O-hTa?.-N\MQOfUM!n$>Ag/;.=NC'T,r<1sEm?Yn/o
%IK<L)[XiSW5R`!#StG`?a_'QWQ`KZmXK2:)58uBrb%sY!hiNc?r6t!+q6gAU4fj#nP@<'hjikG\o&/Je"UsT7^`t6=+8N1bkO7<`
%;9MQbb[efnB6q8a%o%FMe7<OZb)SqMNc_At!uO;&ZpRlZO4`o=d[Q`rL2r%ccT_BBI7?+apNs4.#euJ%Q)>%5f\9fCoNOpX/",km
%^cgGKj/IeqROZ(2i+bU*r@n#FXN;gf8cZ/@-0V>3$S.<,r+NY1T7_5JB\pPj@2D+3`pN#2K3J30]A_LJn2)5dT>0S1<?lF7eAKT-
%`n4;o5<X/(<EMO@GQ=NshSC"Nl"R=AU))u^!59(7Pg#Q!\'[D9j:&[e@ORr7"!Ve&RI&BqQnc5<%.dnW.g:._IMJASaouBd[cMZS
%lQKA3k5fSding)`Q-HOFYiCHjQ1?*fo,EbW7CIRBJERGIqNf5sgi(][j0'KN!Iq8C]?HVR0[AR#mR#o9,;(Yu=MXQqIOFNogG?9c
%Tb)XLp2>&HOLC%=`F_O4LW[)Ts4@@/IFepo3OXa)"CHf=De+8WgX&mfm72>Ao92LN_:=&bfU;*`H^&O&?-_A&[+!*V>]I5hREl!Q
%Q23q0-?5@$cVrX-LuEaaX!M9fT;/;`43Z'4Y6:MqDOJTZG,X(bG(dC$pdk]=ml1,>s"(MYo?H&]Q;i1TXX)@k0Rn@iEo:'VC?a!7
%\H`hrIIRKbQ8%^*I*q.#Tq4/J`brne\N9m$#o2^a?u#oY0[]J(Y/u8&VV?SkjSJeTmK0VlcAo"$h$re&`p4O(AF:%E3(^kY>A_/]
%n&n\4S+E?@?n#q"Nj6<70^ni.KWJ^_/mTro?Ojf;q24C--Z!\P+P89TdS,.2gSG8ck;,8,D3?F`$cEraCA(hXM,!`p$ma_Sa9CKZ
%A[O//c@i).[QQ@d`RhOoAmg\J0P4DFB)1TaaZAUg]AQD\no6@]i-5LP-?T^Q>kj$Ik(R*cHS<bsA\I`[D&\Ys@*$74h51SH>j0F&
%lsaM$H8k0.MU\TLUpdf`1O//I5f[V'^oKnd%JT6gjsfhiiV:Ek]VTAN8rFVdmecq8KR[Y'JaBVlJQcO)'2/Qk\P0I2YiFr?e6QV)
%D-*3uf!ZZ^-+B8CIre8p56'OZ?JW!_1N&2tId^KK@ZNEnZ;!K$gLktk+PmX:c2^_u0d!Qb.+E3O;QGC./Hc6[%EL=@L<!BG26)M:
%1*R..B2g5L'e44[>fb@oY@a5"&4V8R6o79>XK_eP">Lkd[gdgdU_\1!AnEsUR_bel_JjDOm-&Fs&%sO:3UsP2?>=CQn7VR=`,fiW
%`6Q_BdH=YK*hE&C;t,Lu`a)%f5*VY&q<BPUQ[AbX%\)-AnSNfS;6=6hF8^\c)H(1"Soj<"iL^5;LIdeX8WpiDokDFq_GbX[gSe`i
%T4P-Tg`IXSQa'7_4`^3qEH%3]ruGSgJ%oPZ59D,l8:amJqtcP,q+5LF9;"o0q_d)+*td^@\K-c_]XjGtI5O6>Y"^7mQ.r7UN=OU*
%"`W)ED*#+/G,`XPEuUT:ms\E_XKYu)R6c+J0BO1/T5fXPr*-J.1OB3<aj>Ic\fr2GWr2USp?ip-1\1;P#QGSnVS1`,$@MACV"^M3
%$MYg-@Nr;SEMcgMaWkXQo]!;A0nUihM"=BE8WS*dO_+^6)jiIec]2<F84_<_0T0l-opip@-ig@l&4!r=GiP:W`e@lsNa)$Yf'*H8
%K8K&*+ZjeD$g>.R2"*kf8&_rdK&jq#*8E1L6ZDOE9iTFC<>#C=TT_Y[0"C'T2S`8k7S*!(]*HPPX>guUXLqK;Z!6\=d]5Ni8.^1R
%LI!$6It-=]6`]5lT6LmR=TuA,B-1!9rOiZGZTLD<>CQ-%opc8kqY)nL@J%UmMVg=r2_,t/_S1cg&6rP6bNfCgScl6S&5[[6kHc,C
%bjUJJOT2CIWTi-XqI8j5NdgsO5TM')E3)'_<8^Za?@`MU>7dd,8k988gGqcNK,0Ei6eE@#K:Lp">i3Fbjg,^L9A;gk8!V@.IrfK0
%F7O_[4j!7`\YJdKb:A92^fm7q_$fNDZM$EV-6Hjs&Y]A.&?tL>Q8&ZKkb@,)(;+._Q7.;/$A`VF"HeJ#[sHj&9#!0h/*N5=d8W9c
%Ao-&T4?IADp/u%]"22Fu*F5BDctC8/O)JZe"Q7=L^^=O4TGCVQOTdOeO%igO3ApZ>CcL!cCY:K:l9+?*L0jG=_%5Y#-\M@Jo<J0r
%Unc/iVsoBDYa/T.nIcM8d5?7Ug0%"Af`7cq(h2]_M\V';MGq>sBpW3k(1)&CRZ1=h8?Cn7&)">lC<15;ONXS\0@_n[.+/b#fFkj]
%gk"g9%+rI>K>A7`E\$V_s8Cu4qME2IX9C?)=@]H6;3C=Mq1kS1?F91JeO#K)Nu%.koJtr[#F\cM.k%lH1uHCK`r/I\UI.,`NTCb=
%']FonDc=Fice%q/=I[AXC-X;"<Q0X,$Fjn&k$r<I"3pchRXH46c-S/oi]Rp>W+/^G$[ETk2c,ORO<EIUJ1=G*/I_$ZJ!N'MV5M<0
%Ng/B+RV[]Hn%e]e(OV"!>(ggH.`"6t5I*+*R1l`ijCo]mT@PAL1qubh>?X9.fmV>@)Y4*^f+dcsa^:';CMpoQ09TsHH]pY1?8ndD
%5`1hELLp;,7=a)gH_d)(Y91.#gbtM1)ock^!11"P]7W0''2YYA2b:8a%7MPs+Thqd7"-K%.Jb@%*^D*p^P_GEWF(k`6n/AlB`^.4
%G$r=c;-a;Sg7F`i)PD+c1ocI!+gX1i7Wf:kPW.dQW%J-?IXr_#M?^FY`!X,==Xq`qCTbE!3S4,kiutf&Y5T^;r\ZYVd,([=(g'':
%NE=M0^#Mbid#2:I.i+A0a\c&P32YKi<Q.H24aZm8XS\i+2cJgcjI';?A2j=#4,%a>X\ih=k*,3B_0oO'giE3"$F-W,LXWX[Gl_)D
%<<n7!iO8-pl<Eg"hQoAn!'"?0e%.hGo?AVDI)GTM+qK=aK-UJ2dua^-C4@LFZT<sG5Y@eacJD1%F,la6I+qWg1om+Dn*)ar9E>?2
%SpGd`m@`l*J5he(C-M9Td+%(F%fIr/*6p)Apn!2OpE\U?27G7YQqmPng2Qs*EeX\hh*E/DV?gspJ(2n:=j:+/#CZ^-=X#3F!?JCY
%%P,mo,7\$i%G9.7B)N%[\73W=qgh8"/;7Nj-U8e;QT:)[T-Z1)<#:+[FIogP<#:+Sq#34`BiGn"665nJN<Z)JPU#BY+:ia43']OK
%*^ls:<!nAjKMZZf<9EW",h.@Ph1"@NfS:>V_^?N,e,)mj`H`O-GGD#3p`j/`o[Hm^)#_q\1sI;.0(?-Vo/hHS2PSjYX_Y,V0P>:4
%/uEU/"g5]VGV5ZA:a!8_-1?4@/dKIW3U*$I\=#uL"55TLUmEE@!5iJ@Y@Tp`=_h.g3$/"8Ekr5dfPVgpohGD`,UD'YWCM3I+]!VC
%9"'$D8@djLdJp%P/RTTX?J%uA%-qS6K>aEg@f$iPFs"aY1nG=%3Kq29C2b$0MEr/`br<$b&cJ!teC-+2LJ'0'6%RH@*`>BWJHSZ^
%l>Wu=-8EROb/c.)Q(i1'N(:elqh:mN8#807)kO'4qK=*\bbc]1ErMRnD>R\_Tn0ch7hH9a6df&1*=Ph=r@V:u"ErK;k3/:a9(NX"
%qF2@@H3L$-pN6k_E6O$Z[7/jA=uM/'U3K\-6Q!fsRj7.CQ-0c\R=YcG:2-gJc^YU/RO%9EYJZkBgZA+8lS3$?\ZEI&M&2>VpSmZr
%OLc_2NsR'>M3"p:Gbu\e$L(3SAJgF50&c@FB,QFK!pTi3c8#i!6p-atNqB4\eRT#gKD6EJ:DZq`WV$&$!`S$33Q'.+0a0NZYU]k.
%iuKX:l#AVB6n!^=jC\Acp&'kAL#=Na_u5WFifSA\!/7m]j?0nh_X?9XO]i1ghDhZ_9(`cZ.KgC4\if2]7mB$>@4[q^(;9!Z[p.Hj
%_sE0M[Th?iF7/HP[Th?i,H[0aDC8%b\r*e*67p1&p0QZ,CHOmi=]pC&Pk2O(!HO9rSB9UBM*]Z_*B]sNi)6s6*u[\HNu@Pola[lg
%T7/0Rdk@<6`@i"!9>EsM%`[jK\7$Z86ACr&YL"VXT2Xk'<JQpR2d<M:Orq]!Tk9MaVY6'U:*,d6_R>9F_>2C#ks+_cSW:>%A%:G'
%lC%m?l8F%@cIXZCiqX`<IK#("Q0N[ehX%"<2JqqAgOBpd^X/j;B/SXb@?b<gRog`F]MP4%RCuk;fdOP$<;/GBpbnUdW@a`f;)t:l
%'J;s5n%2PaY$2`i\%3e7)0Z^)PX-36@GWX'#8Qc?k2/HX>q!)S#6Q:W&idO5:QPW(?-$*Qp#3taZeZ,C9%Y?D!8^o8W7MWnBq!4n
%-&Pf?IHX^mY8(WJ-:V%\jXM%oku>cp,ZF,MEuSp',b@0Ml"RI/D9pE_RCa1h;P!;ddHJ3de5C]j8%5TRQmFEt^+D$kkj!`(7=t67
%gNBiUq%>RR4P>>=cIYV<=h,p.Ro.\XOL=0c,tgQf%;M++>^to-&PJ$^oB5@]mES$MMV`8CZ=NLQ'8'$.bI#;'gqjbe#ARC569R?o
%nc^!kHYi!$%,fg#DgjLpQD]P#P2qCta:i/NOH6Y<e@H1mma(-"mfOuN>PAK-/":ZFYF>**p$<g%bJoL_N9V:J7f3aWMTF!TPV]hQ
%#9Yo3lrRUh:T)`56tq['g[Q/0p+8I;PJ4*$p_L;rHOk;ODgeqRLqQ`J[/1#$L[F^J>I;?HH-)R96,7/.X07nVE_^PB^ef)IYQn>B
%bm?H"oh5aj_W3Q9e:#l;PNb;:=1\6kkjp`nhU4ijj+_kn'-p99oT>.#DhI:M^&+0M2)Xt7f#D%cXaL^.U=`<\ohF9K9q#-DXnmj$
%APY*-4bB)c29?3coX4e%V<WrC'g=^:;)eA<e1][m8EFD`@J]Gn'eGLWe)8U(C2Q.\gm)pZojCa.<`@aSK'IGNML@q;#4o@$N<U^+
%Rap1pG(jmB;+?o;etNY!OX-IJLeS#8IG5@sUd\f%EDCHiITjt#Br(pPNgni2brKniV<OD60W1GD3ME+4NbP%C-O<d5G2j("e!Z^t
%0,HmM47lk\W'cJe&)GIb/i6EEQ+NI'a<t88N4-%0n9`Z'-:E:"QU4;C^%(%K*P:hJJg5geo6r[!a"<Cg%%Zkg$$7J1#,PS'2oN4[
%RTGRqBS12r86Q@\UJB1&$Q'%Q#pc0<>-4atD!i3GetkguUk6c)fptF7a14+@T!$;.oA]Qe9Xa&,M_A)1*,HkPB?g1n4,qD>]?^1.
%-OY[FR.&#gf#3h4P[<22`hFo]I<iCYe@`7p9<OLVis3YNhgJjG^R&Y4gACs7*D8^a9n$`1hC1k_eG;`/,cIjfk+q_/]ufqR5JArQ
%eoE8f@n%5-Xe$F.bcU*.>d%pk!IFMn@^\J]@I)K8$L7+f5YGJA`(I3t(=k\Rr\#MbiRq`GpW]!q;DY.%q;nD4W:NJhE=\`jEH$3f
%3O"+-H5uR4[67GPLo9c>5IUElkkRJ]@H84jg"MO1$45Ilkor&rd^/R-Ml^<gCMNX@8F/g6`agC$9qhQ`luO]fbiN!5=j<@3_o6,0
%C&sRTI9(MKZid=9(ifZe[;XXiA_f6-:R*FE)l[$$.(d*Zl-CV(cE_hK./Tqe4dgr([?o+1]F'19"+E<bV72tQoJQsJnBX7-Ct!>F
%jqgD?)HFCR4!][-RYenOpXck6_(*tDpR1>c9a*m_T,]iFL.J6c+qXb1B[V]%+>*:WR^=4Ys!Fn!!l@&=FYr%+m@2i+=qJIB(*#sV
%!p*`/R;(Z]$F?C.*)q;&N;Z)[S&QfL_($.UDlh^]V?k7&s3%;/K7AUZ?hujgT5?O";sj:MTtdLXm)WUQ5X5%6p[((*JXcILAI0:-
%9,Y9?(IKp/K)(n;4TdDATh=;nl%_MQn5&W16'up.`9Y+-/%`RtZ`2$`^tlo<if`M_euRHq;8LDIeb['@G;!Xpa_HG_QnZce@tSlN
%^:3SDKKm6,T1+=#iFjpPI4Qu2"L1&\[,nkdi"I9Nmb8M$e1=rWVrN>C&],D1A>S06Z&#kU+]Uh".Z"(m:pjOZNkc&)Y3;/IM3S>V
%?j\+ac/NWE$BesTjD,H"6F]Rlr_(04Jqb4D)KB^9%S?iSRU.lI\.D8*p"'fPN.j"pHcQNqkr-PYbI^cOr)`L[DgMoq14%c\88&^-
%H+"L#&><4NNe6u#e3>b'#m$e!G/=1@>b$Sj^VJArO7o4TD'9$jPCM^j1?/8cBk8u2!$1p.aN$V`R/WjEX9+0;J9qk'"kV3lTZOL(
%-CZY)n*3TQ_e/h$pTW6BOKk,%VM[*(XgDlGWPYoLMQ%Z`lfd@07adGR/k80sVi=F6WD,.3n5Bu9&VIIJ$`.?]2pdAMmkH^sn=9%B
%TgsJXT*aM=%(rkec1Fj]]qHQ6F,S?@`D<f8[!"`J1p"#ks.^?Rco8U_;$Fa$a)diDCf2d4F(*/?*?F^)>M_OT.[_nd=V#Osn(0]n
%Z8M-amtR^24jLtC[!N0:YRLl?=D47t=SsI,HH_irqq`7PjWZiRlCb&`6SE(t$6\Q)FKDaJ;XX&K/`Ke.-F]<S-o7<KJ<BunZ@,O$
%hh'5Kole3G;7T6JWp'l\Oe4q+.^Tf9il?N2:GbYi@lFF3M:lqM?I*g;cp?1`;dA\G\LWdfZM)U0C_@W!Y`+/WX_mKg@F#gqd[rq_
%[ASe=XdOdn./Mf8\VE'U62`pVGOfV0K>@4U$fDFl64?'SLZNj9n+sO)U32$:<\dp:*jA;*06d8FSs[tB`jVoC&OAe>(a@gm4_,>\
%Y6&*GV]MH34,C!a"TLOB6<V^p)gi)TL>\29+5Ikg]&WZQc0JNQCF8uaCOidCWpG+EA&;':M@710e]@4[$hrg>jXA.6nWk6/"WA6L
%-X9FP]:*g9LQM-R;T*)'DJW)F9$q383n`X8Ee1=`3sJ?LI")2dA$V;-e@mEO9H__VEqP`$D3bVlD$7,PAjo&SiT1ef;)8a;318qA
%00n:&SYPN8*>K:t_u%rjL&AL72Zp\;KYW!6@7[0Os)'RtLR!],?XJ!@=>='Dhcl"Wl7XO___p^.1&&KDJ3quiBmG8;*60:757>'P
%bM0!<IqOI[V&BL>bA<U>9f'toE(:+o(gZB>-[*D%aID9e6.?9B'K>S,N$uJR7CkKL>4UGSioXlHkA@smP0+Km4!tf4aTQP)or\kH
%HXfD_/C9^/C(T]9Y^B2HT4T\(2P,=^YCHJpN9Nb7KgAkZ_t(n&#bj>WD+5hC#QN#HIqI1p1[:SMp!8Rpe/J0r7N#l/_>@(*B1DhU
%U]-ZYs3.GA9kMo,rgt)$c\snn7QIII5;VSs)>2=7qI`:r1S\IqOT1_G`gTc[rVC.rrA15JR8O".W;e_ee8Y<2N;@0V*AaJ'AnQ!%
%qe&Cs1SaqNRSg:;5-0S?a4KOa#Pk+$#;u@=([+Ba)pB6!W.$BV7TaAt=]/O.-_2/BPs_Y`\l5[\h@!j1Co(gZl8ZZ5G57Tf_+hM'
%.Fl8)lig?<*gYFfb@.f?F_[9kPW:gGNcmlo3c[pQ1U:DI1!dX0s4c`17;@_V9Q2HN)7id^FMU^>?9'93nN?c4k"GS)G+"1E#&`B^
%4ot:]k3l$bGJb/C-cZ$gKX1Au]tV3\<3S6"p!X&$cbp1F_$eql;bK^,!OP-OJ*'4<I2`\(CLood2LBhAAeTSom%K:%*[_kb80aF"
%_j)[E;!@\#A7N-@1?hhcc3to1Sd;&)Q"G`i$sBL%8i&"oJJ9;r`b[u$!lXo[[qr`beh[/O+^'H*e/hUHVi!3)dsolJC`M!oO"0l6
%em=dlR18)H&M(/e9PhP(#HhY7`G4OD&I["U3('n19I=b#H)o*c_)?.n)leMe6(b<Zf2+p$TVegulZ1Jpmm$.cM`_`Y`)d)N(Yc!@
%e+_UFI^82`)nGJt]KBDaj8NVU&FrIWlm\QFZ:ft0CjaSp7RlMjjOh?f2&TVCC^*,pbb841#[$8BR*<:u2Y]ct98$5@4'Xb(:,@JD
%M`2a+g5^uoeJ6'UZj!eu/=g0dQZ_tm]p(Sk2^<>Zmf"0k@q/Xhl=p;,p50?G%mR(p::>&\T>68!Fp/b1XtrF[N842"W*BFg1$9'e
%f@)?/St)D:-=H-I4Ps@l\P"A])4VhrjUshU73'qk_'blV/A/2<C).X7Im1U$*jX@;EVPH>i&9kZ+VQf>V?KW\6dj"")m2on,ZoNA
%*ZpHNf`M8apd>`(Z#eFVQ^)6Y,Z/Oj8N68b5W\<N?ci$?+O\\8]BSP=im9*th;&3Oa\\eI!pB'U2X2M(eQqa,4Fs^r.aZh::\;lm
%^<>DYX:j438jf1?Tlr]q-EaM_W2ut_.j8=eK.1#>"$%1N$5p$3c[[o:<p9Cm@6:EFFq@J,p2k</G+bQn!`'3B^@tHq5'*Pi`)_%2
%L6Cm2.f/M0k>3O"8u`s&b&U##$SUrq6bPOmk.%`4gT]3@>VEd/ZR%tBOQO\e)SgP=Ma'Q54("aJd47klfi<:a,.>u3IK(TD)?m0r
%f^*[jYfO2fN4X\Rs"t4##kX5M?J<(:7MeON(\si)nj]!_\:/<!k)>Pj-#3b%@LnXq8b9YH/hrHD=p)A'Qur@F,FD=_HKo:Xdp)^t
%S\&A5F4<b_(kA<O0+bTUOH8F,/,_Dtr<d,p;+7@/?FHp/K4#oF]ML1tG?lTN4jDlQ:_0bD4kV)^@Eo@mTAHF)O5G#W550^K0-i>u
%,(M9<=oP83##F^;S9uDhLUF:?=3"SXKu`jTfY;Q2c[<H@s,pEkENQ^KYE.V?YHh[ISs,6Yh`@l%;'QWL81S@Ag2B]F2H&Q0LXrls
%\q'f^S3ek6/6Gb>*_GRU9Gh7u.?#Tu2V51&'Li`mUTS#a.4cLgJ*sIK2^s\4W'aq0DGh<GLo4OpDISSPe6&('-[c`A8RXG!"mQG<
%P<uC5OFX$JPJV!B*Q2]9'.a9,^>5TPVs-FtZ'uFs',]j]G14!q#b?.&674\5MpWJU2_"BKeuO7sh=Qg&k?9cV-le1qJo,\f9%".G
%i=s7\eqWI_DjjhlTd`lMY6WRXK"&4S!p#e-W@M:i?a[^]:G(NM*S-p61r(N#HYUM:AKc\_$`o8j$grH`)a]d\nn=e3mLYFDX/p@]
%Y]B_k+5PrZ9:cs.jWF'fn22r`@W7269m5o6=HnAQ4F[>"6M7Y*Wbg5#IV;#1U8=VuP`F;[\"F<(?s0Bk$]:j<lG2@/7E>3hWoYCW
%aaPHpL/phRkjKWrf6E3U-i[K!_L0iMLHXuoKg-*m#U%]Y)?V\B_$iDg0$1m]cka0GM/O(NM#h0;d=Bb5eRUD-OcOMW=72ig[3.#4
%Sb>cbHkC(/D.[?0OdA*b:@[Ij:4AK>i'l`i@39V;6*GcMPbo<Us(=h"1Sar;;?+k=IqBC17M5Ad>Q164A\8m<YPg8Prg?X`bc$#'
%eGgjOMX%ikrg?X`bc##`P]IF-ktg59bMIk$LVX:EC>!ri$Q,AKVj>"$<HWp-pscVD9`Hh0JPRkE%iU.7-La%:@9+t2:Q7WL#eQ3*
%Htq>]LnKaH6)fF.+L<d>#GhWVJnJRI%SCK*<:B8f[kMh#D_ApnnS_p&0,5$48fTq54KE5VT[Z5'/5J&9#K;=g(3L2l`VOBZ`BbsH
%&?3Q$UW[$bPZg6\:BCa[TTkXo+=Oa6.QAj?n#0QY3[FSIUr44-K2Me;+dKrI*0cmiaV(tS3%-XO<@Vnq_Ek.=WbBk?`BgJSTYN6N
%j.Om1ASM">5r^8MPF7W+(Z:r!4Tu<f%0VBfVm/302%UJ=h\_9(\eslbV2,CZf.O//&m2aTC$mG):4ds^0nQ_T:p^9*V29[WU$cpA
%N7n"5H5S@<%J.]\Rs5TcQR5j*B)HKDco_QM2B-<-UU9na@6BC4P:X=M%_RD5df\]UQ(@n1N@.S+j3=O/NMl&)UM2iIQ4m5jY%BeQ
%Q4o<]OW%"?%g=M_#OnX'GrE8?jop.pY*n*V?ta_3c+hI<Eh.p1e`!.5q3DM?R,,Nb&U^A]K34)LqU4P^<eF2QTb()-Wj$AL\HXDW
%Ca@CaZ/$#WIOSq]\aC@pP+jt\`K?DEoS3mI^g;6m>o+,1Vd-@Jd]#R'?1+Vu`q4^Eal5hAq=P:LMKpgt7!9PeCsh\?PSUn\O1VW#
%.1Ptog.*0UT]TEC(Ea_Kk+3]Ng`leA@s6B?k/72lb&>JE7lFGB=4C^jq6_MTHJ"i$Y(gdjBZn!6V3&32*dlj6?CO(u8qh`B8quUt
%/%h^_+H`i`C5WB-;g#%]#DDgWN8<^"R_W;G.+GK/q2,$GU!<N24+$uH.gR`CneZYkj`+'JV`8.4-NtJ/a_;$\d2tCqE#eN4Pk2Tp
%KL7$&FskLhbipqV:ZtL2<RBImoM;$l:/(VmqkDG%q0Sl$<hbL'f^S/dYnD$CXilo=JSrEhN/t)4*=UhT=ldGU<:;jcel+;?NKZt_
%)0/8N`1^ds*GXn*^^mK'E.`uNajqRg-:-8lO_:eP6ea]+G5PtW_Vk*O1aEjW6AepTm3V1!^;B]g,,ZeUSqa'k8,p(Lc8NoeI0`]l
%:IGuWk$9.UX56)e)$)%GXLd/-pkh)pj7/sUa4@IoAPG<*%&9OHhg=P.E[G1B=XF,7c"PaY2XJcc>I7:.:@94+`5cX3`_XHZLqWNu
%>#eFm]6;*U>L]SeklO8s8dsG90_d961*A?7qq1BWcIK"I4K\VKapG[5jd!"">M;:Kh:$<iOhff*SI8O%q+/:>VfIU-2:V!SJ?Yrc
%'B!N[#I#4s\7slb/Sq3=Y(9s2F0Nb_"=V^)">M%q0\?uH.BtZX+rl<a%3+Xi>O]o[1R(+*[KMD;,G-1bnTKo%:],nD_c_mcA-&)-
%Z)B4qnEBNa3Dp`1_7f"nY/1D%jD`<)-&Fb:?i&aG(*'u]WAX5HEm9/VAh3<j6pdGC)I4G)Yi\\N/3olCqLDa@'POU_H36-%QF3N`
%*SVRB&"g*YKVe4g!V4K)7:lem>UU>[]UP/L"b8^0jp2N4q*EgKJ8Sei=ugkHm(VM3!1IBB+,9EKl;WGEL4q.!*7LhMWFAFa&#PCd
%RnbpE\G(OnKX_s6"D?mV?un7dbV^@@$LWZ@Zm1S2OWrcfm2foV24c-p\Qd3Og_/;m1.b<5h`1H[i[*M8PL(roYf>Oor_L^a'R]Y"
%B1U:3Murm3oJ@H`:W>sS.4=pn;E96`'<))^aor'+3DsCK+@&U_9YY5DM(2uMg29-KDV'DW/Q(-=Olnn5Ii7ghDmpTnn3!g>VABT$
%NaNId%H'%U2de=PB.QhUYh7@jVjt`_Oo[=BJh/fa74aaa8PdPq.Pp[$Eo-?gD<#cW%'8tp,rcMm;'A(*L3'pt[VP7rHYnuep3i9M
%Q9BLJEU46;$%"XT0\d#F4pB4BIBHf5+KtHR^/3!geIbn\ZfuK$=s8[PS_C).YE^u?FJcM3cYJ5`B\fYiqX[lfUekuEX8]b42Y=+-
%[8h]_X,1]+W@tYZIpOY\1u5.5qX[maEiV:0<I\=*>`J1$<rI<G]K]+lC9)e2Q0;#mOkQg"Y8)'Ybgb4ZD)>0PZ`FN&(XSH$W^![%
%E<3bPXnmGgcnD%R[8eHTFjp9WWrSn9/i5",^_lOC5q4o7aOfg^d@8aF!r7.@>Q4pphfsFKL^WE@D:P91MMsm8WNH$g>$7+XB54LH
%]N14uH4iHM<I\>UW-.ArD:QCCf(RU]g8[B@'cJ,[q*s96,>d=@OJo"a[`r66&Cg/3iaQ^";HoF&rFp$Ur=-GtAmR";e$Q/oNn1ak
%eJnm17V=SFZThl+ZDNi4\&:b;GqO&JF;?el.h&1#[Io%)N:L(W)JXQ"-LA<r(m.g0c5P@8]/_WV-(0k81W@ugIC"cJai+$N*eCC5
%%q\/i<_#8NqDR5shS><Zb2R[#KasEV@"9c*c,S=F1Y9nb`="kMOiM.[,=Wa5]eMMAG`]X3fEpV4&QA^?gatSac+e9O_VIS?SusYT
%O^[Pg8WX)#:C+#ZTF@J/#?N,^jerH1jm20L<)Wo3#M.V]'sK`NGmk7G)#(Zk[WMo[A.nbO(o8d_BhFo<J`D0tbnF(2CG_!DH%N%^
%g-[$C/0/_o7;J97a@Mif,ObQhh'UV;J/0MRZG/ZH!sLt5e_J\Tot&97+m:$(\]`^S6^2qG>&uY$k=!H1gn9Hf+%etIs*ECr?_9\o
%U@Y$MLo4YGF"HXi<0;%q"an:]3WlHk$c2.M?JFR!+a(BIAR%LD[1848lAPtLo@peLCZS+laHpn.[gXSEnk.h?G7-8[%YZ*KK`V!C
%0b#^Pfagp1=r+>*HN;F9)ahtd1P)(jcP2"D8IXsV-r<BG,eL+WhXYKpJ\:*[n7fiDjLeQGiOXiKfF<Q5\N`RrNpqQ9X&sB^\PskT
%a42O>BCZ2t`(\UO>=V&DR:(dL^bD*C!"ZtsD`"NJnF[+.FRbheq9Z4/auZT#IY9(7KZ^hT:Z^F&g-`U>75,.;i`)_3K<:DqkPVd4
%r6supEn)\%A1R;jOo=>(EW>)(l`q(k:"l/PH[)E'5\<qP.X9!9W2Io.)].^sIKn+&rUSXqBL/Oskn<oP-MYQ%$la=-s!"LHbs?I$
%1f9H&;#0BrJ"jXk`?PAGs$<TrDt<]9P_?c1c[/Se%a7U4>kYb/k:s`%JZ>USel@Jh`'`'2HW#E!IKCb.KG^?mfY^@kVJ";P/DPUn
%cogV7]OoFNF$njJJE@G0?aXK%;O/K4\SfZ(<3R7C#.J3N69F"gR5/6QCf+BRT^o8LXQ9Dg'^_DhNNJIm6&MC8ckdX`mu@,P`?JIH
%7mq[r/&Nf`j96cJ%A=t&En;qEJLm[A%!uqN(T-S*$0/kP,n>:b\O%WNh)OC\D/"hW&O$g=dllVCA[d_4"ts6pcqTEp;6uih-qi">
%BsJ_c6$?(Z#nl`R#0:s5:OJ+g&2AEIk6\`fH\RF=,GatqO_g#nk_7PO9:7XD?C;>@]TkOi9_)tin4eA!#bjl@n5.:nM^8G#_s@\3
%c)HkM?L=LUN>/lIT/g7u=SE$$%X3ZbY>\RB&h\-HU5!FQCBsOWM#&CX!krOAQ_$sY5/`H-p#%%WNI=T%N)"K.iNIDLlZQ!>kudI1
%#Ili0Fb!>V:q<RrQI@2m!=%#&A7JG(Rck.4ZGr%Kn+JJ3n,!Co+1D65D;D(!X(=fMJYqq.n[[r%0=t?c5J:KSc7`Q>mK-QLC)CHf
%)OXoU'oXk0RgXQpia@]g(V!YP7A4(:h^%ja!44D0_TJTuEn[mFL1ui_533<DEJKdr%s&^PEA;FLF;c<Z)fe(GS:CsrEU6(KfD%K]
%mj(SK19;l'F^=p[\a(Hdic;$>=*X.CRtFDXr<,g>WhWND:*]`1ISKc__"omOTnohm3g(An:AFeWIm^gZ`16k8$c,Z);_dS?nZe%>
%OK-OhaXAa.mBO0K7;Y@n?/WRp+hY+Vg*m0(Hq<Qcd/&oV]<S+:k3EN"[6?GNKOD2l&Ia=Y=i,\+T1`R[W@)B)6arWDq3+?a-OL6-
%YZ(pHc^t8L4I&tt_-4!;P^.0apd%iJQO7HXqfrq.-d&cXGs>*95(05Uf-g.Eb.O?JEIF9$boJGjrPQ62(LDg]dj/X*-eIYmFa]\e
%K_um2I@C.^S(.6\gRmt8+hqcCGGAH9`eRVq?(WT,:g1"tW!ScN\itIiQRre99N:!IKTp(f)&>*]-W2r5bH'.Bn9Oqk0mT%QY#!NC
%Xc`-1I$UFbb,[q5:EUu7?FfBCcY59Mn#()=@t;G*febQlT7h'ibQ&6(YH<;kS2!BWIIgt)#'g*QT09Vs=SW[JlCUnS#qG-roM:6d
%5&@&mYaB)e+;L-i5?YLpU&(\O65895>,QefDC^?9hu6J6?AJBT:SE7^[p<nI@8Nj_/cAVhKS6R41io=>`XBSTMIqFEoap]WqY_8$
%AX-9oMVV,"M#T7PV`FciFI)K_kkdKigY#skb+Hj2E?Z?8f2,QUgobZe;[N-[>+I(BKN\J<<.M9g<o=[E^.G^4Qs\\J!7YE^,liO"
%-R]hoH>#0U?[;-pRNL$E-Rb=RVWnE*Fb3Nb3B9=l"@X;649+it$-EaFr*'6*RD%:BHhVXG`GKm0##Ee]kE0,8J4^n^\*<Ron;F`>
%25Afg*+\Nije/s^f_n'#;(=C:)g0qnk?oIZBe]'?/7aP(F?p$GTrOa+0<eX_No"XN,#oZIYjXMU7F99e/6u<J0ol.U*oYN!XLQm?
%pAj^E+$6lP>.Z>cXd!!V.5q]ILK;Gp;APMc-Op(`a>e8P.:Ye)gUE40+LiI!J2WgY0_IE`F2)8GB(e\iZCQ?BZ4DJ$9K\"PUTf;:
%\Cj^iO0^]VrNITb,JdX[.oS']s/9\Ps-b*K>Cb6^X!*K+g?fX.E2CBSkNu]h=V%iH)1m%H3S>rh?q@ZWe9-_W"DNn_)%!SuZltIU
%OT:I\WQkUq2.'2RWGi6mIJfk+Q/j03oHaD2gU*<dN="]'q#-*&^m1J2@:o/F]LliTV2s%t(X,RUaq/AS98utg'.D]\*Je8m5MrC]
%3q&8uU1Loa/j:[3$'fP8`^t*B+<\?$XMAgC4gYNONVD8+UWhOA?RiECjA2c8<jl,/pjEmAY/]u;AT?,D(Bh$"Tn7e*dXk*3XM>0:
%)'390TC==pB63RNChEYeoHN?D.gpL\n#3*A9ASEeJkAL6;_i?P!`X60`M,fL=Pu4$6]jff=$cJAntH)33](^X;75tg&@Uu93.9;\
%3^$_?r'`aX0K)uY'QHDb$-c^ekZ,B8'S?'HA#(oQT?FkbGiqZ,oH^Zl&ou#Va6uIGC9gK&Lod#e+3Q.m;*QP-PmPtZK&6Gja.k@K
%-k6B6f#<9"9O_Sc;qWI`Um@D#3`%fh-'tEn*-aJS$^YFknBe1VQ4E#94$;E**]npt$nQT@+Mh$>;)fZ9Uf]7+MuW\))#FXPoMHG)
%+jqnBY!Tf%pJ=cFoOoUk&VZR/=TcV#GuU-$_dP0S)SV2Q6n815ka%=sM;4($8`1LEN"g/Wf#1Qa@Q)SmO8N]18^+*fpo0RO:,sDS
%ff&M#bq0jTf;WX\TmLiID88[jH$hWD:]e2C"f3G_'1trG,;bZhSudqse>0`&TnKnN'lR$O>CTtdTQOr**3WRr8OA8qF/tF%nnCca
%$/@B1S.[.<>a/&oqJU1GF[7b-AFBC,,GBe>3jj$$Y0rp,Ht:rN<=Uc'h%f;L-^;\oB\Wsgq@cK.'e#U!$$JWA)@"(1@0n3Yl5?_E
%:ell*k?iJs\Oo%nrRa;K,a;CP$%"i)"A@uY'FE#2Y5\r8X3?)4$0#(U:4t)aeI2D([Ec8]I]ZOm0i!\+Pr+ifggZdDCXkl3WMeAW
%i_i=Z)!Bgk*=nrL;-9",Z@`J1@EESX8^8ZjRZQD1gcXa"3R?j_6?($PoZ/Cg,V'<[9gmSo>8-R0Z3`"iajo+8^V]&s!ZdrHm^-p'
%P6i>3[404>L0_%%,'a3)4@0Y_F1r((IMW,?MC+BsSD`\3h"B0fEPh/pVOhQ!O-*g39g+b!EM9D$kZ449#KmJQ\JTK;:H[UB+0*E0
%!s8p\.ZW:>,hW=r48^(SS'+jB,i+kC=hPh=8NMJ)a`EplI4i7Q6?MSeo\GZ@rR\@AdFg_^QeodA*PI^qH0Y>O2a5Ib\/0Opf'La>
%Sr!CEkWD4N`=N#2N!")Kb018XP%hYHQjr9R?.X#3hKI1U7HZ]h=BZE)a`ZE\TMO1Z$lRua['?"(#S9M32a>cm^&L);RkN$'p2sQ[
%6I03lR&\3]N6U&YRUDntLS6'YQDXS1=2oDKE*(8G"Z(Ic9j76N2>XXqfRS]@63@*ETCDn5,8`fA%4^o%?$Z4j!5R#"qV6PF^//pA
%g81;pmptdNXI6[V*Q^n.Nu[,iJ.%UjL,_@B!C^ru\<#kRaMk=dC<'fuaT9<Cp\=&upS1I3lg`TqmYA^Dp@o_RpCgNX?Vn90On@/h
%nQ1"j$$X-U="tA_V:e)l\@Wic`fU0+]Y"2RUZV!2VSQQj0MHbcV!`\tfj(LbR&H+6j<]eED&=V2qq9L**ri1`FVPkCUf&e\M!?8n
%GJ?^_IWC-]$>t$r@5akEEb$nb]-$-WlLO^#X-Xrn]X1'dN1q\M`jePZ.1n1ER1l%&_XL0NT.[6!NYO5pPMHB-$g9!I_X_9o-0`dR
%>u6H?"3reedZS^-kZPtfnVtf"SbtgYpc-W0>40iBrK\pKjRIHJ:^pQZFVWKAWSc]5=B\7ASq/;\jc<SK9"]_3CPk^miqY(U22pAF
%UFhfm3d`&6$F^1g4rk&hTG!O>.3@_"_ZX$WScBM9B`hT)bKGtCl2l/dG/L>#c17dj@?oD.p\AHG$_@`_22+%u9[%F=PbCS.cgnO%
%)lT,eBiRpSlY9S<P5p=@`?3++%rB8GDe;Zr.b*Jd+Nm[!o#MRT(>9f0]t.7j%"@>0:NXCjZ!Q&YZIofDBCd\q>-WQVb'[Poj4hM'
%b;%.e?W,pR$fp?4q7`ZE2kP/L;<Ib=)W)qD#-Z8F,rNEQ0Xt].[5;,.n1U"b7`K1BCOD1?/_-op>o&n^Rh0]38q!&FVTWr-%.CeZ
%;qd?EaE0`$*80),a0/6mnDkaoVQRYV@f-QOm)EM/7r%QE\R48M9XO@W8`Eeu[GIt(2j6%g=,'msr!HVCdLauKH^/X4aE)-5,p"op
%b*d2P]f!NdM/-oR*rV(4$j3"EkIn-cGgsn*R+O`o#F0Oqk,]L3XfLR?q/C!L4"VViX9"+-`1fLh1CansBgJ15boJHm6Yit98bU'L
%b!E&9M52,%7UeZWW4T^)'(jkIeOq>E(o8UK0-g'&C7Uu_VgrttIETLMQ(_]TBM<43Ye7H%lbb?]MlRBFq/H:+$tA6NDZ--d\.dpA
%3ii5i6+oaF\@<4'+u#\hc>hVG,\R4)OtHq$A'K+p96-k&@[iq3lL,S=Aqs<t)h?!:G'.*^=RdD,lb'n0cLG-gdFWYPrLMuZ;NM8'
%Tkf[Lk=X]L)HQg-j1/&7Z(B2t)],")4c?Mo\<uqS9m3G_V4P"^[cQ9mFIUjb$c2.C8H#+>IW3,k@S#XnVFq^[)e6K3lP.bO_T\)8
%pH5ChZgn<<,<m&#=3Bt][hQAN5RF"88D*PZ.(\MC'3@_kl<,0UV3q']Zi219Wu7$WKY[I=iNL?8_f"nT%$1Ls9t2*/lL,\t5G&gQ
%\k-&@&VOh,5_"OmL"!"m.W@8sp"LRn#d!Lu'>u$j)McE0'Oe189&_;Ad\L,,(p,j0..2'aP<Q-X8ibbqG9T:a,;@-,Hh=r$95mbn
%mNO\2K&B9gW7Tr&?rIBJEsS\6p:L66aA2?QhKc8qot+gm0]8orL0L"Eeu:g#dHtQJepet,1H@i&6t%9LlT_E6T;#!/YkjDqqBt:L
%LX>4kG<Hc\W.2+0b(eJs<7=(J0^$u9e>Ie&ip5*fJ*QZKSu[>Zn*?KKgXg^=s85+9fD2hhMZ.>$[,i@#rWu0S)TYR*r[GtW2QHbO
%g0XAWNpF*66lH6_Znpu3lI8&O,R]lZI:MrrA,\:eohUCY0t@4XRf7$4'O6ZrJ!q'G;6QdFRSNK%P3S['T4jb93gpKerR5Z3e3=QE
%#2d=DY5S`USZ_r>7:ZLsk6pq.1.5F2+hUuYs"k$&@he92Y($poXXG%FRlOFIKS&,souBN"PDaZjVuF3)Iu;gG7d6K1k-_P1=T:dj
%o31h-7K!nackk7T7o56+qBq&U\5*!B;?'$2m^;>@Mu"eOUp!^HHn#amlgDJbrGb^76lB:^W]uN+e7Yl^M=-?Q>]aC<V14@kb\.6&
%>lQW0]96Dhs$VF'X&f3Z.j0,7rlGAXY#KoK<%AbJqIe-Wcp)s-rc^u;ImR8:GQ(\n*b6Tji1eM9J;a_jrp5!;XO7'FT07Y5#F)*N
%`ljG)+N*q%K9li$rL_mF7P(PfX\](AJc?hc^L?G._IAe7@rs':7BsC4Q*UBJYrC[WWW.r[EY1;TV,\=?^Vk!/T:;qhH.>>@,ugt<
%)hMf&C#WVB$ppOh6>Q7Tgkh,21/('ecnT44<]S;5F!a.iC)-cHAb[As8,7XU-1\GlD1TFthTh.!K"#Q*GGQBT@O-r-3eh$(aCVN<
%8dqC9n0Nuc%W;V;mQ/Rebh!eV-e'/A^qAVj5"!F5A<V#0r,[F2rM4&B.5Z$ekFB[-:*g,6\*/6@T_cT_#<_F]YLioGiHaPaGu(o'
%UoQ6U8^.,qd*l;_,bUq?>^bt*Q4n5mSeE;?^I1tVk8)/l&o4P\S#hW[@qtO\mq,M-"8:UkZ:VNCl,'1F,$/+dLObSn;@ei'G*MmK
%iuD?/`YJl$&@f6^4e[>Ih]!=q$.E@Wm0PRY@F<4n?uEoHi65OXiet_W'&e5#C=->JkeLcAk6b_]1M`:K`+#,GmNmPU8u]Q15$.TK
%J>YHSbkiIbs4M/r*/h]eJ0#_=eNO3`"rmSuis&bCRm49K:cf6gP`?9U&"#$>osT:AIdV7c?c_&H-cnZ(c6RaAcq!jWO=`8m,BjN;
%g!LBs"U5fobtSaGRb8>L+gYS>li@ok*UACFR+&<HBd7H@%[`f!96rB9g%kHP_s*3-/nBcRB/#Yh#E^:M*.1^De&3"&lA5]i<;gKU
%Z?$p$FIa^S['CtahN@u_hF6r*Td*J6^1pp\Lf3k62'#mJ+Vo;0aJ-Cb0YK_pJWO*PRnVoGEe+6X>:9kXef=Ab]V?@?fd);\W+`j6
%:Jp#2bB@Q;V\T?81XQjLYea2adrarI/?6oCUdU!9D"K''^R[Xa6e5jpRF077[)gEKc8ubW0C:91[9aB;r`,/Hk@2!1lgKa'D;S]n
%=M9:#a<QdLnAap4H_23@!O2RQD/`j+Yl3,qTb)iC&oau&<hKPn(c?+$A=ImA<HBO9q\5F>9SHZ'Do+c-kQ3J=gO:9'T>_`LMKf1j
%F2'O$V-.2OfE68cY98?bTI9>2jigT<0T(F$7ePXTa)p;3Vg><*fSe]l,b+u7E7./NJJc?XFVgJ9k-7UjA$IFKY!_SqT.-se'fa`$
%Ip7_Wk%e=B6HC(_ZSV7,nsaH->#Vd>JQpdC,I&q*I4IW(62"eOrg#flGfVJ-]leh4fi6Y)HdUoY7OW?O\a]a'p'MEZOe5564o8+M
%Io;2s6A,4FOo*GdH&=dG")l8pC#5*hhhe"<W74r-^6V-k;6,`<)"NESbnUdZ8l7)fR8A@7OcT^A+ueUn*-RYR9"A:pU;W1H(/7+m
%oJea7jCV)3Q@>0b5k%^i0?&"Zh$lY+A0nNU!R=1?ACV;NE@;R>gs73d1GII`2)$EXRh?X&ba!!>&[b2XHi@,]#bQa$@-I/4+m*F_
%A4DP,LUu`6DXOjQrY(5d:/L1]=;.T[]E!R_V>:6mDV5("i/T.dNTclcBQ0.LYt;dWk?eg@m<kZ.iY-&/&:>2uTQ9/*kookl19]oY
%>OVijksZj1oF$KJRHL-3LIEK5>u;tM*G7s1FQQA&qZ54ei;`;o-ub#KI;k&#`nB>,Gc78;\5c?boG99N#uNNDY$@\ac(kl-7ne),
%:'TQNmuZ`+&GQCrRG"3XDJ+H-it*.N(lEofm0<Zh4\.K1L#nXe[3m07*',$@C'&-_*?'>BMRS3[\_Y;P%XX/aZEE?>/"%?]:Og1b
%.U2TRYe3J,[6dp"i[0OT=@6A%5&]k^-k11)$sN^?qu8!;rs=CsO8frD%#=i*>Mh(\S'#>,S,`JSbOhEoks&L[i:j^0a"(aXR5?;k
%c]2=kp<1SHm_>LrjWtk666Qd4m:\AKr0N?7gUV7O>C4BlFPtQ2Z.B7:rC?Ntd`+2m]3du]!S%5R._H_aAkUcn$X"#(D.(03(><R_
%+9H2u6J7i&o(+fLGkiCYK;TVZ\pjUk=N^XVVJjKO/=jnto7i&tcU34<68ie/1-0$1(m;&pF"psXCm3h*]^9-.Y7E%3Z[%&ndB?6Q
%aX"sG88Uie1?*+IE*XE>1Ao,5UdFfQl\]r.[].$.[!1]+SWS]$Qc]s:2#-F:R%CaTcX]4!G]lOt'.G8K>9@L(`LD8Gmrhjb/3Ukm
%2+dJ'&%:>BX3Z.p.Id$^C0]u/E:]W8;a8k&:3oLHkFWa>SJR5ofb2&82G:??An^9=8_F^W2ics&k%u;3;8fL0aGNF#%WqQ/JMu2e
%/Ei]=kW]#L[,gt-);Aoak6!Kd;99T'!*4%,OnhP2T5sh-KN&0J+uRi*Z\r-k:LG?V#UcP*[O#9HBHQ2d9'#4I-$,#-8CcR.a3isG
%`O>Srp7s(fHacF"P=Dr+]ZA2:d*5VT$e8(@;!;.mU<V/"/]F.iic,>@a(:RbM]&%"l;.90dWWsh7dgB\m/bJ=qWap4dE.hedD##j
%b-G+r:k,DrOHR;53#49`W5XG\VjEZk%G#QNPCAAp3mo%-CfjhIO#Y+F>.Fa:&`4,YP]6X?2SKM1Ys9I`@>G\\(L*6M[NRSOJU+Zm
%s,;;4oPZ3bdcg-0kWsVU04>@Ui1S:KeiDLn1EX5QZ'Z1@H=EuL)@sG<6cDr#1+*B^B)@Xo'fpKrJ=\_+Zo\_T*r&R]lVnmQo7pG1
%"^5%Dfb]K-X#D)o6]8VAo'TqikCJ'"hpL%Wi]_)"9-7k<VY&)8qG]1gin727G6?Fbl6tct<L__.HENM3^$W$.%%OC(fI)eQd)(1[
%^a!8Pn"=sp-/P7M$&0GE7T?KjGnpM/XFmO!2sZ9s%_J1<$X$)iVo3M.[0HQ0^HCcu!==IW5E!K]3gSLgA6O>RSXCjg;)R5a[IDB[
%A9B^\,6onZ5$rs&fBhh5#ZD@^8N'D7%$#.lq)7XWE8Ch[H_LHBDa4/!1e0uC>hQn/NuC^#*hGr1I(r\'ZLE3Z[W,q1[UGe[H5$,e
%\86*.d*&/Rit9eRiDSp,ZI6qARRsY``aQ"13HbTkS#dZ#WWis#_WVSnb4@/BO3[X]WT_mmg:'pPL-'*_-EN*XT(l)&Xa\`Sk6ab,
%\V?O^pb()_-p@bVKG=Fh]egc#2t-MTg8Kg7'SRC`MVm%3,uC/%Io)/JKe@Ku&PERc"NVMhflbj\hKlu9[CN#u*S\XFL#)QD"bb?c
%^OXO3hlo6Kai3F@)>t6nU.?(3K;'C`c7*I'8F3EiHi3]Um.T;N!*/TF2W)qkQko9lKRZnhMk\nt\$!M"^d#rVf^*qLjNW_"RuJ9.
%Q6^NVa\kK<)ALWO[FC;+`nF;A[+(2*`d:XeB;m'G$P%5`9+@;'.!+aTQ5VO-OL]O79+@;'S?qgEQ5VO-O:+ZpWUZfgO<<66h:UZ4
%^J(.8q[X%?+j5FpG+doP4?YF&?19J+dP&k^-`Y#/A]$:?G;FL5*hZKf4L4LI0[X@N`m3"_-Tsqe79kO,7;BnFs-;u+#pd(m1/'X]
%9M40<Y.<l'`L1soetoBgh#^VUKcN&,8Km>LK_8g&0M083H?,jYgdVt7As4'7A_(&%[YW0/LRad]J)j=-#[i<_g(5ai.@p:NJ1k<G
%Bq-i*nT>4gqi'gO7)UiXnD:q`*j^-)gB-M&D`Hj!4KBn8oG-4g*jGOr-adfR/7^uHr[HEU*7;pjXrQGAO0@)C8Z$Muf@iQ,'lpF`
%QAa>ZbJl'c'5O.@*ke"X'hEj\#j$JtRh8*.J7`TRR[8co;E6,lnH<319m*/!Rerh=`#kIga\+nmJY`Me0D%3IM^X:hQFb2>!sX;S
%Z'kFU4$2^;#\m6/IS1*QihIlUEXJ351opO+$KK!q"3(!R(fX?_6e7Q-+YYeEkP?tVO?rgSeGfkYH`OA^[9fMneeq[H14b.5-Hpu_
%+,0!<V:a;*))1-@h[IF0eORp1E8A]/ES"_e"k.<`.M;L!Sn:M3>j#h%L0fOVc5A!A2..J*=25=@m"">IpG$#iC1b`ir?+Bk5H>=M
%C?D'>3^tfR,C@3.`O1+)2PW56H:m![<gSd`&:4#nB(KF!9(%LW:;*PMF/$,Qj;617<]Zn@QL%hj#Brp6Z]Rpsn>nW%+%$2^RWI1d
%R$g`JeuJ9rX"aMHeI'j3KdQ5oDt*kpMa/6&[K9ise*80f$Gi4d:u2*jm&o7B^q._(*fO9[=,!ZlcXHmts(TRiZHhW5':;&2%^\Pn
%!rO8>O@'REX/DJCUHX,emc*@DIfUj]@><Ogm;G@%fBmBo]3_`e%P3S8Y&W6TqXNTHgK.F%U4K(geZFOf.uesg=#eR^=(aY(AEO(s
%PM:d<e0F@0OZX0o<M$^7'dK?N7&E!mIrVMI-SPrjXg_#4G[sus1XK1%c=t[P5!C>XrS_-fdHXJRX)uYo`E.1U9DrJ`?<5*,dg7XG
%^mr^29M-qa)dqG&XXeoS?4u,=O^_9D$pQFi1O38-H5Lg0l><581K/$I??YkKQU4tCm?#e6a!W&3[8CeYg\O!)!]<L7?&e=f>R1XM
%(eKM%BE,a/NjPj(?2:%4nfQZ8cp5ELP%DbBI?9NjL![,k:nZL2![1-&GeO(MG=Ia^,UOfgkM4Jfep&HUR2O7]q8lld0+15p0HFld
%8PW2TSC)3@\Mfg`\nZ!3csoZ5igt<DU\(!7RetjQ:MNt2P<5g8o8*Csmqim7dDk`JUUUoSgH@^3YMC9rRG=#jAgEL]T>7pOpp/B3
%Li:='F#.O.p1@/]s%6r`X'aROQ3X>NAi07kMtTlaG`Rm6h<a+0=+_Kpls?[Y>(<eX-bYDf?RrLlI(As"qmqZNk!aAgArrm),$I:r
%_J$]R-d%VO!(Q=9MgVkg?]7lG&D#3R5?G2E[^LdOO%Lt&^e/hQQTA6r+l?q]\XP5gEaq7Z<um1Pe/-O0^4?1<djM[Vs!q]jY4ZEH
%rS3QPIu\g)pD;oBCq"2TK3/@p,$V(Qe/F"\J(DMI3dYPo:e^`\Lj!ZYm=!;.i<qN.=>Fpt]D4.q<]j>b^WqJLlj<9pBf`_qIH0GE
%_7R%IGYc:IDo;Vp3k[c'K,GCkknGJ^9_m-=CV^t^^@/n$XY+'dQLY70`a^miA(oTK:jpni9N@!RFj6a='b=4,G-R-*$',Mpe5.cS
%BXsBg$/N?>nW^?7h&4kKCNHaW9T,KKkI-C4^B20kkn4E2U!CmhYqYA/bab'/r2*_tcX*fpo3$O5YFsq>?-K1*&+_T2Vrg#oemGsi
%o$R-u!U9`2&mSci?K(2c/H6r=,(kO;:Q(Tj\.F_Oba,Ha=DmrWpm>6Z$iOA'N=BUbgL`CqG7=0/FM%Ai/Bc_\c;Rf4OmLV6M14!f
%nQ,qPKSY,:"EV7GloWWYD8WM])J$UEV8L+8md2Mp(G<#5b12rj(S7!"c0;)=bX`:I3Su;Ed6Dal7#cq>[%)!Pj<NPU:pIEB:BQSQ
%d">ZXr6WVda+Hnjf7eF8hZbQ1/iAh6l^$->%"I45Wt*celkGcWXee^./6-QV5-"`Cn$dB2PE",Ic+W(@2a"W2Har][2\ruup#7Pm
%IZALBcJ<]P2R:dmB8,&g$0C`<mB(]2c1Sr)4,?BM:)6XB<3bC=YA[#?/6>'[XgC--O.gJS'2(W$Y?YG(ac$u?)s,&B/&Bh5`a6st
%h0(.m*jVBlMk6sH!^dKIk,3*urtIQ.co!YCo5OVIAKB[IX!fOk-_6XV@adh;l`Jb*X2#rsU+eXH'9BD-fEXWIo3q5!58g67R0"`@
%CeR1Qfk,R%r2NRT.e'AoSSM9+p:c9dQc"3W1sa$J7CcQdAtq;KXgdN&C?4+B_)m%2@6VbgEsiqTk3BoV*jN9'\2lE!'n2l_4g2J%
%?a&)XRlBa4pAF[`]R<Vs=7R*C4hGQJ-[]F/plr+a;_s9N;bqHmodB-tH[Y2I(;;ZS/`hS=p$.p8%lQb^ho%=u1L&%hYP71r</bk]
%DBCt)3]n'9Jn7)gI[T:,g+rY[rUX/,%nZ#<TJ.XsmqaPfmGC?0'AOBRYV08-kAK/$Sa+dL<dT'&B6P[%l0?ldI`4DbMJ9H+$h%s@
%F6c':fj`P.hjmRX#*1LtQU+Dqm^QSR<U&M$@s97HrGh9k"`]:34L>gB2!.Bgic]D6(Q)*HZ$4dC_3/lkV[3TNcNTFFi*`o_eAm]k
%l/:`m6S<P3id3BXTd1#2Kn>/q<(/aOLU4+hI'ZXq$hM.X`U%33;X?.mm9]h:?1+fM)@,8kf=)^jH^?7mB:g:QS-!NU#46!$[?:8.
%^ZV)O]:+V]VgAe+NoS<3/`44pro!;"%_f9W[Br]dI&uDr]A!tb7Rq[=%;.DB<1(9Sajb7<fLBI#)lXP[CFb*M&?!(mWmNlXGAaj@
%5fcN6mH?g8f15S[+p[WOP?a0"bNKr20'9Iul"-6e<\AJ4nSC&_VZCnl*8L3$$8:S2XijJEqPW"Bbn*PJ3:MR8Kl7PQ/]p'f3'rNW
%(E%pDOa4!`0#7$u[Qhi?ed%Pt:::,B>#DNPDXmL#hHI0@Fr@OA>8cXg;[.?R26RYSb1KYF!?E\K^Il8G'A4F5It:rb,>;4"m5RGl
%+$q5rcLuo!?*\lN4QpIXMYIGO/*K"mPZ3iTkms)giT^bX^Fe'k[Eb^niE2'RgkFIF$Cam^/P:gnLek+A37)Y^i_a/V8o:3:PRq3U
%S.]^2,2e'`&S+$^,61I5^5RT8LC:n.;MYT,#`G-PL#CqB#*bNCCtG@S=3%VR)>@DeCl8lR"Aco:e-rsBjWY2PF;i?]R)6:@&G*:%
%V"oOqC20kiJS\\<C(Zh@Ar^kFHj=tK;bphbcd_Tu%YlbGS5'msMjMf=+d<rW3lL\#W@jqb/g\=C]JMQp*n9,>Lt@.rV?Yn5C8f?N
%j8gN"a'-Ic:/'_:nl*Nm:%M;]dJO4Mgfcl]FSgPS!0AR+jR8<WTgie:ZSM,Ql"%q[h8FKWg:UAamic91HFR?tKQ'NU_B&o_15oR/
%,\$Yb%u;4(9B^]Wp8($3P;_N#>&=E=\<L<UfH.4(+P<>H7nt>V$dY,tR@XC[;HsN?$^X[qS(`lH5(hK/YH(ki%QK]+*',i$a5]9E
%Jrq\+Ak!T\gn`,cEUbg;::F`DKKir)=Q71DbIe7g\T!5jc"!ULAZ'*NEk-!,7.3Ec:ds/:Tf4_@^%+Y:ftQXJ5=u'I3A?DW&if=i
%o)l^i`/jFgGh:.HhSm[c]@7/U_W<$;"_ta[_Z1iCSR[%;fL-(2)!9g)"shX+\]=JU/rI'q!@p^s"LGX\(!S8SBcEF,I2&ooj80&%
%J_2saOiL]/oP>u\YQ@6O!==Jl_*!hH'^C"kEqE<<:F2N7FkmdnTtl`9V!U_3a.%[/Kn604T845=@nT,0E8M3t*'Q-8OjQ??RjKaX
%$liW9&_7\X+e`G?4.1<3UNq&-,pLMf$%g9C@I8maSQI4&RnS9!<HN*?3A/g9jn9[sCBM9/2>+KhZHZjAg6)N6:nQF4c[hN1#]ZLf
%JDfXY+sQ0%HuWFV!k,?ghtEk_Uc)^b<SB)"8??s,4YCHuLUnCT/KGQ)%a^@L\ema^dL?;%E09W9ar6*:fL\?3:t<)'<C.r@[9OSf
%B6;5fB-bFCQ-^)K(3.KD%+UL?(=dEO/Nm(2#Rh<q.@>1QnmV?tUrPck\-*KHK'Ua1eHCZ('Z.g9i%>,N$QnAI=""h2!`kJ:*pJ=H
%Jlr8'URmAO(]faS3@@ERE%$eu`R]S5#[k[+#9&@&=Ku`D?+@+#@V_X%;J:[_oamd;Mh<.9J>")P!bl^P?X-/[`:jSgog1JX<l[M5
%TI#];&m/gpfMdmh4\NIF]lrm([:a#ae)eur<OD[/r<]8SnK4Ms&SE#r5[>!$O[o#^<.,Djdl"#Mc<t3/W+2tG0PHGk!lQ:K"!oK`
%@:U4/4j%er5/!%)p;#@L.#B5%'+X,s1:^R3%EnAs;FiPDQnDj*^l2-uQ-hmgd#=)pgE89WGjU0qc`,0J%Ohm]hO"d?>rp4m;<\M8
%'9$bu4Q5d,cDj$,)eZ0/BE8)HTlHqV`K`2HCaW2R@\W;L?tL)!)gq?qdVa/Aiq'9"B9KWk[QA!B2AOP_%qD$lpb:A8I9NDf6MZHY
%I=X9uBFWh=<K(\%7ptht4t)[KO'0.'"nqrB@R_'*?"=..1N#a*W49i-e7IWjP0@KX9TjtV+-U49?9=kKMb#TZUc:aQC=jG7mSjg+
%o&4k7r\dQ'0QNHO4=nT>LlG'5!3r(kq7eK&bgaSogCZ(bahhWd)j:C38\cU664u%FT[j6>&ud`!nHu0RnsNIak&I(IKA(fPY!T5s
%%)a<k$-SCVR\ioM-;qI2CBo"dB6n0o$tb.ZH;[M8Fq;9i?th;:/Ia=SD._iD(f,_jN`6ECV;3sOAil]p-?l]DQ*V49Km@R_,pR/\
%Dc8qrUQ5&tL7%@]g<V3a7V>=\ic?t.CabcD[2om4VHWBapH2o`p2L+`A:N`/2]</=8P4r/Bs0).L%Ji7g$(ECjClJ)3M358>I'.X
%EfTZXk*b0%n>(t@cd?CjGtQ@#&FgTfe;E<b1W>l@K,-KW'rbHT%$pNl[FID)="i;F(2_l.s512`SIThOfn3L0X5CRDiA[mnTAAB1
%_+J-iFLpsQ,;o'GEQ9)O~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -150 1089 a
 /End PSfrag
 -150 1089 a -150 -393 a
 /Hide PSfrag
 -150
-393 a -847 -338 a Fg(PSfr)o(ag)20 b(replacements)p -847
-309 697 4 v -150 -306 a
 /Unhide PSfrag
 -150 -306 a -178 -246 a
  {
 -178
-246 a Black -206 -220 a Ff(a)p Black -178 -246 a
  } 0/Place PSfrag
 -178
-246 a -180 -168 a
  {
 -180 -168 a Black -210 -132 a Ff(b)p
Black -180 -168 a
  } 1/Place PSfrag
 -180 -168 a -652 -79 a
  {
 -652 -79 a Black
Blue 19 x Fg(photon)e(n)o(umber)p Black Black -652 -79
a
  } 2/Place PSfrag
 -652 -79 a -631 15 a
  {
 -631 15 a Black Cerulean 27 x
Fg(tr)o(ansmon)h(le)n(v)n(el)p Black Black -631 15 a
  } 3/Place PSfrag

-631 15 a -175 114 a
  {
 -175 114 a Black -200 130 a Fe(\013)p
Black -175 114 a
  } 4/Place PSfrag
 -175 114 a -312 180 a
  {
 -312 180 a Black
19 x Fd(j)p Blue Fc(0)p Black 1 w(,)p Cerulean 13 w(0)p
Black Fd(i)p Black -312 180 a
  } 5/Place PSfrag
 -312 180 a -312 267 a
  {
 -312
267 a Black 19 x Fd(j)p Blue Fc(1)p Black 1 w(,)p Cerulean
13 w(0)p Black Fd(i)p Black -312 267 a
  } 6/Place PSfrag
 -312 267 a -312
354 a
  {
 -312 354 a Black 19 x Fd(j)p Blue Fc(2)p Black
1 w(,)p Cerulean 13 w(0)p Black Fd(i)p Black -312 354
a
  } 7/Place PSfrag
 -312 354 a -312 442 a
  {
 -312 442 a Black 18 x Fd(j)p
Blue Fc(0)p Black 1 w(,)p Cerulean 13 w(1)p Black Fd(i)p
Black -312 442 a
  } 8/Place PSfrag
 -312 442 a -312 529 a
  {
 -312 529 a Black
18 x Fd(j)p Blue Fc(1)p Black 1 w(,)p Cerulean 13 w(1)p
Black Fd(i)p Black -312 529 a
  } 9/Place PSfrag
 -312 529 a -312 616 a
  {
 -312
616 a Black 19 x Fd(j)p Blue Fc(0)p Black 1 w(,)p Cerulean
13 w(2)p Black Fd(i)p Black -312 616 a
  } 10/Place PSfrag
 -312 616 a -317
710 a
  {
 -317 710 a Black -484 732 a Fb(~)p Fe(!)-394 740
y Fa(r)-350 732 y Fc(=)i Fb(~)p Fe(!)-179 740 y Fa(a)p
Black -317 710 a
  } 11/Place PSfrag
 -317 710 a -195 790 a
  {
 -195 790 a Black
-240 809 a Fd(j#i)p Black -195 790 a
  } 12/Place PSfrag
 -195 790 a -195
877 a
  {
 -195 877 a Black -240 896 a Fd(j"i)p Black -195
877 a
  } 13/Place PSfrag
 -195 877 a -299 969 a
  {
 -299 969 a Black 18 x Fc(2)p
Fb(~)p Fc(g)-181 995 y Fa(0)p Black -299 969 a
  } 14/Place PSfrag
 -299 969
a -482 1048 a
  {
 -482 1048 a Black 27 x Fd(')g Fc(2)-363
1012 y Fd(p)p -299 1012 39 4 v 63 x Fc(2)p Fb(~)p Fc(g)-181
1083 y Fa(0)p Black -482 1048 a
  } 15/Place PSfrag
 -482 1048 a Black Black
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
